function layoutempty() {
    var lylen = $(".cs-pb-ly-droparea .cs-at-layoutcontroweach").length;
    if (lylen >= 1) {
        $(".cs-pb-create-board").removeClass("cs-pb-empty");
    } else {
        $(".cs-pb-create-board").addClass("cs-pb-empty");
    }
}
function autoScrolling(thisDiv) {
    var getPos = $(".cs-pb-create-board .cs-at-box").height();
    $(thisDiv).sortable("refreshPositions");
    var currentScrollTop = $(".cs-pb-create-board .cs-at-box").scrollTop();
    if(event.pageY < 150) {
        setTimeout(function() {
           $(".cs-pb-create-board .cs-at-box").scrollTop(currentScrollTop - 5);
        }, 5);
    }
    else if (event.pageY > getPos + 50) {
        setTimeout(function() {
           $(".cs-pb-create-board .cs-at-box").scrollTop(currentScrollTop + 5);
        }, 5);
    }
}
function contMainSortable() {
    $(".cs-at-layouttogglecontentmain").sortable({
		connectWith: ".cs-at-con-drop-area,.cs-iterationActivity",
        axis: "y",
        helper:'clone',
        items: ">.cs-at-layoutcontroweach:not(.cs-at-layouttogglecontentmain)",
        sort: function(event, ui) {
            autoScrolling($(this));
            toggleDropArea();
        },
        start: function(event,ui){
            console.log( $(ui.item[0]).parent('.cs-at-layouttogglecontentmain'))
           $(ui.item[0]).closest('.cs-at-layouttogglecontentmain').addClass('activeParent')
        },
      
        stop: function(event,ui){
            console.log('ui...',ui);
            console.log(ui.item[0].closest('.cs-at-layouttogglecontentmain'));
            if(!($(ui.item[0]).closest('.cs-at-layouttogglecontentmain').hasClass('activeParent'))){
                $('.activeParent').removeClass('activeParent');
                $(this).sortable( "option", "revert", true );
                return false
            }
            if($(ui.item[0]).parent().hasClass('cs-at-layouttogglecontentmain')){
                $('.activeParent').removeClass('activeParent');
                $(this).sortable( "option", "revert", true );
                return false
            }
            $('.activeParent').removeClass('activeParent');
        }
    });
    $(".cs-pb-ly-droparea").sortable({
		connectWith: ".cs-at-layouttogglecontentmain,.cs-at-con-drop-area,.cs-iterationActivity,.cs-pb-ly-droparea",
        axis: "y",
        items: ".cs-at-layoutcontroweach:not(.cs-pb-notsortable):not(.cs-at-con-if):not(.cs-at-con-elseif):not(.cs-at-con-if-else):not(.cs-at-con-endif):not(.cs-addRowSty):not(.cs-remRowSty):not(.cs-uptRowSty):not(.cs-filRowSty):not(.cs-mergeRowSty):not(.cs-eachRowSty):not(.cs-excel-act-child):not(.cs-excel-manipulation-act):not(.cs-excel-advanced-act):not(.cs-excel-delete-act):not(.cs-excel-filter-act):not(.cs-excel-read-act):not(.cs-excel-chart-act):not(.cs-excel-insert-act):not(.cs-excel-save-act):not(.cs-excel-write-act)",
        sort: function(event, ui) {
            autoScrolling($(this));
        }
    });
    $(".cs-DataTable").sortable({
		connectWith: ".cs-at-layouttogglecontentmain,.cs-at-con-drop-area,.cs-DataTable",
        axis: "y",
        items: ".cs-at-layoutcontroweach:not(.cs-pb-notsortable):not(.cs-at-con-if):not(.cs-at-con-elseif):not(.cs-at-con-if-else):not(.cs-at-con-endif)",
        sort: function(event, ui) {
            autoScrolling($(this));
        }
    });
    $(".cs-excel-auto-act-child").sortable({
		connectWith: ".cs-at-layouttogglecontentmain,.cs-at-con-drop-area,.cs-excel-auto-act-child",
        axis: "y",
        items: ".cs-at-layoutcontroweach:not(.cs-pb-notsortable):not(.cs-at-con-if):not(.cs-at-con-elseif):not(.cs-at-con-if-else):not(.cs-at-con-endif)",
        sort: function(event, ui) {
            autoScrolling($(this));
        }
    });
    $(".cs-eachRowSty").sortable({
		connectWith: ".cs-at-layouttogglecontentmain,.cs-at-con-drop-area,.cs-eachRowSty",
        axis: "y",
        items: ".cs-at-layoutcontroweach:not(.cs-pb-notsortable):not(.cs-at-con-if):not(.cs-at-con-elseif):not(.cs-at-con-if-else):not(.cs-at-con-endif)",
        sort: function(event, ui) {
            autoScrolling($(this));
        }
    });
    $(".cs-excel-read-act-child").sortable({
		connectWith: ".cs-at-layouttogglecontentmain,.cs-at-con-drop-area,.cs-excel-read-act-child",
        axis: "y",
        items: ".cs-at-layoutcontroweach:not(.cs-pb-notsortable):not(.cs-at-con-if):not(.cs-at-con-elseif):not(.cs-at-con-if-else):not(.cs-at-con-endif)",
        sort: function(event, ui) {
            autoScrolling($(this));
        }
    });
    $(".cs-iterationActivity").sortable({
		connectWith: ".cs-at-layouttogglecontentmain,.cs-at-con-drop-area,.cs-iterationActivity",
        axis: "y",
        items: ".cs-at-layoutcontroweach:not(.cs-pb-notsortable):not(.cs-at-con-if):not(.cs-at-con-elseif):not(.cs-at-con-if-else):not(.cs-at-con-endif)",
        sort: function(event, ui) {
            autoScrolling($(this));
        }
    });
    $(".cs-at-con-drop-area").sortable({
		connectWith: ".cs-at-layoutcontroweach,.cs-at-layouttogglecontentmain,.cs-at-con-drop-area,.cs-iterationActivity",
        axis: "y",
        items: ".cs-at-layoutcontroweach:not(.cs-pb-notsortable):not(.cs-at-con-if):not(.cs-at-con-elseif):not(.cs-at-con-if-else):not(.cs-at-con-endif)",
        sort: function(event, ui) {
            autoScrolling($(this));
        },
        start: function(event,ui){
            console.log( $(ui.item[0]).parent('.cs-at-layouttogglecontentmain'))
           $(ui.item[0]).closest('.cs-at-layouttogglecontentmain').addClass('activeParent')
        },
        stop: function(event,ui){
            console.log('ui...',ui);
            console.log(ui.item[0].closest('.cs-at-layouteachmain'));
            if(!($(ui.item[0]).closest('.cs-at-layouttogglecontentmain').hasClass('activeParent'))){
                $('.activeParent').removeClass('activeParent');
                $(this).sortable( "option", "revert", true );
                return false
            }
            if($(ui.item[0]).parent().hasClass('cs-at-layouttogglecontentmain')){
                $(this).sortable( "option", "revert", true );
                return false
            }
        }
    });
    // $(".cs-at-layouteachmain.cond-layout-sibling-active .cs-at-layouttogglecontentmain").sortable({
	// 	connectWith: ".cs-at-layouteachmain.cond-layout-sibling-active >.cs-at-layouteachmain",
    //     axis: "y",
    //     items: ".cs-at-layoutcontroweach:not(.cs-pb-notsortable):not(.cs-at-con-if):not(.cs-at-con-elseif):not(.cs-at-con-if-else):not(.cs-at-con-endif)",
    //     sort: function(event, ui) {
    //         autoScrolling($(this));
    //         toggleDropArea();
    //     }
    // });
    // $(".cs-at-layouteachmain.cond-layout-active .cs-conditionnActivity .cs-at-layouttogglecontentmain").sortable({
	// 	connectWith: ".cs-at-layouteachmain.cond-layout-active >.cs-at-layouteachmain",
    //     axis: "y",
    //     items: ".cs-at-layoutcontroweach:not(.cs-pb-notsortable):not(.cs-at-con-if):not(.cs-at-con-elseif):not(.cs-at-con-if-else):not(.cs-at-con-endif)",
    //     sort: function(event, ui) {
    //         autoScrolling($(this));
    //         toggleDropArea();
    //     }
    // });
}
function toggleDropArea() {
    $(".cs-at-con-drop-area").each(function() {
        if($(this).find("> .cs-at-layoutcontroweach").length == 0) {
            $(this).removeClass("cs-contitional-act");
        }
        else {
            $(this).addClass("cs-contitional-act");
        }
    });
}
function droptoGetThisActivityData(activeClass, activityType, displayName, layoutId) {
    // console.log( activeClass," :::: ", activityType," :::: ", displayName," :::: ", layoutId );
    if ($(activeClass).hasClass("cs-conditionnActivity")) {
        $(activeClass).data("eachActivityVO", {
            "conditionalActivitySet": []
        });
    } 
    else {
        if (activityType == "If" || activityType == "Else" || activityType == "ElseIf") {
            $(activeClass).data("eachActivityVO", {
                "playbackId": "",
                "createdBy": "",
                "activityIndex": "",
                "lastModifiedBy": "",
                "parentActivityId": "",
                "activityType": "Condition",
                "createdOn": "",
                "playbackName": "",
                "playbackActivityId": "",
                "lastModifiedOn": ""
            });
        } else {
            $(activeClass).data("eachActivityVO", {
                "playbackId": "",
                "createdBy": "",
                "activityIndex": "",
                "lastModifiedBy": "",
                "parentActivityId": "",
                "activityType": activityType,
                "createdOn": "",
                "playbackName": "",
                "playbackActivityId": "",
                "lastModifiedOn": ""
            });
        }
    }
    
    if ($(activeClass).data("eachActivityVO").conditionalActivitySet == undefined) {
        
        if (activityType == "Layout") {
            $(activeClass).data("eachActivityVO").layoutActivityVO = {
                "createdBy": "",
                "lastModifiedBy": "",
                "playbackActivityVOs": [],
                "layoutActivityId": "",
                "layoutId": layoutId,
                "createdOn": "",
                "playbackActivityId": "",
                "lastModifiedOn": "",
                "layoutName": displayName,
                "description": "",
				"setHeader":""
            };
        } else if (activityType == "OpenURL") {
                $(activeClass).data("eachActivityVO").openURLActivityVO = {
                    "openURLActivityId": "",
                    "playbackActivityId": "",
                    "urlType":"Constant",
                    "URL": "",
                    "isActive": "",
                    "createdBy": "",
                    "createdOn": "",
                    "lastModifiedBy": "",
                    "lastModifiedOn": "",
                    "functionName":"",
                    "functionId": "",
                    "responsibilityName": "",
                    "responsibilityId": "",
                    "applicationName": "",
                    "applicationId": "",
                    "securityGroupName": "",
                    "securityGroupId": "",
                    "languageShortName": "",
                    "languageCode": "",
                    "urlParamValue": ""

                }
        } else if (activityType == "Verification") {
            // alert("146")
                $(activeClass).data("eachActivityVO").verificationActivityVO = {
                    "message": "",
                    "lastModifiedBy": "",
                    "customExpression": "",
                    "isActive": "",
                    "createdOn": "",
                    "operator": "",
                    "lastModifiedOn": "",
                    "rightExpressionType": "Variable",
                    "leftExpressionType": "Variable",
                    "rightExpressionValue": "",
                    "leftExpressionValue": "",
                    "condition": [] ,
                    "createdBy": "",
                    "isScreenshotRequired": "Y",
                    "expressionType": "Standard",
                    "verificationActivityId": "",
                    "playbackActivityId": ""
                }
        } else if (activityType == "Assertion") {
                $(activeClass).data("eachActivityVO").assertionActivityVO = {
                    "message": "",
                    "lastmodifiedOn": "",
                    "lastmodifiedBy": "",
                    "customExpression": "",
                    "isActive": "",
                    "createdOn": "",
                    "operator": "",
                    "rightExpressionType": "Variable",
                    "leftExpressionType": "Variable",
                    "rightExpressionValue": "",
                    "leftExpressionValue": "",
                    "condition": [] ,
                    "assertionActivityId": "",
                    "createdBy": "",
                    "expressionType": "Standard",
                    "playbackActivityId": ""
                }
        } else if (activityType == "Assignment") {
                $(activeClass).data("eachActivityVO").assignmentActivityVO = {
                    "variableValue": "",
                    "createdBy": "",
                    "valueType": "Element",
                    "lastModifiedBy": "",
                    "assignmentActivityId": "",
                    "isActive": "",
                    "variableId": "",
                    "variableName": "",
                    "createdOn": "",
                    "playbackActivityId": "",
                    "lastModifiedOn": ""
                }
        } else if (activityType == "Iteration") {
                $(activeClass).data("eachActivityVO").iterationActivityVO = {
                    "playbackActivityVOs": [],
                    "createdBy": "",
                    "iterationCountValue": "",
                    "lastModifiedBy": "",
                    "iterationActivityId": "",
                    "isActive": "",
                    "iterationCountType": "Constant",
                    "createdOn": "",
                    "playbackActivityId": "",
                    "lastModifiedOn": ""
                }
        } else if (activityType == "If") {
                $(activeClass).data("eachActivityVO").conditionalActivityVO = {
                    "playbackActivityVOs": [],
                    "lastModifiedBy": "",
                    "clauseType": "If",
                    "customExpression": "",
                    "isActive": "",
                    "createdOn": "",
                    "lastModifiedOn": "",
                    "operator": "",
                    "rightExpressionType": "Variable",
                    "leftExpressionType": "Variable",
                    "leftExpressionValue": "",
                    "condition": [] ,
                    "rightExpressionValue": "",
                    "conditionActivityId": "",
                    "createdBy": "",
                    "expressionType": "",
                    "parentConditionActivityId": "",
                    "playbackActivityId": ""
                }
        } else if (activityType == "Else") {
                $(activeClass).data("eachActivityVO").conditionalActivityVO = {
                    "playbackActivityVOs": [],
                    "lastModifiedBy": "",
                    "clauseType": "Else",
                    "customExpression": "",
                    "isActive": "",
                    "createdOn": "",
                    "lastModifiedOn": "",
                    "operator": "",
                    "rightExpressionType": "Variable",
                    "leftExpressionType": "Variable",
                    "leftExpressionValue": "",
                    "condition": [] ,
                    "rightExpressionValue": "",
                    "conditionActivityId": "",
                    "createdBy": "",
                    "expressionType": "",
                    "parentConditionActivityId": "",
                    "playbackActivityId": ""
                }
        } else if (activityType == "ElseIf") {
                $(activeClass).data("eachActivityVO").conditionalActivityVO = {
                    "playbackActivityVOs": [],
                    "lastModifiedBy": "",
                    "clauseType": "ElseIf",
                    "customExpression": "",
                    "isActive": "",
                    "createdOn": "",
                    "lastModifiedOn": "",
                    "operator": "",
                    "rightExpressionType": "Variable",
                    "leftExpressionType": "Variable",
                    "leftExpressionValue": "",
                    "condition": [] ,
                    "rightExpressionValue": "",
                    "conditionActivityId": "",
                    "createdBy": "",
                    "expressionType": "",
                    "parentConditionActivityId": "",
                    "playbackActivityId": ""
                }
        }else if (activityType == "Condition") {
            $(activeClass).data("eachActivityVO").conditionalActivityVO = {
                "playbackActivityVOs": [],
                "rightExpressionType": "",
                "lastModifiedBy": "",
                "clauseType": "",
                "customExpression": "",
                "isActive": "",
                "createdOn": "",
                "lastModifiedOn": "",
                "leftExpressionType": "",
                "leftExpressionValue": "",
                "condition": [] ,
                "rightExpressionValue": "",
                "conditionActivityId": "",
                "createdBy": "",
                "expressionType": "",
                "parentConditionActivityId": "",
                "playbackActivityId": ""
            }
        }else if (activityType == "Entail") {
            $(activeClass).data("eachActivityVO").entailPlaybackVO = {
                "playbackId": "",
                "createdBy": "",
                "lastModifiedBy": "",
                "entailPlaybackId": "",
                "isActive": "",
                "createdOn": "",
                "playbackName": "",
                "displayName": "",
                "leftEntailPlaybackName": $(".cs-at-box-playbackhead > .cs-at-box-head-field").text(),
                "leftEntailPlaybackId":"",
                "playbackActivityId": "",
                "lastModifiedOn": "",
                "variablesVOs": [],
                "entailPlaybackParamsVOs": []
            }
    
        }else if (activityType == "Image") {
            // console.log($(activeClass).data("eachActivityVO"));
            
            $(activeClass).data("eachActivityVO").elementActivityVO = {
                  "elementActivityId": "",
                  "copyElement": "",
                  "jqueryWait": "",
                  "actionValue": "",
                  "dropXOffset": "",
                  "lastModifiedBy": "",
                  "layoutElementId": "",
                  "elementTimeout": "",
                  "createdOn": "",
                  "lastModifiedOn": "",
                  "dropImageId": "",
                  "layoutElementsVO": {
                    "isInnerFrame": "",
                    "parameterType": "",
                    "locatorValue": "",
                    "dataType": "",
                    "layoutElementId": "",
                    "elementIndex": "",
                    "isActive": "",
                    "layoutId": "",
                    "elementName": displayName,
                    "xpathType": "",
                    "locatorType": "",
                    "timeoutValue": "",
                    "elementType": "projectimage",
                    "isMandatory": ""
                  },
                  "createdBy": "",
                  "elementAction": "",
                  "dynamicIdValue": "",
                  "layoutElementName": "",
                  "dropYOffset": "",
                  "playbackActivityId": "",
                  "actionValueType": "Element"
                }
    
        }
        else if (activityType == "ScreenShot") {
            $(activeClass).data("eachActivityVO").screenShotActivityVo = {
                "playbackActivityId": "",
                "screenShotActivityId":"",
				"fileName": "",
                "createdBy":"",
                "createdOn":"",
                "lastModifiedBy":"",
                "lastModifiedOn":""
            }
        }

        else if (activityType == "Logout") {
            $(activeClass).data("eachActivityVO").logoutActivityVo = {
                "playbackActivityId": "",
                "screenShotActivityId":"",
                "createdBy":"",
                "createdOn":"",
                "lastModifiedBy":"",
                "lastModifiedOn":""
            }
        }
        else if (activityType == "Login") {
            $(activeClass).data("eachActivityVO").loginActivityVo = {
                "loginActivityId": "",
                "playbackActivityId": "",
                "userName": "",
                "password": "",
                "createdBy": "",
                "lastModifiedBy": "",
            }
        }
        else if (activityType == "csFileAct") {
            $(activeClass).data("eachActivityVO").FileActivityVo = {
                "loginActivityId": "",
                "playbackActivityId": "",
                "filetype": "",
                "source": "",
                "target": "",
                "lastModifiedBy": "",
            }
        }
        else if (activityType == "csAddRow") {
            $(activeClass).data("eachActivityVO").AddRowActivityVo = {
                "loginActivityId": "",
                "playbackActivityId": "",
                "target": "",
                "rowtype": "",
                "addrowexpression": "",
                "addname": "",
                "sprintname": "",
                "conectionname": "",
                "versionname": "",
                "addnameType": "",
                "sprintnameType": "",
                "conectionnameType": "",
                "versionnameType": "",
                "createdBy": "",
                "lastModifiedBy": "",
            }
        }
        else if (activityType == "csRemRow") {
            $(activeClass).data("eachActivityVO").RemRowActivityVo = {
                "loginActivityId": "",
                "playbackActivityId": "",
                "datatable": "",
                "rowtype": "",
                "rowindexval": "",
                "condition":[],
                "condion":"",
                "lastModifiedBy": "",
            }
        }
        else if (activityType == "csFilRow") {
            $(activeClass).data("eachActivityVO").FilRowActivityVo = {
                "loginActivityId": "",
                "playbackActivityId": "",
                "dataTable": "",
                "rowType": "",
                "rowIndexVal": "",
                "byValcondition":[],
                "byCondition":[],
                "createdBy": "",
                "lastModifiedBy": "",
            }
        }
        else if (activityType == "csMergeRow") {
            $(activeClass).data("eachActivityVO").MergeRowActivityVo = {
                "loginActivityId": "",
                "playbackActivityId": "",
                "Source": "",
                "Destination": "",
                "SourceAttr": [],
                "DestinationAttr": [],
                "MappedAttr": [],
                "allowDuplicate":"",
                "createdBy": "",
                "lastModifiedBy": "",
            }
        }
        else if (activityType == "csEachRow") {
            $(activeClass).data("eachActivityVO").EachRowActivityVo = {
                "playbackActivityVOs": [],
                "loginActivityId": "",
                "playbackActivityId": "",
                "foreach": "",
                "in": "",
                "createdBy": "",
                "lastModifiedBy": "",
            }
        }
        else if (activityType == "csUptRow") {
            $(activeClass).data("eachActivityVO").UptRowActivityVo = {
                "loginActivityId": "",
                "playbackActivityId": "",
                "dataTable": "",
                "rowType": "",
                "expression": "",
                "addname": "",
                "sprintname": "",
                "conectionname": "",
                "versionname": "",
                "addnameType": "",
                "sprintnameType": "",
                "conectionnameType": "",
                "versionnameType": "",
                "arrayRowCondition":[],
                "dataRowCondition":[],
                "createdBy": "",
                "lastModifiedBy": "",
            }
        }

        //Launch Browser 
        else if (activityType == "Launchbrowser") {
            $(activeClass).data("eachActivityVO").loginActivityVo = {
                "loginActivityId": "",
                "playbackActivityId": "",
                "userName": "",
                "password": "",
                "createdBy": "",
                "lastModifiedBy": "",
            }
        }

        else if (activityType == "Closebrowser") {
            $(activeClass).data("eachActivityVO").loginActivityVo = {
                "loginActivityId": "",
                "playbackActivityId": "",
                "userName": "",
                "password": "",
                "createdBy": "",
                "lastModifiedBy": "",
            }
        }
        else if (activityType == "DataTableActivity") {
            $(activeClass).data("eachActivityVO").dataTableActivityVo = {
                "playbackActivityVOs": [],
                "rightExpressionType": "",
                "lastModifiedBy": "",
                "customExpression": "",
                "isActive": "",
                "createdOn": "",
                "lastModifiedOn": "",
                "leftExpressionType": "",
                "leftExpressionValue": "",
                "activityTypeVo":[],
                "rightExpressionValue": "",
                "conditionActivityId": "",
                "createdBy": "",
                "expressionType": "",
                "parentConditionActivityId": "",
                "playbackActivityId": ""
            }
        }
        else if (activityType == "Hotkey") {
            $(activeClass).data("eachActivityVO").hotkeyActivityVo = {
                "hotkeyActivityId": "",
                "playbackActivityId": "",
                "hotkeyValue": "",
                "createdBy": "",
                "lastModifiedBy": ""
    }
        }
        else if (activityType == "explcit-wait-time") {
               $(activeClass).data("eachActivityVO").explicitActivityVO = {
                    "message": "",
                    "lastModifiedBy": "",
                    "customExpression": "",
                    "isActive": "",
                    "createdOn": "",
                    "operator": "",
                    "lastModifiedOn": "",
                    "leftExpressionType": "Variable",
                    "explicit-wait-time":"",
                    "leftExpressionValue": "",
                    "condition": [] ,
                    "createdBy": "",
                    "isScreenshotRequired": "Y",
                    "expressionType": "Standard",
                    "explct_wait_tymId": "",
                    "playbackActivityId": ""
                }
                
            }
            else if (activityType == "ExcelAutomationAct") {
                $(activeClass).data("eachActivityVO").excelAutomationActivityVo = {
                    "playbackActivityVOs": [],
                    "isActive": "",
                    "activityTypeVo":[],
                    "parentConditionActivityId": "",
                    "playbackActivityId": ""
                }
            }
            else if (activityType == "csExcelAct") {
                $(activeClass).data("eachActivityVO").excelSubActivityVo = {
                    "playbackActivityVOs": [],
                    "selectFileLocation":"",
                    "referencesName":"",
                    "createIfNotExists":"",
                    "saveChanges":"",
                    "isActive": "",
                    "activityTypeVo":[],
                    "parentConditionActivityId": "",
                    "playbackActivityId": ""
                }
            }
            else if (activityType == "csManupulationAct") {
                $(activeClass).data("eachActivityVO").excelManupulationActivityVo = {
                    "playbackActivityVOs": [],
                    "manupulationGroupText":"",
                    "appendRange": [],
                    "clearSheetRange": [],
                    "copyPasteRange": [],
                    "fillRange": [],
                    "findReplaceRange": [],
                    "isActive": "",
                    "activityTypeVo":[],
                    "parentConditionActivityId": "",
                    "playbackActivityId": ""
                }
            }
            else if (activityType == "csAdvancedAct") {
                $(activeClass).data("eachActivityVO").excelAdvancedActivityVo = {
                    "playbackActivityVOs": [],
                    "advancedGroupText":"",
                    "createPivotTable": [],
                    "lookup": [],
                    "runSpreadsheetMacro": [],
                    "invokeVBA": [],
                    "isActive": "",
                    "activityTypeVo":[],
                    "parentConditionActivityId": "",
                    "playbackActivityId": ""
                }
            }
            else if (activityType == "csDeleteAct") {
                $(activeClass).data("eachActivityVO").excelDeleteActivityVo = {
                    "playbackActivityVOs": [],
                    "deleteGroupText":"",
                    "deleteColumn": [],
                    "deleteRow": [],
                    "deleteSheet": [],
                    "isActive": "",
                    "activityTypeVo":[],
                    "parentConditionActivityId": "",
                    "playbackActivityId": ""
                }
            }
            else if (activityType == "csFilterAct") {
                $(activeClass).data("eachActivityVO").excelFilterActivityVo = {
                    "playbackActivityVOs": [],
                    "filterGroupText":"",
                    "Filter": [],
                    "filterPivotTable": [],
                    "isActive": "",
                    "activityTypeVo":[],
                    "parentConditionActivityId": "",
                    "playbackActivityId": ""
                }
            }
            else if (activityType == "csReadAct") {
                $(activeClass).data("eachActivityVO").excelReadActivityVo = {
                    "playbackActivityVOs": [],
                    "readGroupText":"",
                    "forEachExcelRow": [],
                    "readCellFormula": [],
                    "readCellValue": [],
                    "readRange": [],
                    "isActive": "",
                    "activityTypeVo":[],
                    "parentConditionActivityId": "",
                    "playbackActivityId": ""
                }
            }
            else if (activityType == "csChartAct") {
                $(activeClass).data("eachActivityVO").excelChartActivityVo = {
                    "playbackActivityVOs": [],
                    "chartText":"",
                    "getExcelChart": [],
                    "insertChart": [],
                    "isActive": "",
                    "activityTypeVo":[],
                    "parentConditionActivityId": "",
                    "playbackActivityId": ""
                }
            }
            else if (activityType == "csInsertAct") {
                $(activeClass).data("eachActivityVO").excelInsertActivityVo = {
                    "playbackActivityVOs": [],
                    "insertText":"",
                    "insertColumn": [],
                    "insertRows": [],
                    "insertSheet": [],
                    "isActive": "",
                    "activityTypeVo":[],
                    "parentConditionActivityId": "",
                    "playbackActivityId": ""
                }
            }
            else if (activityType == "csSaveAct") {
                $(activeClass).data("eachActivityVO").excelSaveActivityVo = {
                    "playbackActivityVOs": [],
                    "saveText":"",
                    "saveExcelFileAs": [],
                    "saveExcelFile": [],
                    "saveExcelFileAsPDF": [],
                    "isActive": "",
                    "activityTypeVo":[],
                    "parentConditionActivityId": "",
                    "playbackActivityId": ""
                }
            }
            else if (activityType == "csWriteAct") {
                $(activeClass).data("eachActivityVO").excelWriteActivityVo = {
                    "playbackActivityVOs": [],
                    "writeText":"",
                    "writeDataTable": [],
                    "writeCell": [],
                    "isActive": "",
                    "activityTypeVo":[],
                    "parentConditionActivityId": "",
                    "playbackActivityId": ""
                }
            }
    }
    
}

$(document).on("click",".grp-btn .btn-design",function() { 
    $('.btn-design').addClass('active');
    $('.btn-text').removeClass('active');
    $('.cs-pb-ly-droparea').removeClass('cs-hide');
    $('.cs-text-content').addClass('cs-hide');
});

$(document).on("click", ".cs-at-cr-parent-new", function() {
    resetjson();
    conEachActi();
});
function conEachActi() {
    if($(".cs-remRowSty").length){
        $(".cs-remRowSty").data("eachActivityVO").RemRowActivityVo.condition = [];
    }
    if($(".cs-uptRowSty").length){
        $(".cs-uptRowSty").data("eachActivityVO").UptRowActivityVo.arrayRowCondition = [];
    }
    if($(".cs-uptRowSty").length){
        $(".cs-uptRowSty").data("eachActivityVO").UptRowActivityVo.dataRowCondition = [];
    }
    if($(".cs-filRowSty").length){
        $(".cs-filRowSty").data("eachActivityVO").FilRowActivityVo.byValcondition = [];
    }
    if($(".cs-filRowSty").length){
        $(".cs-filRowSty").data("eachActivityVO").FilRowActivityVo.byCondition = [];
    }
    if($(".cs-mergeRowSty").length){
        $(".cs-mergeRowSty").data("eachActivityVO").MergeRowActivityVo.DestinationAttr = [];
    }
    if($(".cs-mergeRowSty").length){
        $(".cs-mergeRowSty").data("eachActivityVO").MergeRowActivityVo.SourceAttr = [];
    }
    if($(".cs-mergeRowSty").length){
        $(".cs-mergeRowSty").data("eachActivityVO").MergeRowActivityVo.MappedAttr = [];
    }
    $(".cs-addRowSty .cs-addrow-addrlist-par").each(function (index, value) {
        var addT = $(value).find(".cs-addname .cs-label-warning").text();
        var sprintT = $(value).find(".cs-sprintname .cs-label-warning").text();
        var connectionT = $(value).find(".cs-conectionname .cs-label-warning").text();
        var versionT = $(value).find(".cs-versionname .cs-label-warning").text();

        $(value).closest(".cs-addRowSty").data("eachActivityVO").AddRowActivityVo.addnameType = addT;
        $(value).closest(".cs-addRowSty").data("eachActivityVO").AddRowActivityVo.sprintnameType = sprintT;
        $(value).closest(".cs-addRowSty").data("eachActivityVO").AddRowActivityVo.conectionnameType = connectionT;
        $(value).closest(".cs-addRowSty").data("eachActivityVO").AddRowActivityVo.versionnameType = versionT;
       
    });

    $(".cs-removedatas").removeClass("cs-removedatas");
    $(".cs-remRowSty .cs-at-dd-exprs").each(function (index, value) {
                             if(!($(value).closest(".cs-remRowSty").hasClass("cs-removedatas")))
                             {
                                $(value).closest(".cs-remRowSty").data("eachActivityVO").RemRowActivityVo.condition = [];
                             }
                            var cond = $(value).find(".cs-pb-condion-label span").text();
                            var attrName = $(value).find(".cs-left-expr input").val();
                            var opr = $(value).find(".cs-operator input").val();
                            var attrVal = $(value).find(".cs-right-expr input").val();
                            var conArr = [];
                            conArr = {"condVal":cond,"attrName":attrName,"operator":opr,"attVal":attrVal};
                            console.log(conArr);
                            $(value).closest(".cs-remRowSty").data("eachActivityVO").RemRowActivityVo.condition.push(conArr);
                            $(value).closest(".cs-remRowSty").addClass("cs-removedatas");
    });

    $(".cs-uptRowSty .cs-upt-attr-par").each(function (index, value) {
        var addT = $(value).find(".cs-upt-addName .cs-label-warning").text();
        var sprintT = $(value).find(".cs-upt-sprintName .cs-label-warning").text();
        var connectionT = $(value).find(".cs-upt-connectionName .cs-label-warning").text();
        var versionT = $(value).find(".cs-upt-versionName .cs-label-warning").text();

        $(value).closest(".cs-uptRowSty").data("eachActivityVO").UptRowActivityVo.addnameType = addT;
        $(value).closest(".cs-uptRowSty").data("eachActivityVO").UptRowActivityVo.sprintnameType = sprintT;
        $(value).closest(".cs-uptRowSty").data("eachActivityVO").UptRowActivityVo.conectionnameType = connectionT;
        $(value).closest(".cs-uptRowSty").data("eachActivityVO").UptRowActivityVo.versionnameType = versionT;
       
    });
    $(".cs-uptRow-conDatas").removeClass("cs-uptRow-conDatas");
    $(".cs-uptRowSty .cs-row-con-par .cs-at-dd-exprs").each(function (index, value) {
                            if(!($(value).closest(".cs-uptRowSty").hasClass("cs-uptRow-conDatas")))
                                {
                                $(value).closest(".cs-uptRowSty").data("eachActivityVO").UptRowActivityVo.arrayRowCondition = [];
                                }
                            var cond = $(value).find(".cs-pb-condion-label span").text();
                            var attrName = $(value).find(".cs-left-expr input").val();
                            var opr = $(value).find(".cs-operator input").val();
                            var attrVal = $(value).find(".cs-right-expr input").val();
                            var conArr =[];
                            conArr = {"condVal":cond,"attrName":attrName,"operator":opr,"attVal":attrVal};
                            $(value).closest(".cs-uptRowSty").data("eachActivityVO").UptRowActivityVo.arrayRowCondition.push(conArr);
                            $(value).closest(".cs-uptRowSty").addClass("cs-uptRow-conDatas");
    });
    $(".cs-uptRow-addrlistDatas").removeClass("cs-uptRow-addrlistDatas");
    $(".cs-uptRowSty .cs-uptrow-addrlist-par .cs-at-dd-exprs").each(function (index, value) {
                            if(!($(value).closest(".cs-uptRowSty").hasClass("cs-uptRow-addrlistDatas")))
                                {
                                $(value).closest(".cs-uptRowSty").data("eachActivityVO").UptRowActivityVo.dataRowCondition = [];
                                }
                            var cond = $(value).find(".cs-pb-condion-label span").text();
                            var attrName = $(value).find(".cs-left-expr input").val();
                            var opr = $(value).find(".cs-operator input").val();
                            var attrVal = $(value).find(".cs-right-expr input").val();
                            var conArr = [];
                            conArr = {"condVal":cond,"attrName":attrName,"operator":opr,"attVal":attrVal};
                            $(value).closest(".cs-uptRowSty").data("eachActivityVO").UptRowActivityVo.dataRowCondition.push(conArr);
                            $(value).closest(".cs-uptRowSty").addClass("cs-uptRow-addrlistDatas");
    });

    $(".cs-filRow-conDatas").removeClass("cs-filRow-conDatas");
    $(".cs-filRowSty .cs-fil-row-con .cs-at-dd-exprs").each(function (index, value) {
                            if(!($(value).closest(".cs-filRowSty").hasClass("cs-filRow-conDatas")))
                                {
                                $(value).closest(".cs-filRowSty").data("eachActivityVO").FilRowActivityVo.byValcondition = [];
                                }
                            var cond = $(value).find(".cs-pb-condion-label span").text();
                            var attrName = $(value).find(".cs-left-expr input").val();
                            var opr = $(value).find(".cs-operator input").val();
                            var attrVal = $(value).find(".cs-right-expr input").val();
                            var conArr = [];
                            conArr = {"condVal":cond,"attrName":attrName,"operator":opr,"attVal":attrVal};
                            $(value).closest(".cs-filRowSty").data("eachActivityVO").FilRowActivityVo.byValcondition.push(conArr);
                            $(value).closest(".cs-filRowSty").addClass("cs-filRow-conDatas");
    });
    $(".cs-filRow-addrDatas").removeClass("cs-filRow-addrDatas");
    $(".cs-filRowSty .cs-filrow-addrlist-par .cs-at-dd-exprs").each(function (index, value) {
                            if(!($(value).closest(".cs-filRowSty").hasClass("cs-filRow-addrDatas")))
                                {
                                $(value).closest(".cs-filRowSty").data("eachActivityVO").FilRowActivityVo.byCondition = [];
                                }
                            var cond = $(value).find(".cs-pb-condion-label span").text();
                            var attrName = $(value).find(".cs-left-expr input").val();
                            var opr = $(value).find(".cs-operator input").val();
                            var attrVal = $(value).find(".cs-right-expr input").val();
                            var conArr = [];
                            conArr = {"condVal":cond,"attrName":attrName,"operator":opr,"attVal":attrVal};
                            $(value).closest(".cs-filRowSty").data("eachActivityVO").FilRowActivityVo.byCondition.push(conArr);
                            $(value).closest(".cs-filRowSty").addClass("cs-filRow-addrDatas");
});

$(".cs-mergeRowSty .cs-mergerow-addrlist-par .cs-dest-attr-par .cs-list .cs-list-row").each(function (index, value) {
    var txt = $(value).text();
    var destAttr = {"destinationID":txt};
    $(this).closest(".cs-mergeRowSty").data("eachActivityVO").MergeRowActivityVo.DestinationAttr.push(destAttr);
});
$(".cs-mergeRowSty .cs-mergerow-addrlist-par .cs-sour-attr-par .cs-list .cs-list-row").each(function (index, value) {
    var txt = $(value).text();
    var sourceAttr = {"sourceID":txt};
    $(this).closest(".cs-mergeRowSty").data("eachActivityVO").MergeRowActivityVo.SourceAttr.push(sourceAttr);
});
$(".cs-mergeRowSty .cs-mergerow-addrlist-par .cs-mapp-attr-par .cs-list .cs-com-mer-par").each(function (index, value) {
    var destTxt = $(value).find(".cs-dest-txt").text();
    var sourTxt = $(value).find(".cs-source-txt").text();
    var mappedAttr = {"mappedDestinationID":destTxt,"mappedSourceID":sourTxt};
    $(this).closest(".cs-mergeRowSty").data("eachActivityVO").MergeRowActivityVo.MappedAttr.push(mappedAttr);
});

$(".cs-excel-act-child").each(function (index, value) {
    var selectFileLoc = $(value).find(".cs-excel-act-file-loc .cs-exc-sel-file-loc-val").val();
    var refName = $(value).find(".cs-excel-act-refname input").val();
    $(this).data("eachActivityVO").excelSubActivityVo.selectFileLocation = selectFileLoc;
    $(this).data("eachActivityVO").excelSubActivityVo.referencesName = refName;
    if($(value).find(".cs-excel-act-clearIne").prop('checked')){
        $(this).data("eachActivityVO").excelSubActivityVo.createIfNotExists = "Y";
    }
    else {
        $(this).data("eachActivityVO").excelSubActivityVo.createIfNotExists = "N";
    }
    if($(value).find(".cs-excel-act-saveChange").prop('checked')){
        $(this).data("eachActivityVO").excelSubActivityVo.saveChanges = "Y";
    }
    else {
        $(this).data("eachActivityVO").excelSubActivityVo.saveChanges = "N";
    }
 });

 if($(".cs-excel-manipulation-child").length){
    $(".cs-excel-manipulation-child").data("eachActivityVO").excelManupulationActivityVo.appendRange = [];
    $(".cs-excel-manipulation-child").data("eachActivityVO").excelManupulationActivityVo.clearSheetRange = [];
    $(".cs-excel-manipulation-child").data("eachActivityVO").excelManupulationActivityVo.copyPasteRange = [];
    $(".cs-excel-manipulation-child").data("eachActivityVO").excelManupulationActivityVo.findReplaceRange = [];
    $(".cs-excel-manipulation-child").data("eachActivityVO").excelManupulationActivityVo.fillRange = [];
 }
 $(".cs-excel-manipulation-child-datas").removeClass("cs-excel-manipulation-child-datas");
 $(".cs-excel-manipulation-child").each(function (index, value) {
    var manupulationGroup = $(value).find(".manupulationGroup").find("option:selected").text();
    $(value).data("eachActivityVO").excelManupulationActivityVo.manupulationGroupText = manupulationGroup;
    if(!($(value).hasClass("cs-excel-manipulation-child-datas")))
    {
        $(value).data("eachActivityVO").excelManupulationActivityVo.appendRange = [];
        $(value).data("eachActivityVO").excelManupulationActivityVo.clearSheetRange = [];
        $(value).data("eachActivityVO").excelManupulationActivityVo.copyPasteRange = [];
        $(value).data("eachActivityVO").excelManupulationActivityVo.findReplaceRange = [];
        $(value).data("eachActivityVO").excelManupulationActivityVo.fillRange = [];
    }

    var appendRangeExcelrangetoappend = $(value).find(".cs-man-append-range-par .cs-man-append-exc-range input").val();
    var appendRangeAppendafterrange = $(value).find(".cs-man-append-range-par .cs-man-append-after-range input").val();
    var appendRangeWhattocopy = $(value).find(".cs-man-append-range-par .cs-man-append-what-copy select").find("option:selected").text();
    var appendRangeExcludeHeader = "";
    var appendRangeTranspose = "";
    if($(value).find(".cs-man-append-range-par .cs-man-append-exclude-header").prop('checked')){
        appendRangeExcludeHeader = "Y";
    }
    else {
        appendRangeExcludeHeader = "N";
    }
    if($(value).find(".cs-man-append-range-par .cs-man-append-transpose").prop('checked')){
        appendRangeTranspose = "Y";
    }
    else {
        appendRangeTranspose = "N";
    }
    var appendRangeArr = {"excelRangeToAppend":appendRangeExcelrangetoappend,"appendAfterRange":appendRangeAppendafterrange,"whatToCopy":appendRangeWhattocopy,"excludeHeader":appendRangeExcludeHeader,"transpose":appendRangeTranspose};
    $(value).data("eachActivityVO").excelManupulationActivityVo.appendRange.push(appendRangeArr);

    var clrSheetRangetoclear = $(value).find(".cs-man-clear-sheetrange-par .cs-man-sheetrange-clear input").val();
    var clrSheetHasheaders = "";
    if($(value).find(".cs-man-clear-sheetrange-par .cs-man-sheetrange-headers").prop('checked')){
        clrSheetHasheaders = "Y";
    }
    else {
        clrSheetHasheaders = "N";
    }
    var clrSheetArr = {"rangeToClear":clrSheetRangetoclear,"hasHeaders":clrSheetHasheaders};
    $(value).data("eachActivityVO").excelManupulationActivityVo.clearSheetRange.push(clrSheetArr);

    var copypasteDestinatioCell = $(value).find(".cs-man-copypaste-range-par .cs-man-copypaste-destcell input").val();
    var copypasteDestinationSheet = $(value).find(".cs-man-copypaste-range-par .cs-man-copypaste-destsheet input").val();
    var copypasteSheetName = $(value).find(".cs-man-copypaste-range-par .cs-man-copypaste-destsheetname input").val();
    var copypasteSheetRange = $(value).find(".cs-man-copypaste-range-par .cs-man-copypaste-destsheetrange input").val();
    var copypasteCItems = $(value).find(".cs-man-copypaste-range-par .cs-man-copypaste-what-copy select").find("option:selected").text();
    var copyPasteArr = {"destinatioCell":copypasteDestinatioCell,"destinationSheet":copypasteDestinationSheet,"sheetName":copypasteSheetName,"sheetRange":copypasteSheetRange,"copyItems":copypasteCItems};
    $(value).data("eachActivityVO").excelManupulationActivityVo.copyPasteRange.push(copyPasteArr);
    
    var fillrangeWhereToWrite = $(value).find(".cs-man-fillrange-par .cs-man-fillrange-wheretowri input").val();
    var fillrangeWhatToWrite = $(value).find(".cs-man-fillrange-par .cs-man-fillrange-whattowri input").val();
    var fillRangeArr = {"whereToWrite":fillrangeWhereToWrite,"whatToWrite":fillrangeWhatToWrite};
    $(value).data("eachActivityVO").excelManupulationActivityVo.fillRange.push(fillRangeArr);

    var findReplaceOperation = $(value).find(".cs-man-findreplace-par .cs-man-findreplace-opr select").find("option:selected").text();
    var findReplaceWhereToSearch = $(value).find(".cs-man-findreplace-par .cs-man-findreplace-wheretoser input").val();
    var findReplaceValueToFind = $(value).find(".cs-man-findreplace-par .cs-man-findreplace-valuetofin input").val();
    var findReplaceReplaceWith = $(value).find(".cs-man-findreplace-par .cs-man-findreplace-repwith input").val();
    var findReplaceFoundAt = $(value).find(".cs-man-findreplace-par .cs-man-findreplace-foundat input").val();
    var findReplaceArr = {"operation":findReplaceOperation,"whereTosearch":findReplaceWhereToSearch,"valueToFind":findReplaceValueToFind,"replaceWith":findReplaceReplaceWith,"foundAt":findReplaceFoundAt};
    $(value).data("eachActivityVO").excelManupulationActivityVo.findReplaceRange.push(findReplaceArr);

    $(value).addClass("cs-excel-manipulation-child-datas");

 });

 if($(".cs-excel-advanced-act-child").length){
    $(".cs-excel-advanced-act-child").data("eachActivityVO").excelAdvancedActivityVo.createPivotTable = [];
    $(".cs-excel-advanced-act-child").data("eachActivityVO").excelAdvancedActivityVo.lookup = [];
    $(".cs-excel-advanced-act-child").data("eachActivityVO").excelAdvancedActivityVo.runSpreadsheetMacro = [];
    $(".cs-excel-advanced-act-child").data("eachActivityVO").excelAdvancedActivityVo.invokeVBA = [];
 }
 $(".cs-excel-advanced-act-child-datas").removeClass("cs-excel-advanced-act-child-datas");
 $(".cs-excel-advanced-act-child").each(function (index, value) {
    var advancedGroupval = $(value).find(".advancedGroup").find("option:selected").text();
    $(value).data("eachActivityVO").excelAdvancedActivityVo.advancedGroupText = advancedGroupval;
    if(!($(value).hasClass("cs-excel-advanced-act-child-datas")))
        {
            $(value).data("eachActivityVO").excelAdvancedActivityVo.createPivotTable = [];
            $(value).data("eachActivityVO").excelAdvancedActivityVo.lookup = [];
            $(value).data("eachActivityVO").excelAdvancedActivityVo.runSpreadsheetMacro = [];
            $(value).data("eachActivityVO").excelAdvancedActivityVo.invokeVBA = [];
        }

    var advpivotSourceVal = $(value).find(".cs-advanced-creatr-pivot-par .cs-advanced-source-inp input").val();
    var advpivotnewTableVal = $(value).find(".cs-advanced-creatr-pivot-par .cs-advanced-newtable-name input").val();
    var advpivotDestinationVal = $(value).find(".cs-advanced-creatr-pivot-par .cs-advanced-destination input").val();
    var advpivotArr = [];
    $(value).find(".cs-advanced-pivotField-list").each(function (index, val) {
        advpivotFieldval = $(val).find(".cs-advanced-Field input").val();
        advpivotISaval = $(val).find(".cs-advanced-Isa").find("option:selected").text();
        var advpivotdata = {
            "field": advpivotFieldval,
            "Isa": advpivotISaval
        }
        advpivotArr.push(advpivotdata);
    });
    var createPivotArr = {"source":advpivotSourceVal,"newtable":advpivotnewTableVal,"destination":advpivotDestinationVal,"pivot":advpivotArr,};
    $(value).data("eachActivityVO").excelAdvancedActivityVo.createPivotTable.push(createPivotArr);

    var advLookupvtlVal = $(value).find(".cs-advanced-Lookup-par .cs-advanced-lookup-vtl input").val();
    var advLookupRangeVal = $(value).find(".cs-advanced-Lookup-par .cs-advanced-lookup-range input").val();
    var advLookupSorVal = $(value).find(".cs-advanced-Lookup-par .cs-advanced-lookup-sor input").val();
    var advLookupResultVal = $(value).find(".cs-advanced-Lookup-par .cs-advanced-lookup-result input").val();
    var advLookupArr = {"valueToLookup":advLookupvtlVal,"range":advLookupRangeVal,"sourceOfResult":advLookupSorVal,"result":advLookupResultVal};
    $(value).data("eachActivityVO").excelAdvancedActivityVo.lookup.push(advLookupArr);

    var advrunSpreadsheetMacroSwbVal = $(value).find(".cs-advanced-runspreadsheetmacro-par .cs-advanced-runspreadsheetmacro-swbook input").val();
    var advrunSpreadsheetMacroMnameVal = $(value).find(".cs-advanced-runspreadsheetmacro-par .cs-advanced-runspreadsheetmacro-mname input").val();
    var advrunSpreadsheetMacroOutputVal = $(value).find(".cs-advanced-runspreadsheetmacro-par .cs-advanced-runspreadsheetmacro-outto input").val();
    var advrunSpreadsheetMacroAddMacroVal = $(value).find(".cs-advanced-runspreadsheetmacro-par .cs-advanced-runspreadsheetmacro-addmacarg input").val();
    var advrunSpreadsheetMacroArr = {"sourceWorkBook":advrunSpreadsheetMacroSwbVal,"macroName":advrunSpreadsheetMacroMnameVal,"outputTo":advrunSpreadsheetMacroOutputVal,"addMacroArgument":advrunSpreadsheetMacroAddMacroVal};
    $(value).data("eachActivityVO").excelAdvancedActivityVo.runSpreadsheetMacro.push(advrunSpreadsheetMacroArr);

    var advinvokeVBAcfbVal = $(value).find(".cs-advanced-InvokeVBA-par .cs-advanced-InvokeVBA-cfp input").val();
    var advinvokeVBAMemnVal = $(value).find(".cs-advanced-InvokeVBA-par .cs-advanced-InvokeVBA-emn input").val();
    var advinvokeVBAempVal = $(value).find(".cs-advanced-InvokeVBA-par .cs-advanced-InvokeVBA-emp input").val();
    var advinvokeVBAovVal = $(value).find(".cs-advanced-InvokeVBA-par .cs-advanced-InvokeVBA-ov input").val();
    var advinvokeVBAArr = {"codeFilePath":advinvokeVBAcfbVal,"entryMethodName":advinvokeVBAMemnVal,"entryMethodParameter":advinvokeVBAempVal,"outputValue":advinvokeVBAovVal};
    $(value).data("eachActivityVO").excelAdvancedActivityVo.invokeVBA.push(advinvokeVBAArr);
    
    $(value).addClass("cs-excel-advanced-act-child-datas"); 

});

if($(".cs-excel-delete-child").length){
    $(".cs-excel-delete-child").data("eachActivityVO").excelDeleteActivityVo.deleteColumn = [];
    $(".cs-excel-delete-child").data("eachActivityVO").excelDeleteActivityVo.deleteRow = [];
    $(".cs-excel-delete-child").data("eachActivityVO").excelDeleteActivityVo.deleteSheet = [];
 }
 $(".cs-excel-delete-child-datas").removeClass("cs-excel-delete-child-datas");
 $(".cs-excel-delete-child").each(function (index, value) {
    var deleteGroup = $(value).find(".deleteGroup").find("option:selected").text();
    $(value).data("eachActivityVO").excelDeleteActivityVo.deleteGroupText = deleteGroup;
    if(!($(value).hasClass("cs-excel-delete-child-datas")))
        {
            $(value).data("eachActivityVO").excelDeleteActivityVo.deleteColumn = [];
            $(value).data("eachActivityVO").excelDeleteActivityVo.deleteRow = [];
            $(value).data("eachActivityVO").excelDeleteActivityVo.deleteSheet = [];
        }

    var delColSou = $(value).find(".cs-delete-column-par").find(".cs-delete-source input").val();    
    var delColName = $(value).find(".cs-delete-column-par").find(".cs-delete-column-name input").val();    
    var delColHasHeader = "";  
    if($(value).find(".cs-delete-column-par .cs-delete-column-has-header").prop('checked')){
        delColHasHeader = "Y";
    }  
    else {
        delColHasHeader = "N";
    }
    var deleteColumnArr = {"source":delColSou,"columnName":delColName,"hasHeader":delColHasHeader};
    $(value).data("eachActivityVO").excelDeleteActivityVo.deleteColumn.push(deleteColumnArr);

    var delRowiwtor = $(value).find(".cs-delete-rows-par").find(".cs-delete-rows-iwtor input").val();    
    var delRowwhattodel = $(value).find(".cs-delete-rows-par").find(".cs-delete-rows-whattodel select").find("option:selected").text();    
    var delRowatpos = $(value).find(".cs-delete-rows-par").find(".cs-delete-rows-atpos input").val();    
    var delRowHasHeader = "";  
    if($(value).find(".cs-delete-rows-par .cs-delete-rows-has-headers").prop('checked')){
        delRowHasHeader = "Y";
    }  
    else {
        delRowHasHeader = "N";
    }
    var deleteRowsArr = {"iwtor":delRowiwtor,"whattodel":delRowwhattodel,"atposition":delRowatpos,"hasHeader":delRowHasHeader};
    $(value).data("eachActivityVO").excelDeleteActivityVo.deleteRow.push(deleteRowsArr);

    var delSheetiwtor = $(value).find(".cs-delete-sheet-par").find(".cs-delete-sheet-select input").val();
    var deleteSheetArr = {"selectSheet":delSheetiwtor};
    $(value).data("eachActivityVO").excelDeleteActivityVo.deleteSheet.push(deleteSheetArr);


    $(value).addClass("cs-excel-delete-child-datas");     
});

if($(".cs-excel-filter-act-child").length){
    $(".cs-excel-filter-act-child").data("eachActivityVO").excelFilterActivityVo.Filter = [];
    $(".cs-excel-filter-act-child").data("eachActivityVO").excelFilterActivityVo.filterPivotTable = [];
 }
 $(".cs-excel-filter-act-child-datas").removeClass("cs-excel-filter-act-child-datas");
 $(".cs-excel-filter-act-child").each(function (index, value) {
    var filterGroup = $(value).find(".filterGroup").find("option:selected").text();
    $(value).data("eachActivityVO").excelFilterActivityVo.filterGroupText = filterGroup;
    if(!($(value).hasClass("cs-excel-filter-act-child-datas")))
        {
            $(value).data("eachActivityVO").excelFilterActivityVo.Filter = [];
            $(value).data("eachActivityVO").excelFilterActivityVo.filterPivotTable = [];
        }

        var excFilterSou = $(value).find(".cs-filter-par").find(".cs-filter-source-inp input").val();
        var excFilterCname = $(value).find(".cs-filter-par").find(".cs-filter-column-name input").val();
        var excFilterCAEF = "";
        if($(value).find(".cs-excel-filter-caef").prop('checked')){
            excFilterCAEF = "Y";
        }
        else {
            excFilterCAEF = "N";
        }
        var filBasArr = [];
        $(value).find(".cs-filter-pivotField-list").each(function (index, val) {
            filpivotFieldval = $(val).find(".cs-filter-isEqTo input").val();
            var filbasicdata = {
                "IsEqualto": filpivotFieldval
            }
            filBasArr.push(filbasicdata);
        });
        var excFilterArr = {"source":excFilterSou,"columnName":excFilterCname,"clearAnyExistingFilter":excFilterCAEF,"basicFilter":filBasArr};
        $(value).data("eachActivityVO").excelFilterActivityVo.Filter.push(excFilterArr);

        var excFilterPIvSou = $(value).find(".cs-filter-pivotTable-par").find(".cs-filter-pivotTable-sou input").val();
        var excFilterPIvCname = $(value).find(".cs-filter-pivotTable-par").find(".cs-filter-pivotTable-cname input").val();
        var excFilterPIvCAEF = "";
        if($(value).find(".cs-excel-filter-pivotTable-caef").prop('checked')){
            excFilterPIvCAEF = "Y";
        }
        else {
            excFilterPIvCAEF = "N";
        }
        var excFilterPIvArr = {"source":excFilterPIvSou,"columnName":excFilterPIvCname,"clearAnyExistingFilter":excFilterPIvCAEF};
        $(value).data("eachActivityVO").excelFilterActivityVo.filterPivotTable.push(excFilterPIvArr);

        $(value).addClass("cs-excel-filter-act-child-datas");
    });

if($(".cs-excel-read-act-child").length){
        $(".cs-excel-read-act-child").data("eachActivityVO").excelReadActivityVo.forEachExcelRow = [];
        $(".cs-excel-read-act-child").data("eachActivityVO").excelReadActivityVo.readCellFormula = [];
        $(".cs-excel-read-act-child").data("eachActivityVO").excelReadActivityVo.readCellValue = [];
        $(".cs-excel-read-act-child").data("eachActivityVO").excelReadActivityVo.readRange = [];
}
$(".cs-excel-read-act-child-datas").removeClass("cs-excel-read-act-child-datas");
$(".cs-excel-read-act-child").each(function (index, value) {
        var filterGroup = $(value).find(".readGroup").find("option:selected").text();
        $(value).data("eachActivityVO").excelReadActivityVo.readGroupText = filterGroup;
        if(!($(value).hasClass("cs-excel-read-act-child-datas")))
            {
                $(value).data("eachActivityVO").excelReadActivityVo.forEachExcelRow = [];
                $(value).data("eachActivityVO").excelReadActivityVo.readCellFormula = [];
                $(value).data("eachActivityVO").excelReadActivityVo.readCellValue = [];
                $(value).data("eachActivityVO").excelReadActivityVo.readRange = [];
            }

            var readForEachFe = $(value).find(".cs-read-forEacExcelRow-par").find(".cs-read-forEacExcelRow-fe input").val();    
            var readForEachInRangeIr = $(value).find(".cs-read-forEacExcelRow-par").find(".cs-read-forEacExcelRow-Ir select").find("option:selected").text();    
            var readForEachInRangeErb = $(value).find(".cs-read-forEacExcelRow-par").find(".cs-read-forEacExcelRow-erb select").find("option:selected").text();    
            var readForEachHasH = "";  
            var readForEachSaer = "";  
            if($(value).find(".cs-read-forEacExcelRow-par .cs-read-forEacExcelRow-hh").prop('checked')){
                readForEachHasH = "Y";
            }  
            else {
                readForEachHasH = "N";
            }
            if($(value).find(".cs-read-forEacExcelRow-par .cs-read-forEacExcelRow-saer").prop('checked')){
                readForEachSaer = "Y";
            }  
            else {
                readForEachSaer = "N";
            }
            var ReadforEachExcelRowArr = {"forEach":readForEachFe,"inRange":readForEachInRangeIr,"emptyRowBehaviour":readForEachInRangeErb,"hasHeader":readForEachHasH,"saveAfterEachRow":readForEachSaer};
            $(value).data("eachActivityVO").excelReadActivityVo.forEachExcelRow.push(ReadforEachExcelRowArr);

            var readReadCellFcell = $(value).find(".cs-read-readCellFormula-par").find(".cs-read-readCellFormula-cell input").val();    
            var readReadCellFsaveto = $(value).find(".cs-read-readCellFormula-par").find(".cs-read-readCellFormula-saveto input").val();   
            var ReadCellFExcelRowArr = {"cell":readReadCellFcell,"saveto":readReadCellFsaveto};
            $(value).data("eachActivityVO").excelReadActivityVo.readCellFormula.push(ReadCellFExcelRowArr);

            var readReadCellVcell = $(value).find(".cs-read-readCellValue-par").find(".cs-read-readCellValue-cell input").val();    
            var readReadCellVsaveto = $(value).find(".cs-read-readCellValue-par").find(".cs-read-readCellValue-saveto input").val();   
            var readReadCellFgft = $(value).find(".cs-read-readCellValue-par").find(".cs-read-readCellValue-getFtext input").val();   
            var ReadCellVExcelRowArr = {"cell":readReadCellVcell,"saveto":readReadCellVsaveto,"getFormattedText":readReadCellFgft};
            $(value).data("eachActivityVO").excelReadActivityVo.readCellValue.push(ReadCellVExcelRowArr);

            var readRangeInp = $(value).find(".cs-read-readRange-par").find(".cs-read-readRange-range input").val();    
            var readRangeHasH = "";  
            var readRangeVro = "";  
            if($(value).find(".cs-read-readRange-par .cs-read-readRange-headers").prop('checked')){
                readRangeHasH = "Y";
            }  
            else {
                readRangeHasH = "N";
            }
            if($(value).find(".cs-read-readRange-par .cs-read-readRange-vro").prop('checked')){
                readRangeVro = "Y";
            }  
            else {
                readRangeVro = "N";
            }
            var readRangeSaveto = $(value).find(".cs-read-readRange-par").find(".cs-read-readRange-saveto input").val();    
            var ReadRangeExcelRowArr = {"range":readRangeInp,"hasHeaders":readRangeHasH,"visibleRowOnly":readRangeVro,"saveTo":readRangeSaveto};
            $(value).data("eachActivityVO").excelReadActivityVo.readRange.push(ReadRangeExcelRowArr);

        $(value).addClass("cs-excel-read-act-child-datas");
});    

if($(".cs-excel-chart-child").length){
    $(".cs-excel-chart-child").data("eachActivityVO").excelChartActivityVo.getExcelChart = [];
    $(".cs-excel-chart-child").data("eachActivityVO").excelChartActivityVo.insertChart = [];
}
$(".cs-excel-chart-child-datas").removeClass("cs-excel-chart-child-datas");
$(".cs-excel-chart-child").each(function (index, value) {
    var chartGroup = $(value).find(".chartGroup").find("option:selected").text();
    $(value).data("eachActivityVO").excelChartActivityVo.chartText = chartGroup;
    if(!($(value).hasClass("cs-excel-chart-child-datas")))
        {
            $(value).data("eachActivityVO").excelChartActivityVo.getExcelChart = [];
            $(value).data("eachActivityVO").excelChartActivityVo.insertChart = [];
        }

        var chartEXCVal = $(value).find(".cs-chart-getExcel-par").find(".cs-chart-cval input").val();    
        var chartEXCaction = $(value).find(".cs-chart-getExcel-par .cs-chart-action").find("option:selected").text(); 
        var chartEXCfilename = $(value).find(".cs-chart-getExcel-par").find(".cs-chart-filename input").val();   
        var chartEXCReplaceExistingfile = "";
        if($(value).find(".cs-chart-getExcel-par .cs-chart-replaceexistingfile").prop('checked')){
            chartEXCReplaceExistingfile = "Y";
        }  
        else {
            chartEXCReplaceExistingfile = "N";
        }
        var chartEXCarr = {"chart":chartEXCVal,"action":chartEXCaction,"fileName":chartEXCfilename,"replaceExistingFile":chartEXCReplaceExistingfile};
        $(value).data("eachActivityVO").excelChartActivityVo.getExcelChart.push(chartEXCarr);

        var chartEXCInsCcatogory = $(value).find(".cs-chart-insert-par .cs-chart-cCatagory").find("option:selected").text(); 
        var chartEXCInsCtype = $(value).find(".cs-chart-insert-par .cs-chart-cType").find("option:selected").text(); 
        var chartEXCInsCdataRan = $(value).find(".cs-chart-insert-par").find(".cs-chart-dataRange input").val();    
        var chartEXCInsCiisheet = $(value).find(".cs-chart-insert-par").find(".cs-chart-iisheet input").val();   
        var chartEXCInsCscTo = $(value).find(".cs-chart-insert-par").find(".cs-chart-scTo input").val();   
        var chartEXCInsCArr = {"chartCatagory":chartEXCInsCcatogory,"chartType":chartEXCInsCtype,"dataRange":chartEXCInsCdataRan,"insertIntoSheet":chartEXCInsCiisheet,"saveChartTo":chartEXCInsCscTo};
        $(value).data("eachActivityVO").excelChartActivityVo.insertChart.push(chartEXCInsCArr);

    $(value).addClass("cs-excel-chart-child-datas");
});   

if($(".cs-excel-insert-child").length){
    $(".cs-excel-insert-child").data("eachActivityVO").excelInsertActivityVo.insertColumn = [];
    $(".cs-excel-insert-child").data("eachActivityVO").excelInsertActivityVo.insertRows = [];
    $(".cs-excel-insert-child").data("eachActivityVO").excelInsertActivityVo.insertSheet = [];
}
$(".cs-excel-insert-child-datas").removeClass("cs-excel-insert-child-datas");
$(".cs-excel-insert-child").each(function (index, value) {
    var insertGroup = $(value).find(".insertGroup").find("option:selected").text();
    $(value).data("eachActivityVO").excelInsertActivityVo.insertText = insertGroup;
    if(!($(value).hasClass("cs-excel-insert-child-datas")))
        {
            $(value).data("eachActivityVO").excelInsertActivityVo.insertColumn = [];
            $(value).data("eachActivityVO").excelInsertActivityVo.insertRows = [];
            $(value).data("eachActivityVO").excelInsertActivityVo.insertSheet = [];
        }

        var insertExcColRan = $(value).find(".cs-insert-Col-par").find(".cs-insertCol-range input").val();    
        var insertExcrtCol = $(value).find(".cs-insert-Col-par").find(".cs-insertCol-rtCol input").val();    
        var insertExcColWhere  = $(value).find(".cs-insert-Col-par .cs-insertCol-Where").find("option:selected").text(); 
        var insertExcColaddHead = $(value).find(".cs-insert-Col-par").find(".cs-insertCol-addHead input").val();
        var insertExcColFDAT = $(value).find(".cs-insert-Col-par .cs-insertCol-FDAT").find("option:selected").text(); 
        var insertExcColhasHead = "";
        if($(value).find(".cs-insert-Col-par .cs-insertCol-hasHead").prop('checked')){
            insertExcColhasHead = "Y";
        }  
        else {
            insertExcColhasHead = "N";
        }
        var insertExcColArr = {"range":insertExcColRan,"relativeToColumn":insertExcrtCol,"where":insertExcColWhere,"addHeader":insertExcColaddHead,"formatDataAsType":insertExcColFDAT,"hasHeader":insertExcColhasHead};
        $(value).data("eachActivityVO").excelInsertActivityVo.insertColumn.push(insertExcColArr);

        var insertExcRowsiwtor = $(value).find(".cs-insert-Rows-par").find(".cs-insertRows-iwtor input").val();    
        var insertExcRowsnor = $(value).find(".cs-insert-Rows-par").find(".cs-insertRows-nor input").val();    
        var insertExcRowswhere  = $(value).find(".cs-insert-Rows-par .cs-insertRows-where").find("option:selected").text(); 
        var insertExcRowshasHead = "";
        if($(value).find(".cs-insert-Rows-par .cs-insertRows-hasHead").prop('checked')){
            insertExcRowshasHead = "Y";
        }  
        else {
            insertExcRowshasHead = "N";
        }
        var insertExcColArr = {"inWhatTableOrRange":insertExcRowsiwtor,"numberOfRows":insertExcRowsnor,"where":insertExcRowswhere,"hasHeader":insertExcRowshasHead};
        $(value).data("eachActivityVO").excelInsertActivityVo.insertRows.push(insertExcColArr);

        var insertExcSheetciw = $(value).find(".cs-insert-Sheet-par").find(".cs-insertSheet-ciw input").val();    
        var insertExcSheetsName = $(value).find(".cs-insert-Sheet-par").find(".cs-insertSheet-sName input").val();    
        var insertExcSheetrnsa = $(value).find(".cs-insert-Sheet-par").find(".cs-insertSheet-rnsa input").val();    
        var insertExcSheetArr = {"createInWorkbook":insertExcSheetciw,"sheetName":insertExcSheetsName,"referenceNewSheetAs":insertExcSheetrnsa};
        $(value).data("eachActivityVO").excelInsertActivityVo.insertSheet.push(insertExcSheetArr);

    $(value).addClass("cs-excel-insert-child-datas");
});  

if($(".cs-excel-save-child").length){
    $(".cs-excel-save-child").data("eachActivityVO").excelSaveActivityVo.saveExcelFileAs = [];
    $(".cs-excel-save-child").data("eachActivityVO").excelSaveActivityVo.saveExcelFile = [];
    $(".cs-excel-save-child").data("eachActivityVO").excelSaveActivityVo.saveExcelFileAsPDF = [];
}
$(".cs-excel-save-child-datas").removeClass("cs-excel-save-child-datas");
$(".cs-excel-save-child").each(function (index, value) {
    var saveGroup = $(value).find(".saveGroup").find("option:selected").text();
    $(value).data("eachActivityVO").excelSaveActivityVo.saveText = saveGroup;
    if(!($(value).hasClass("cs-excel-save-child-datas")))
        {
            $(value).data("eachActivityVO").excelSaveActivityVo.saveExcelFileAs = [];
            $(value).data("eachActivityVO").excelSaveActivityVo.saveExcelFile = [];
            $(value).data("eachActivityVO").excelSaveActivityVo.saveExcelFileAsPDF = [];
        }
      
    var excSaveExcelFileASworkbook = $(value).find(".cs-SaveExcelFileAs-par").find(".cs-SaveExcelFileAs-wBook input").val();
    var excSaveExcelFileASSAT = $(value).find(".cs-SaveExcelFileAs-par .cs-SaveExcelFileAs-SAT").find("option:selected").text();
    var excSaveExcelFileASSAF = $(value).find(".cs-SaveExcelFileAs-par").find(".cs-SaveExcelFileAs-SAF input").val();
    var excSaveExcelFileASfileName = $(value).find(".cs-SaveExcelFileAs-par").find(".cs-SaveExcelFileAs-fileName input").val();
    var excSaveExcelFileASRE = "";
        if($(value).find(".cs-SaveExcelFileAs-par .cs-SaveExcelFileAs-RE").prop('checked')){
            excSaveExcelFileASRE = "Y";
        }  
        else {
            excSaveExcelFileASRE = "N";
        }
    var SaveExcFileASArr = {"workBook":excSaveExcelFileASworkbook,"saveAsType":excSaveExcelFileASSAT,"saveAsFile":excSaveExcelFileASSAF,"fileName":excSaveExcelFileASfileName,"replaceExisting":excSaveExcelFileASRE};
    $(value).data("eachActivityVO").excelSaveActivityVo.saveExcelFileAs.push(SaveExcFileASArr);

    var excSaveExcelFileFname = $(value).find(".cs-SaveExcelFile-par").find(".cs-SaveExcelFile-File input").val();
    var SaveExcFileArr = {"file":excSaveExcelFileFname};
    $(value).data("eachActivityVO").excelSaveActivityVo.saveExcelFile.push(SaveExcFileArr);

    var excSaveExcelFileASPDFWbook = $(value).find(".cs-SaveExcelFileAsPDF-par").find(".cs-SaveExcelFileAsPDF-wBook input").val();
    var excSaveExcelFileASPDFSheetName = $(value).find(".cs-SaveExcelFileAsPDF-par").find(".cs-SaveExcelFileAsPDF-SAF input").val();
    var excSaveExcelFileASPDFRE = "";
        if($(value).find(".cs-SaveExcelFileAsPDF-par .cs-SaveExcelFileAsPDF-RE").prop('checked')){
            excSaveExcelFileASPDFRE = "Y";
        }  
        else {
            excSaveExcelFileASPDFRE = "N";
        }
    var excSaveExcelFileASPDFArr = {"workBook":excSaveExcelFileASPDFWbook,"sheetName":excSaveExcelFileASPDFSheetName,"replaceExisting":excSaveExcelFileASPDFRE,};
    $(value).data("eachActivityVO").excelSaveActivityVo.saveExcelFileAsPDF.push(excSaveExcelFileASPDFArr);

    $(value).addClass("cs-excel-save-child-datas");
});  

if($(".cs-excel-write-child").length){
    $(".cs-excel-write-child").data("eachActivityVO").excelWriteActivityVo.writeDataTable = [];
    $(".cs-excel-write-child").data("eachActivityVO").excelWriteActivityVo.writeCell = [];
}
$(".cs-excel-write-child-datas").removeClass("cs-excel-write-child-datas");
$(".cs-excel-write-child").each(function (index, value) {
    var writeGroup = $(value).find(".writeGroup").find("option:selected").text();
    $(value).data("eachActivityVO").excelWriteActivityVo.writeText = writeGroup;
    if(!($(value).hasClass("cs-excel-write-child-datas")))
        {
            $(value).data("eachActivityVO").excelWriteActivityVo.writeDataTable = [];
            $(value).data("eachActivityVO").excelWriteActivityVo.writeCell = [];
        }

    var excWriteDataTabWTW = $(value).find(".cs-write-DataTabletoExcel-par").find(".cs-WriteDataTab-wtw input").val();
    var excWriteDataTabDEST = $(value).find(".cs-write-DataTabletoExcel-par").find(".cs-WriteDataTab-dest input").val();
    var excWriteDataTabAPPD = "";
        if($(value).find(".cs-write-DataTabletoExcel-par .cs-WriteDataTab-append").prop('checked')){
            excWriteDataTabAPPD = "Y";
        }  
        else {
            excWriteDataTabAPPD = "N";
        }
    var excWriteDataTabEHEAD = "";
        if($(value).find(".cs-write-DataTabletoExcel-par .cs-WriteDataTab-Eheader").prop('checked')){
            excWriteDataTabEHEAD = "Y";
        }  
        else {
            excWriteDataTabEHEAD = "N";
        }
    var excWriteDataTabARR = {"whatToWrite":excWriteDataTabWTW,"destination":excWriteDataTabDEST,"append":excWriteDataTabAPPD,"excludeHeader":excWriteDataTabEHEAD};
    $(value).data("eachActivityVO").excelWriteActivityVo.writeDataTable.push(excWriteDataTabARR);

    var excWriteCellwhattow = $(value).find(".cs-write-WriteCell-par").find(".cs-writeWC-whattow input").val();
    var excWriteCellwheretow = $(value).find(".cs-write-WriteCell-par").find(".cs-writeWC-wheretow input").val();
    var excWriteCellautoIncRow = "";
        if($(value).find(".cs-write-WriteCell-par .cs-writeWC-autoIncRow").prop('checked')){
            excWriteCellautoIncRow = "Y";
        }  
        else {
            excWriteCellautoIncRow = "N";
        }
    var excWriteCellARR = {"whatToWrite":excWriteCellwhattow,"whereToWrite":excWriteCellwheretow,"autoIncrementRow":excWriteCellautoIncRow};
    $(value).data("eachActivityVO").excelWriteActivityVo.writeCell.push(excWriteCellARR);

    $(value).addClass("cs-excel-write-child-datas");
});  

}
function resetjson() {
    resetoveralljson();
    if ($("#playback-name-inpt").val() == "" || $("#display-name-inpt").val() == "" ) {
        alert("Enter atleaset mandatory playback details to generate overall JSON");
    } else {
        var x = 0;
        $(".cs-pb-create-board .cs-openurlActivity").each(function() {
            if ($(this).find(".cs-openurl-dd-clk >span.cs-label").text() == "Var") {
                $(this).find(".cs-at-contentEntryinput").each(function() {
                    if($(this).attr("data-contentvalue")=="Var") {
                        if ($(this).find("input").val() == "") {
                            x = 1;
                        }
                    }
                });
            }
            else if ($(this).find(".cs-openurl-dd-clk >span.cs-label").text() == "Con") {
                $(this).find(".cs-at-contentEntryinput").each(function() {
                    if($(this).attr("data-contentvalue")=="Con") {
                        if ($(this).find("input").val() == "") {
                            x = 1;
                        }
                    }
                });
            }

            var funName = $(".cs-ou-fun-inp").val();
            var resName = $(".cs-ou-res-inp").val();
            var appName = $(".cs-ou-app-inp").val();
            var sgName = $(".cs-ou-sg-inp").val();
            var langName = $(".cs-ou-lang-inp").val();
            var paramName = $(".cs-ou-param-inp").val();
            $(this).data("eachActivityVO").openURLActivityVO.functionName = funName;
            $(this).data("eachActivityVO").openURLActivityVO.responsibilityName = resName;
            $(this).data("eachActivityVO").openURLActivityVO.applicationName = appName;
            $(this).data("eachActivityVO").openURLActivityVO.securityGroupName = sgName;
            $(this).data("eachActivityVO").openURLActivityVO.languageShortName = langName;
            $(this).data("eachActivityVO").openURLActivityVO.urlParamValue = paramName;

        });
        if (x == 1) {
            alert("URL is Empty, Please enter URL.");
        } else {
            mainFunction();
        }

    }
    $('.cs-action-not-selected').removeClass('cs-action-not-selected')
    $('.cs-at-layoutcontroweach.cs-each-element').each(function(id,val){
        if($(val).data('eachActivityVO')['elementActivityVO']['elementAction'] == ""){
            $(val).find('.cs-at-eleacttyp-clk').addClass('cs-action-not-selected')
        }
    })
    // console.log($('.cs-at-layoutcontroweach.cs-each-element').data('eachActivityVO')['elementActivityVO']['elementAction'])

};

$(document).on("click",".grp-btn .btn-text",function() { 
    conEachActi();
    resetjson();
    eachactivities();
    $('.cs-exp').removeClass('icon-cs-collapse')
    $('.cs-exp').addClass('icon-cs-expand')
});



$(document).on("click", ".iconactit", function () {
    $(this).toggleClass("iconopenact");
    $(this).parents(".itacteachlists").parent(".eachassignedact12").addClass("cs-eachactive1");
    if ($(this).hasClass('iconopenact')) {
        $(this).parents('.eachassignedact12.cs-eachactive1').children('.cs-act-name').children('.eachlineact').children('.aclists').eq(0).removeClass('cs-hide');  
        $(this).parents('.eachassignedact12.cs-eachactive1').children('.cs-act-name').children('.eachlineact').children('.cs-eachFetch-par').children(".grpoflists").removeClass('cs-hide'); 
        $(this).parent().parent().find('.cs-act-name').find('.cs-excReadFetch-par').find(".grpoflists").removeClass('cs-hide'); 
   }
   else{    
       $(this).parents('.eachassignedact12.cs-eachactive1').children('.cs-act-name').children('.eachlineact').children('.aclists').eq(0).addClass('cs-hide');  
       $(this).parents('.eachassignedact12.cs-eachactive1').children('.cs-act-name').children('.eachlineact').children('.cs-eachFetch-par').children(".grpoflists").addClass('cs-hide');
       $(this).parent().parent().find('.cs-act-name').find('.cs-excReadFetch-par').find(".grpoflists").addClass('cs-hide'); 
   }

});
$(document).on("click", ".cs-eachFetch-par .iconactit", function () {
   $(this).parent().parent().parent().parent().find(".grpoflists").removeClass("cs-hide");
});
$(document).on("click", ".cs-excReadFetch-par .iconactit", function () {
    $(this).parent().parent().parent().parent().find(".grpoflists").removeClass("cs-hide");
 });

     
$(document).on("click", ".iconact", function () {
 
    $(this).toggleClass("iconopenact");
  
  
        $(".eachassignedact").removeClass("cs-eachactive");
        $(".eachassignedact12").removeClass("cs-eachactive1");
        $(this).parents(".eachassignedact").addClass("cs-eachactive");

        if ($(this).hasClass('iconopenact')) {
            $(this).parents(".eachassignedact.cs-eachactive").eq(0).find(".multiact").removeClass("cs-hide");

        }
        else{
            $(this).parents(".eachassignedact.cs-eachactive").eq(0).find(".multiact").addClass("cs-hide");
        }

      
    });

$(document).on("click", ".cs-click-expandcollapse", function () {
                
   
         if ($(this).find('.cs-exp').hasClass('icon-cs-expand')) {
            $(this).find('.cs-exp').removeClass('icon-cs-expand')
            $(this).find('.cs-exp').addClass('icon-cs-collapse')
         }
         else{
            $(this).find('.cs-exp').addClass('icon-cs-expand')
            $(this).find('.cs-exp').removeClass('icon-cs-collapse')
         }
     
      
           
        if  ($(this).find('.cs-exp').hasClass('icon-cs-expand')) {
            $('.eachassignedact').removeClass('cs-hide'); 
            $('.eachassignedact12').removeClass('cs-hide');
            $('.cs-if,.cs-else').removeClass('cs-hide')
            $('.ic-conact,.iconactit,.iclayact,.iconact').removeClass('iconopenact')
            
            
        }
        else{
            $('.eachassignedact').addClass('cs-hide');
            $('.eachassignedact12').addClass('cs-hide');
            $('.cs-if,.cs-else').addClass('cs-hide')
            $('.ic-conact,.iconactit,.iclayact,.iconact').removeClass('iconopenact')
        }
        if ($('.cs-eachcontent .cs-act-name').find('.icact').hasClass('iconopen')){
           
            $('.cs-eachcontent .cs-act-name').find('.icact').removeClass('iconopen')
            $('.cs-eachcontent .cs-act-name').find('.icact').addClass('iconclose');
            $('.eachassignedact,.aclists,.eachassignedact12').addClass('cs-hide');
            // $('.cs-Iteration-part').find('.cs-conditionnActivity-part').find('.iclayact').addClass('iconopenact')
        }
        else{
            $('.cs-eachcontent .cs-act-name').find('.icact').removeClass('iconclose')
            $('.cs-eachcontent .cs-act-name').find('.icact').addClass('iconopen');
            $('.eachassignedact,.aclists,.eachassignedact12').removeClass('cs-hide');
            // $('.cs-Iteration-part').find('.cs-conditionnActivity-part').find('.iclayact').removeClass('iconopenact')
          } 
    });


$(document).on("click", ".iconclose", function () {
    $('.cs-exp').removeClass('icon-cs-collapse')
    $('.cs-exp').addClass('icon-cs-expand')
    $(this).toggleClass("iconopen");
    $(this).parent('.cs-act-name').children('.aclists').toggleClass('cs-hide')
     $(this).parent('.cs-act-name').nextAll('.eachassignedact').toggleClass('cs-hide')
    
    // $(this).parent(".cs-laypart").children(".aclists").toggleClass("cs-hide"); 
    $(this).parent(".cs-laypart").find('.aclists').find('.eachassignedact').toggleClass("cs-hide"); 
    
    $(this).parent(".cs-itpart").nextAll(".eachassignedact12").toggleClass("cs-hide"); 
    // $(this).parent(".cs-itpart").children(".aclists").find('.eachlistsact').toggleClass("active"); 

    $(this).parent('.cs-laypart').children('.aclists').children('.currentappendblock').children('.eachassignedact12').toggleClass('cs-hide');
   
     $(this).parent('.cs-conline').children('.cs-if').toggleClass('cs-hide'); 
    $(this).parent('.cs-conline').parent('.cs-conditionnActivity-part').parent('.cs-conif').next('.cs-conelse').children('.cs-conditionnActivity-part').children('.cs-conline').children('.cs-else').toggleClass('cs-hide');

     });

    $(document).on("click", ".ic-conact", function () {
        $(this).toggleClass("iconopenact");

         $(this).parent().parent().children('.appendifactivities').children('.eachassignedact12').toggleClass('cs-hide')
        $(this).parent().parent().children('.appendelseactivities').children('.eachassignedact12').toggleClass('cs-hide')
        $(this).parent().parent().children('.appendelseifactivities').children('.eachassignedact12').toggleClass('cs-hide')
      });

$(document).on("click", ".iclayact", function (index,val) {
   
    $(this).toggleClass("iconopenact");
  
   
      if ($(this).hasClass('iconopenact')) {
        $(this).parent(".cs-layname").next(".aclists").removeClass("cs-hide");  
        $(this).parent(".cs-layname").next(".aclists").children(".eachvalact").find(".eachassignedact").removeClass("cs-hide"); 
          
        $(this).parent(".cs-layname").next(".aclists").children(".eachvalact").children('.eachassignedact12').removeClass("cs-hide"); 
        // $(this).parent(".cs-layname").next(".aclists").children(".eachvalact").find('.cs-conditionnActivity-part .cs-conditionnActivity-part').parents(".eachassignedact12").removeClass("cs-hide"); 

        $(this).parent(".cs-itpart").nextAll(".eachassignedact").removeClass("cs-hide"); 
        $(this).parent(".cs-itpart").children(".aclists").removeClass('cs-hide')
        // $(this).parent(".cs-itpart").children(".aclists").find(".eachlistsact").addClass("active");
        // $(this).parent(".cs-itpart").children(".aclists").find(".actvalact").addClass("active");
        $(this).parent(".cs-itpart").nextAll(".eachassignedact12").removeClass("cs-hide");  
      }
      else{
        $(this).parent(".cs-layname").next(".aclists").addClass("cs-hide");  
        $(this).parent(".cs-layname").next(".aclists").children(".eachvalact").find(".eachassignedact").addClass("cs-hide"); 
        $(this).parent(".cs-layname").next(".aclists").children(".eachvalact").children('.eachassignedact12').addClass("cs-hide"); 
            //  $(this).parent(".cs-layname").next(".aclists").children(".eachvalact").find('.cs-conditionnActivity-part .cs-conditionnActivity-part').parents(".eachassignedact12").addClass("cs-hide"); 
    
        $(this).parent(".cs-itpart").nextAll(".eachassignedact").addClass("cs-hide");
        $(this).parent(".cs-itpart").children(".aclists").addClass('cs-hide') 
        // $(this).parent(".cs-itpart").children(".aclists").find(".eachlistsact").removeClass("active");
        // $(this).parent(".cs-itpart").children(".aclists").find(".actvalact").removeClass("active");
        $(this).parent(".cs-itpart").nextAll(".eachassignedact12").addClass("cs-hide");  
      }

     
     $(this).parent().parent('.cs-conditionnActivity-part').children().children('.cs-if').toggleClass('cs-hide')

   $(this).parent('.cs-conline').parent('.cs-conditionnActivity-part').parent('.eachassignedact12').next('.eachassignedact12').children('.cs-conditionnActivity-part').children('.cs-conline').children('.cs-else').toggleClass('cs-hide');

});

 
var nisthenumber = 0;      


function eachactivities() {
        $('.cs-eachcontent').html("");
        
        let droppedActivity = $('.cs-pb-ly-droparea').data();
        console.log(droppedActivity)
       
        initialiterationactivities (droppedActivity)
         function initialiterationactivities (fulldataactivities) {
              console.log(fulldataactivities)

              for(var i = 0; i < fulldataactivities.playBackOverall.playbackActivityVOs.length; i++) {
                var dropeachact =  fulldataactivities.playBackOverall.playbackActivityVOs[i];
            

               if (dropeachact.activityType == "Assignment") {

              var eachact = `<div class="cs-act-name cs-pr cs-hmar"><em class="iconclose icact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                         <span class="cs-textb pkclr cs-hmar">${dropeachact.activityType} Activity:</span> 
                        <div class="aclists cs-hide">
                             <div class="eachlistsact active"><span class="cs-tw-600">Variable Name</span> : ${dropeachact.assignmentActivityVO.variableName}</div>
                             <div class="eachlistsact active"><span class="cs-tw-600">Value Type</span> : ${dropeachact.assignmentActivityVO.valueType}</div>
                        </div>
                   </div> `
                   $('.cs-eachcontent').append(eachact)

            }   
            else if(dropeachact.activityType == "Verification") {
                   var eachact =
                `
             <div class="cs-act-name cs-pr cs-hmar"><em class="iconclose icact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
               <span class="cs-textb grclr cs-hmar">${dropeachact.activityType} Activity:</span> 
                   <div class="aclists cs-hide">
                       <div class=" eachlistsact active"><span class="cs-tw-600">Left Expression</span> : ${dropeachact.verificationActivityVO.leftExpressionValue}</div>
                        <div class="eachlistsact active"><span class="cs-tw-600">Operators</span> : ${dropeachact.verificationActivityVO.operator} </div>
                        <div class="eachlistsact active"><span class="cs-tw-600">Right Expression</span> : ${dropeachact.verificationActivityVO.rightExpressionValue}</div>
                        <div class="eachlistsact active"><span class="cs-tw-600">Message</span> : ${dropeachact.verificationActivityVO.message} </div>
                        <div class="eachlistsact active"><span class="cs-tw-600">Expression</span> : ${dropeachact.verificationActivityVO.customExpression} </div>
                     </div>
    
               </div>`
              

               $('.cs-eachcontent').append(eachact)


            }
            else if(dropeachact.activityType == "Assertion") {
                     var appendact =
                        `<div class="cs-act-name cs-hmar cs-pr">
                                   <em class="iconclose icact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                                
                                         <span class="cs-textb ylclr cs-hmar">${dropeachact.activityType}Activity:</span>
                                     <div class="aclists">
                                   
                                             <div class="eachlistsact active"><span class="cs-tw-600">LeftExpressionType</span> : ${dropeachact.assertionActivityVO.leftExpressionType}</div>    
                                             <div class="eachlistsact active"><span class="cs-tw-600">LeftExpressionValue</span> : ${dropeachact.assertionActivityVO.leftExpressionValue}</div>
                                             <div class="eachlistsact active"><span class="cs-tw-600">Operator</span> : ${dropeachact.assertionActivityVO.operator} </div>
                                             <div class="eachlistsact active"><span class="cs-tw-600">RightExpressionType</span> : ${dropeachact.assertionActivityVO.rightExpressionType} </div>
                                             <div class="eachlistsact active"><span class="cs-tw-600">RightExpressionValue</span> : ${dropeachact.assertionActivityVO.rightExpressionValue} </div>
                                             <div class="eachlistsact active"><span class="cs-tw-600">Message</span> :${dropeachact.assertionActivityVO.message} </div>
                                             <div class="eachlistsact active"><span class="cs-tw-600">Expression</span> : ${dropeachact.assertionActivityVO.customExpression} </div>
                                     </div>
                       
                            </div>`
                    $('.cs-eachcontent').append(appendact)
        
                }

            else if(dropeachact.activityType == "OpenURL") {

                var appendact =

                `<div class="cs-act-name cs-hmar cs-pr">
                    <em class="iconclose icact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
   
                        <span class="cs-textb drgreen cs-hmar">${dropeachact.activityType} Activity:</span>
                          <div class="aclists">
                            <div class="eachlistsact active"><span class="cs-tw-600">url type</span> : ${dropeachact.openURLActivityVO.urlType} </div>
                            <div class="eachlistsact active"><span class="cs-tw-600">FunctionName</span> :${dropeachact.openURLActivityVO.functionName}</div>
                            <div class="eachlistsact active"><span class="cs-tw-600">ResponsibilityName</span> :${dropeachact.openURLActivityVO.responsibilityName}</div>
                            <div class="eachlistsact active"><span class="cs-tw-600">ApplicationName</span> :${dropeachact.openURLActivityVO.applicationName}</div>
                            <div class="eachlistsact active"><span class="cs-tw-600">SecurityGroupName</span> :${dropeachact.openURLActivityVO.securityGroupName}</div>
                            <div class="eachlistsact active"><span class="cs-tw-600">LanguageName</span> :${dropeachact.openURLActivityVO.languageShortName}</div>
                            <div class="eachlistsact active"><span class="cs-tw-600">Param Value</span> :${dropeachact.openURLActivityVO.urlParamValue}</div>
                           
                                     
                          </div>
                       
                     </div> `
   
               $('.cs-eachcontent').append(appendact)
   


            }
            else if(dropeachact.activityType == "Login") {

                var appendact =
                `
                     <div class="cs-act-name cs-hmar cs-pr"><em class="iconclose cs-circle icact icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                    
                <span class="cs-textb drred cs-hmar">${dropeachact.activityType} Activity:</span> 
                   <div class="aclists">
                      <div class="eachlistsact active"><span class="cs-tw-600">Username</span> : ${dropeachact.loginActivityVo.userName}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Password</span> : ${dropeachact.loginActivityVo.password} </div>
                   </div>
             
                    
             </div>`
                 $('.cs-eachcontent').append(appendact)


            }
            else if(dropeachact.activityType == "csFileAct") {
                var fileTval;
                if(dropeachact.FileActivityVo.filetype == "") {
                    fileTval = "Read"; 
                }
                else {
                    fileTval = dropeachact.FileActivityVo.filetype;
                }

                var appendact =
                `
                     <div class="cs-act-name cs-hmar cs-pr"><em class="iconclose cs-circle icact icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                    
                <span class="cs-textb csexcelclr cs-hmar">File Activity:</span> 
                   <div class="aclists">
                      <div class="eachlistsact active"><span class="cs-tw-600">File Type</span> : ${fileTval}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Source</span> : ${dropeachact.FileActivityVo.source} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Target (Data Table)</span> : ${dropeachact.FileActivityVo.target} </div>
                   </div>
             
                    
             </div>`
                 $('.cs-eachcontent').append(appendact)


            }
            else if(dropeachact.activityType == "csAddRow") {
                var rowTval;
                if(dropeachact.AddRowActivityVo.rowtype == "") {
                    rowTval = "Array Row"; 
                }
                else {
                    rowTval = dropeachact.AddRowActivityVo.rowtype;
                }

                var appendact =
                `
                     <div class="cs-act-name cs-hmar cs-pr"><em class="iconclose cs-circle icact icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                    
                <span class="cs-textb csaddrowclr cs-hmar">Add Row Activity:</span> 
                   <div class="aclists">
                      <div class="eachlistsact active"><span class="cs-tw-600">Target (Data Table)</span> : ${dropeachact.AddRowActivityVo.target}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Row Type</span> : ${rowTval} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Enter Expression</span> : ${dropeachact.AddRowActivityVo.addrowexpression} </div>
                      <div class="cs-addrow-Attrlist-text-par">`;
                      if(dropeachact.AddRowActivityVo.rowtype == "Data Row") {
                        appendact =+`
                        <div class="cs-textb cs-vsmar cs-tw-600 csaddrowclr">Attribute List</div>
                        <div class="eachlistsact active"><span class="cs-tw-600">Add</span> : ${dropeachact.AddRowActivityVo.addname}</div>
                        <div class="eachlistsact active"><span class="cs-tw-600">Sprint Name</span> : ${dropeachact.AddRowActivityVo.sprintname} </div>
                        <div class="eachlistsact active"><span class="cs-tw-600">Connection Name</span> : ${dropeachact.AddRowActivityVo.conectionname} </div>
                        <div class="eachlistsact active"><span class="cs-tw-600">Version Name</span> : ${dropeachact.AddRowActivityVo.versionname} </div>
                        `
                      }
                      appendact =+`
                      </div>
                      </div>
             
                    
             </div>`
                 $('.cs-eachcontent').append(appendact)


            }
            else if(dropeachact.activityType == "csRemRow") {
                var remRowTval;
                if(nextleveldata.RemRowActivityVo.rowtype == "") {
                    remRowTval = "Array Row"; 
                }
                else {
                    remRowTval = nextleveldata.RemRowActivityVo.rowtype;
                }
                var appendact =
                `
                     <div class="cs-act-name cs-hmar cs-pr"><em class="iconclose cs-circle icact icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                    
                <span class="cs-textb cs-remclr cs-hmar">Remove Row Activity:</span> 
                   <div class="aclists">
                      <div class="eachlistsact active"><span class="cs-tw-600">Data Table</span> : ${dropeachact.RemRowActivityVo.datatable}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Row Type</span> : ${remRowTval} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Row Index Value</span> : ${dropeachact.RemRowActivityVo.rowindexval} </div>`;
                      if(dropeachact.RemRowActivityVo.rowtype == "Row") { 
                        eachact += `
                        <div class="eachlistsact active cs-tw-600"> Row Condition :<span class="cs-remrow-con-list cs-lmar">Condition = </span></div>
                        `
                      }
                      eachact += `
                   </div>
             
                    
             </div>`
                 $('.cs-eachcontent').append(appendact)
                 $(dropeachact.RemRowActivityVo).each(function(index,valact)  {
                    if (valact.condition.length) {
                        var gettheconditionval = valact.condition
                        $(gettheconditionval).each(function (index, value) {
                        var eachExpSet =
                            '<span class="cs-getconditionlabel "> ' + value.condVal + ' <span>' +
                                '<span class="cs-oper ">' + "( " + '</span>' +
                                '<span class="cs-getleftexpval ">' + value.attrName +
                                '</span>' + " " + '<span class="cs-op "> ' + value.operator + ' </span> ' +
                                '<span class="cs-getrightval ">' + value.attVal + '</span>' +
                                '<span class="cs-closecurve ">' + " )" + '</span>' + " " ;

                                
                            $('.cs-remrow-con-list').append(eachExpSet)

                        })
                    }
                });
                $(".cs-remrow-con-list").removeClass("cs-remrow-con-list")
            }
            else if(dropeachact.activityType == "csFilRow") {
                var filRowTval;
                if(dropeachact.FilRowActivityVo.rowType == "") {
                    filRowTval = "By Value"; 
                }
                else {
                    filRowTval = dropeachact.FilRowActivityVo.rowType;
                }
                var appendact =
                `
                     <div class="cs-act-name cs-hmar cs-pr"><em class="iconclose cs-circle icact icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                    
                <span class="cs-textb cs-filrowclr cs-hmar">Filter Row Activity:</span> 
                   <div class="aclists">
                      <div class="eachlistsact active"><span class="cs-tw-600">Data Table</span> : ${dropeachact.FilRowActivityVo.dataTable}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Row Type</span> : ${filRowTval} </div>`;
                      if(dropeachact.UptRowActivityVo.rowType == "By Condition") {
                        appendact +=`
                        <div class="eachlistsact active cs-tw-600"> By Condition :<span class="cs-by-con-list cs-lmar">Condition = </span></div>
                        `
                      }
                      else {
                        appendact +=`
                        <div class="eachlistsact active"><span class="cs-tw-600">Row Index Value</span> : ${dropeachact.FilRowActivityVo.rowIndexVal} </div>
                        <div class="eachlistsact active cs-tw-600"> By Value Condition :<span class="cs-byVal-con-list cs-lmar">Condition = </span></div>
                        `
                      }
                      
                      appendact +=`
                   </div>
             
                    
             </div>`
                 $('.cs-eachcontent').append(appendact)
                 $(dropeachact.FilRowActivityVo).each(function(index,valact)  {
                    if (valact.byValcondition.length) {
                        var gettheconditionval = valact.byValcondition
                        $(gettheconditionval).each(function (index, value) {
                        var eachExpSet =
                            '<span class="cs-getconditionlabel "> ' + value.condVal + ' <span>' +
                                '<span class="cs-oper ">' + "( " + '</span>' +
                                '<span class="cs-getleftexpval ">' + value.attrName +
                                '</span>' + " " + '<span class="cs-op "> ' + value.operator + ' </span> ' +
                                '<span class="cs-getrightval ">' + value.attVal + '</span>' +
                                '<span class="cs-closecurve ">' + " )" + '</span>' + " " ;

                                
                            $('.cs-byVal-con-list').append(eachExpSet)

                        })
                    }
                    if (valact.byCondition.length) {
                        var gettheconditionval = valact.byCondition
                        $(gettheconditionval).each(function (index, value) {
                        var eachExpSet =
                            '<span class="cs-getconditionlabel "> ' + value.condVal + ' <span>' +
                                '<span class="cs-oper ">' + "( " + '</span>' +
                                '<span class="cs-getleftexpval ">' + value.attrName +
                                '</span>' + " " + '<span class="cs-op "> ' + value.operator + ' </span> ' +
                                '<span class="cs-getrightval ">' + value.attVal + '</span>' +
                                '<span class="cs-closecurve ">' + " )" + '</span>' + " " ;

                                
                            $('.cs-by-con-list').append(eachExpSet)

                        })
                    }
                });
                $(".cs-by-con-list").removeClass("cs-by-con-list");
                $(".cs-byVal-con-list").removeClass("cs-byVal-con-list");

            }
            else if(dropeachact.activityType == "csMergeRow") {
                var allowDuplicateVal;
                if(dropeachact.MergeRowActivityVo.allowDuplicate == "") {
                    allowDuplicateVal = "N"; 
                }
                else {
                    allowDuplicateVal = dropeachact.MergeRowActivityVo.allowDuplicate;
                }
                var appendact =
                `
                     <div class="cs-act-name cs-hmar cs-pr"><em class="iconclose cs-circle icact icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                    
                <span class="cs-textb cs-mergerow-clr cs-hmar">Merge Row Activity:</span> 
                   <div class="aclists">
                      <div class="eachlistsact active"><span class="cs-tw-600">Allow Duplicate</span> : ${allowDuplicateVal} </div>
                   </div>
             
                    
             </div>`
                 $('.cs-eachcontent').append(appendact)


            }
            else if(dropeachact.activityType == "csEachRow") {
                $('.cs-eachFetch-par').removeClass('cs-eachFetch-par');
                var appendact =
                `
                     <div class="cs-act-name cs-hmar cs-pr"><em class="iconclose cs-circle icact icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                    
                <span class="cs-textb cs-eachrow-clr cs-hmar">Each Row Activity:</span> 
                   <div class="aclists">
                      <div class="eachlistsact active"><span class="cs-tw-600">For Each</span> : ${dropeachact.EachRowActivityVo.foreach}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">In</span> : ${dropeachact.EachRowActivityVo.in} </div>
                   </div>
                    <div class="cs-eachFetch-par"></div>
                    
             </div>`
                 $('.cs-eachcontent').append(appendact)
                 if(dropeachact.EachRowActivityVo.playbackActivityVOs.length) {
                    nextleveliterationactivities (dropeachact.EachRowActivityVo.playbackActivityVOs, $('.cs-eachFetch-par'))
                 }
            }
            else if(dropeachact.activityType == "csUptRow") {
                var uptRowTval;
                if(dropeachact.UptRowActivityVo.rowType == "") {
                    uptRowTval = "Array Row"; 
                }
                else {
                    uptRowTval = dropeachact.UptRowActivityVo.rowType;
                }
                var appendact =
                `
                     <div class="cs-act-name cs-hmar cs-pr"><em class="iconclose cs-circle icact icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                    
                <span class="cs-textb cs-uptrowclr cs-hmar">Update Row Activity:</span> 
                   <div class="aclists">
                      <div class="eachlistsact active"><span class="cs-tw-600">Data Table</span> : ${dropeachact.UptRowActivityVo.dataTable}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Row Type</span> : ${uptRowTval} </div>;`

                      if(dropeachact.UptRowActivityVo.rowType == "Data Row") { 
                        eachact += `
                        <div class="eachlistsact active cs-tw-600"> Data Row Condition :<span class="cs-uptDatarow-con-list cs-lmar">Condition = </span></div>
                        <div class="cs-textb cs-vsmar cs-tw-600 cs-uptrowclr">Attribute List</div>
                            <div class="eachlistsact active"><span class="cs-tw-600">Add</span> : ${dropeachact.UptRowActivityVo.addname}</div>
                            <div class="eachlistsact active"><span class="cs-tw-600">Sprint Name</span> : ${dropeachact.UptRowActivityVo.sprintname} </div>
                            <div class="eachlistsact active"><span class="cs-tw-600">Connection Name</span> : ${dropeachact.UptRowActivityVo.conectionname} </div>
                            <div class="eachlistsact active"><span class="cs-tw-600">Version Name</span> : ${dropeachact.UptRowActivityVo.versionname} </div>
                        `
                      }
                      else { 
                        eachact += `
                        <div class="eachlistsact1 active"><span class="cs-tw-600">Enter Expression</span> : ${dropeachact.UptRowActivityVo.expression} </div>
                        <div class="eachlistsact active cs-tw-600"> Array Row Condition :<span class="cs-uptArrayrow-con-list cs-lmar">Condition = </span></div>
                        `
                      }  
    
                      eachact += `

                   </div>
             
                    
             </div>`
                 $('.cs-eachcontent').append(appendact)
                 $(dropeachact.UptRowActivityVo).each(function(index,valact)  {
                    if (valact.arrayRowCondition.length) {
                        var gettheconditionval = valact.arrayRowCondition
                        $(gettheconditionval).each(function (index, value) {
                        var eachExpSet =
                            '<span class="cs-getconditionlabel "> ' + value.condVal + ' <span>' +
                                '<span class="cs-oper ">' + "( " + '</span>' +
                                '<span class="cs-getleftexpval ">' + value.attrName +
                                '</span>' + " " + '<span class="cs-op "> ' + value.operator + ' </span> ' +
                                '<span class="cs-getrightval ">' + value.attVal + '</span>' +
                                '<span class="cs-closecurve ">' + " )" + '</span>' + " " ;

                                
                            $('.cs-uptArrayrow-con-list').append(eachExpSet)

                        })
                    }
                    if (valact.dataRowCondition.length) {
                        var gettheconditionval = valact.dataRowCondition
                        $(gettheconditionval).each(function (index, value) {
                        var eachExpSet =
                            '<span class="cs-getconditionlabel "> ' + value.condVal + ' <span>' +
                                '<span class="cs-oper ">' + "( " + '</span>' +
                                '<span class="cs-getleftexpval ">' + value.attrName +
                                '</span>' + " " + '<span class="cs-op "> ' + value.operator + ' </span> ' +
                                '<span class="cs-getrightval ">' + value.attVal + '</span>' +
                                '<span class="cs-closecurve ">' + " )" + '</span>' + " " ;

                                
                            $('.cs-uptDatarow-con-list').append(eachExpSet)

                        })
                    }
                });
                $('.cs-uptArrayrow-con-list').removeClass('cs-uptArrayrow-con-list')
                $('.cs-uptDatarow-con-list').removeClass('cs-uptDatarow-con-list')


            }
            else if(dropeachact.activityType == "Logout") {
                var appendact =
                `<div class="cs-act-name cs-hmar cs-bpad cs-bmar cs-pr"><em class="iconclose cs-circle icon-cs-up-arrow icact cs-pad-sm cs-b-white"></em>
                             <span class="cs-textb brredclr cs-hmar">${dropeachact.activityType} Activity:</span> 
                       </div>`
                $('.cs-eachcontent').append(appendact)


            }
            else if(dropeachact.activityType == "ScreenShot") {

                var appendact =
                `
           <div class="cs-act-name cs-hmar cs-pr"><em class="iconclose cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white icact"></em>
           
           <span class="cs-textb drblclr cs-hmar">${dropeachact.activityType} Activity:</span> 
               <div class="aclists">
                  <div class="eachlistsact active"><span class="cs-tw-600">File Name</span> : ${dropeachact.screenShotActivityVo.fileName}</div>
               </div>
    
                  
           </div>`
            $('.cs-eachcontent').append(appendact)


            }
            else if(dropeachact.activityType == "Launchbrowser") {
                var appendact =
                `
            <div class="cs-act-name cs-hmar cs-bpad cs-bmar cs-pr"><em class="iconclose icact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                  <span class="cs-textb brclr cs-hmar">${dropeachact.activityType} Activity:</span> 
            </div>`
            $('.cs-eachcontent').append(appendact)

            }
            else if(dropeachact.activityType == "Closebrowser") {

                var appendact =
                `
                 <div class="cs-act-name cs-hmar cs-bpad cs-bmar cs-pr"><em class="iconclose icact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                 
                      <span class="cs-textb orclr cs-hmar">${dropeachact.activityType} Activity:</span> 
                     
                  </div>`
            $('.cs-eachcontent').append(appendact)


            }
            else if(dropeachact.activityType == "DataTableActivity") {
                $(".cs-dataT-part").removeClass("cs-dataT-part");
                var appenditact = `<div class="currentiterationactivity cs-itact"><div class="cs-dataT-part"><div class="cs-act-name cs-hmar cs-pr cs-itpart"><em class="iconclose icact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em><span class="blclr cs-dataTabclr cs-hmar">Data Table Activity:</span>
               
                     </div>
                     </div>
                   </div> `

                   $('.cs-eachcontent').append(appenditact)
                   if(dropeachact.dataTableActivityVo.playbackActivityVOs.length) {
                        nextleveliterationactivities (dropeachact.dataTableActivityVo.playbackActivityVOs, $('.currentiterationactivity > .cs-dataT-part'))
                     }



            }
            else if(dropeachact.activityType == "ExcelAutomationAct") {
                $(".cs-excelA1-part").removeClass("cs-excelA1-part");
                var eachact = `<div class="currentiterationactivity cs-itact"><div class="cs-excelA1-part"><div class="cs-act-name cs-pr cs-hmar cs-itpart"><em class="iclayact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em><span class="blclr cs-excAutclr cs-hmar">Excel Activity:</span>
                                            </div>
                                        </div>
                               </div> `
                               $('.cs-eachcontent').append(eachact) 

                 if(dropeachact.excelAutomationActivityVo.playbackActivityVOs.length) {
                    nextleveliterationactivities (dropeachact.excelAutomationActivityVo.playbackActivityVOs, $('.currentiterationactivity > .cs-excelA1-part'));
                 
               }

           
            }
            else if(dropeachact.activityType == "csExcelAct") {
                var appendact =
                `
                     <div class="cs-act-name cs-hmar cs-pr"><em class="iconclose cs-circle icact icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                    
                <span class="cs-textb cs-exc-act-clr cs-hmar">Excel File:</span> 
                   <div class="aclists">
                      <div class="eachlistsact active"><span class="cs-tw-600">Select File Location</span> : ${dropeachact.excelSubActivityVo.selectFileLocation}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">References Name</span> : ${dropeachact.excelSubActivityVo.referencesName} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Create if not exists</span> : ${dropeachact.excelSubActivityVo.createIfNotExists} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Save Changes</span> : ${dropeachact.excelSubActivityVo.saveChanges} </div>
                   </div>
             
                    
             </div>`
                 $('.cs-eachcontent').append(appendact)
            }
            else if(dropeachact.activityType == "Hotkey") {

                var appendact =
                `
                <div class="cs-act-name cs-hmar cs-pr"><em class="iconclose icact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
        
                <span class="cs-textb vclr cs-hmar">${dropeachact.activityType} Activity:</span> 
                    <div class="aclists">
                        <div class="eachlistsact active"><span class="cs-tw-600">Hotkey Value</span> : ${dropeachact.hotkeyActivityVo.hotkeyValue}</div>
                        
                   </div>
   
              
              </div>`
            $('.cs-eachcontent').append(appendact)


            }
            else if(dropeachact.activityType == "Entail") {

                var appendact =
                `
                  <div class="cs-act-name cs-hmar cs-bpad cs-pr"><em class="iconclose cs-circle icact icon-cs-up-arrow cs-pad-sm cs-b-white"></em><em class="icon-cs-execute cs-greenc cs-hpad"></em>
                         <span class="cs-textb greclr">Playback : </span> <span>${dropeachact.playbackName}</span>
                 </div>`
               $('.cs-eachcontent').append(appendact)

            }

             else if(dropeachact.activityType == "Iteration") {

                 var appenditact = `<div class="currentiterationactivity cs-itact"><div class="cs-Iteration-part"><div class="cs-act-name cs-hmar cs-pr cs-itpart"><em class="iconclose icact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em><span class="blclr cs-textb cs-hmar">${dropeachact.activityType} Activity:</span>
                 <div class="aclists cs-hide">
                     <div class="eachlistsact active"><span class="cs-tw-600">Element Type</span> : ${dropeachact.iterationActivityVO.iterationCountType}</div>  

                      <div class="eachlistsact active"><span class="cs-tw-600">Element value</span> : ${dropeachact.iterationActivityVO.iterationCountValue}</div>
                   </div>         
                    
                     </div>
                     </div>
                
            
                   </div> `

                   $('.cs-eachcontent').append(appenditact)
                   if(dropeachact.iterationActivityVO.playbackActivityVOs.length) {

                        nextleveliterationactivities (dropeachact.iterationActivityVO.playbackActivityVOs, $('.currentiterationactivity > .cs-Iteration-part'))
                        
                          $(".currentiterationactivity").removeClass("currentiterationactivity")
                     }

                   
                }
           
           
              else if(dropeachact.activityType == "Layout") {
                
                var appendlayact = 
                `<div class="currentlayoutactivity"><div class="cs-layout-part cs-lay"><div class="cs-act-name cs-hmar cs-pr cs-laypart">
                    <em class="iconclose icact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                      <em class="icon-cs-layout cs-bluec cs-hpad"></em>
              
                     <span class="cs-textb blclr">${dropeachact.activityType} Activity: </span>
                     <span> ${dropeachact.layoutActivityVO.layoutName} </span>
                      <span class="appendlayact"></span>
                      <div class="aclists cs-hide">
                         <div class="currentappendblock"></div>

                      </div>
                     
                    </div>
                </div>
            
              </div> `

            
            $('.cs-eachcontent').append(appendlayact);

                 $(dropeachact.layoutActivityVO.playbackActivityVOs).each(function (index,layactlength) {
               
                 if(layactlength.activityType == "Element") {
               
                    var appendele = 
                          '<div class="eachlistsact active"><span class="cs-tw-600">' +layactlength.elementActivityVO.layoutElementsVO.elementName + '</span> : ' + '<span class=""> '+ layactlength.elementActivityVO.layoutElementsVO.elementType + '</span></div>' 
                          
                       $('.currentappendblock').append(appendele)
                               
                       }

                     
                  else{
                    nisthenumber = 0;
                       getactdata (layactlength,  $(".currentlayoutactivity > .cs-layout-part").find(".currentappendblock"))
                       
                                //  $('.currentlayoutactivity').removeClass('currentlayoutactivity')
                    }

                  });
            }
                   

             $(dropeachact.conditionalActivitySet).each(function(index,valact)  {

              
                
                       
                       if (valact.conditionalActivityVO.clauseType == "If") {  

                        var eachact = `<div class="currentconditionactivity cs-conif"><div class="cs-conditionnActivity-part cs-eachact"><div class="cs-act-name cs-hmar cs-bpad cs-pr cs-conline">
                        <em class="iconclose icact cs-circle icon-cs-up-arrow cs-pad-sm"></em>
                                 <span class="vtclr cs-textb cs-hmar"> Condition Activity</span>
                                
                            <div class="cs-if cs-lmar-lg cs-hide"><span class="cs-icif"><em class="ic-conact icact cs-circle icon-cs-up-arrow cs-pad-sm cs-line"></em></span>
                                  <span class="if-block cs-tw-600 cs-lmar"> If :
                                  <span class="appendifconditionlists actvalact eachset cs-tw-600">Condition = </span></span>
                                  <div class="appendifactivities"></div>
                              </div>
                           
                         </div> </div> </div> `  
                   
                   $('.cs-eachcontent').append(eachact)

                          if (valact.conditionalActivityVO.condition.length) {
                               var gettheconditionval = valact.conditionalActivityVO.condition
                               var customexpression = valact.conditionalActivityVO.customExpression
                               $(gettheconditionval).each(function (index, value) {
                               var eachExpSet =
                                      '<span class="cs-getconditionlabel "> ' + value.getConditionalValue + ' <span>' +
                                       '<span class="cs-oper ">' + "( " + '</span>' +
                                       '<span class="cs-getleftexpval ">' + value.leftexp +
                                       '</span>' + " " + '<span class="cs-op "> ' + value.operator + ' </span> ' +
                                       '<span class="cs-getrightval ">' + value.rightexp + '</span>' +
                                       '<span class="cs-closecurve ">' + " )" + '</span>' + " " ;
        
                                       
                                   $('.appendifconditionlists').append(eachExpSet)

                                })
                             }

                             if(valact.conditionalActivityVO.playbackActivityVOs.length) {
   
                                nextleveliterationactivities (valact.conditionalActivityVO.playbackActivityVOs,$(".currentconditionactivity > .cs-conditionnActivity-part .appendifactivities"))
                                  
                                  $('.currentconditionactivity').removeClass('currentconditionactivity')
                           
                            }    
                            
                          }

                     else if(valact.conditionalActivityVO.clauseType == "ElseIf") {

                        var eachact = `<div class="currentconditionactivity cs-conelseif"><div class="cs-conditionnActivity-part cs-eachact"><div class="cs-act-name cs-hmar cs-bpad cs-pr cs-conline">
                             
                             <div class="cs-elseif cs-lmar-lg cs-hide"><span class="cs-icif"><em class="ic-conact icact cs-circle icon-cs-up-arrow cs-pad-sm cs-line"></em></span>
                                  <span class="elseif-block cs-tw-600 cs-lmar"> ElseIf :
                                  <span class="appendelseifconditionlists actvalact eachset cs-tw-600">Condition = </span></span>
                                  <div class="appendelseifactivities cs-hide"></div>
                            </div>
               
                               </div> </div> </div> `  
                      $('.cs-eachcontent').append(eachact)

                      if (valact.conditionalActivityVO.condition.length) {
                        var gettheconditionval = valact.conditionalActivityVO.condition
                        var customexpression = valact.conditionalActivityVO.customExpression
                        $(gettheconditionval).each(function (index, value) {
                        var eachExpSet =
                               '<span class="cs-getconditionlabel "> ' + value.getConditionalValue + ' <span>' +
                                '<span class="cs-oper ">' + "( " + '</span>' +
                                '<span class="cs-getleftexpval ">' + value.leftexp +
                                '</span>' + " " + '<span class="cs-op "> ' + value.operator + ' </span> ' +
                                '<span class="cs-getrightval ">' + value.rightexp + '</span>' +
                                '<span class="cs-closecurve ">' + " )" + '</span>' + " " ;
                             
                           $('.appendelseifconditionlists').append(eachExpSet)

                         })
                      }

                        if(valact.conditionalActivityVO.playbackActivityVOs.length) {

                            nextleveliterationactivities (valact.conditionalActivityVO.playbackActivityVOs,$(".currentconditionactivity > .cs-conditionnActivity-part .appendelseifactivities"))
                            $('.currentconditionactivity').removeClass('currentconditionactivity')
                       }
                    }  

                     else if(valact.conditionalActivityVO.clauseType == "Else") {
                                   
                        var eachact = `<div class="currentconditionactivity cs-conelse"><div class="cs-conditionnActivity-part cs-eachact"><div class="cs-act-name cs-hmar cs-bpad cs-pr cs-conline">


                        <div class="cs-else cs-lmar-lg cs-hide"><span class="cs-icif"><em class="ic-conact icact cs-circle icon-cs-up-arrow cs-pad-sm cs-line"></em></span>
                                  <span class="else-block cs-tw-600 cs-lmar"> Else : </span>
                                  
                              <div class="appendelseactivities"></div>
                        </div> 
                            
                       
                       </div> </div> </div> `  
                         $('.cs-eachcontent').append(eachact)

                         if(valact.conditionalActivityVO.playbackActivityVOs.length) {
   
                            nextleveliterationactivities (valact.conditionalActivityVO.playbackActivityVOs,$(".currentconditionactivity > .cs-conditionnActivity-part .appendelseactivities"))
                             
                              $('.currentconditionactivity').removeClass('currentconditionactivity')
                       
                        }    
                     }

                          
                      
                        
                       })

    
       
          $('.btn-design').removeClass('active');
         $('.btn-text').addClass('active');
       $('.cs-pb-ly-droparea').addClass('cs-hide');
        $('.cs-text-content').removeClass('cs-hide');

       
         
              }
            }

    
            
        function getactdata (nextleveldata,appendPathact) {

         
             console.log(nextleveldata)

           if (nextleveldata.activityType == "Assignment") {
                
            let eachact = `<div class="eachassignedact cs-hide"><div class="cs-act-name cs-pr cs-hmar cs-inact"><em class="iconact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
              <span class="cs-textb pkclr cs-hmar">${nextleveldata.activityType} Activity:</span> 
               <div class="aclists multiact cs-hide">
                  <div class="eachlistsact1 active"><span class="cs-tw-600">Variable Name</span> : ${nextleveldata.assignmentActivityVO.variableName}</div>
                  <div class="eachlistsact1 active"><span class="cs-tw-600">Value Type</span> : ${nextleveldata.assignmentActivityVO.valueType}</div>
             </div>
             </div> 
             </div></div>  `
                      $(appendPathact).append(eachact)
                 

            }  

          else if(nextleveldata.activityType == "Verification") {
            // $(".eachlistsact1").removeClass("eachlistsact1");
            let eachact =
                `
                <div class="eachassignedact cs-hide"><div class="cs-act-name cs-pr cs-hmar cs-inact"><em class="iconact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
               <span class="cs-textb grclr cs-hmar">${nextleveldata.activityType} Activity:</span> 
                   <div class="aclists multiact cs-hide">
                       <div class="eachlistsact1 active"><span class="cs-tw-600">Left Expression</span> : ${nextleveldata.verificationActivityVO.leftExpressionValue}</div>
                        <div class="eachlistsact1 active"><span class="cs-tw-600">Operators</span> : ${nextleveldata.verificationActivityVO.operator} </div>
                        <div class="eachlistsact1 active"><span class="cs-tw-600">Right Expression</span> : ${nextleveldata.verificationActivityVO.rightExpressionValue}</div>
                        <div class="eachlistsact1 active"><span class="cs-tw-600">Message</span> : ${nextleveldata.verificationActivityVO.message} </div>
                       <div class="eachlistsact1 active"><span class="cs-tw-600">Expression</span> : ${nextleveldata.verificationActivityVO.customExpression} </div>
                 </div>
                </div> 
               </div> `
                
               $(appendPathact).append(eachact)
                //  appendPath.append(eachact) 


              }
          else if(nextleveldata.activityType == "Assertion") {
           
                let eachact =
                    ` <div class="eachassignedact cs-hide"><div class="cs-act-name cs-pr cs-hmar">
                               <em class="iconact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                            
                                     <span class="cs-textb ylclr cs-hmar">${nextleveldata.activityType}Activity:</span>
                                 <div class="aclists multiact cs-hide">
                               
                                         <div class="eachlistsact1 active"><span class="cs-tw-600">LeftExpressionType</span> : ${nextleveldata.assertionActivityVO.leftExpressionType}</div>    
                                         <div class="eachlistsact1 active"><span class="cs-tw-600">LeftExpressionValue</span> : ${nextleveldata.assertionActivityVO.leftExpressionValue}</div>
                                         <div class="eachlistsact1 active"><span class="cs-tw-600">Operator</span> : ${nextleveldata.assertionActivityVO.operator} </div>
                                         <div class="eachlistsact1 active"><span class="cs-tw-600">RightExpressionType</span> : ${nextleveldata.assertionActivityVO.rightExpressionType} </div>
                                         <div class="eachlistsact1 active"><span class="cs-tw-600">RightExpressionValue</span> : ${nextleveldata.assertionActivityVO.rightExpressionValue} </div>
                                        <div class="eachlistsact1 active"><span class="cs-tw-600">Message</span> :${nextleveldata.assertionActivityVO.message} </div>
                                         <div class="eachlistsact1 active"><span class="cs-tw-600">Expression</span> : ${nextleveldata.assertionActivityVO.customExpression} </div>
                                 </div>
                   
                        </div>
                    
                        </div>`
                        $(appendPathact).append(eachact)
    
           }
          else if(nextleveldata.activityType == "OpenURL") {

              let eachact =

            ` <div class="eachassignedact cs-hide"><div class="cs-act-name cs-pr cs-hmar">
                <em class="iconact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>

                    <span class="cs-textb drgreen cs-hmar">${nextleveldata.activityType} Activity:</span>
                      <div class="aclists multiact cs-hide">
                        <div class="eachlistsact1 active"><span class="cs-tw-600">url type</span> : ${nextleveldata.openURLActivityVO.urlType} </div>
                        <div class="eachlistsact1 active"><span class="cs-tw-600">FunctionName</span> :${nextleveldata.openURLActivityVO.functionName}</div>
                        <div class="eachlistsact1 active"><span class="cs-tw-600">ResponsibilityName</span> :${nextleveldata.openURLActivityVO.responsibilityName}</div>
                        <div class="eachlistsact1 active"><span class="cs-tw-600">ApplicationName</span> :${nextleveldata.openURLActivityVO.applicationName}</div>
                        <div class="eachlistsact1 active"><span class="cs-tw-600">SecurityGroupName</span> :${nextleveldata.openURLActivityVO.securityGroupName}</div>
                        <div class="eachlistsact1 active"><span class="cs-tw-600">LanguageName</span> :${nextleveldata.openURLActivityVO.languageShortName}</div>
                        <div class="eachlistsact1 active"><span class="cs-tw-600">Param Value</span> :${nextleveldata.openURLActivityVO.urlParamValue}</div>
                       
                                 
                      </div>
                   
                 </div> </div>  `

                 $(appendPathact).append(eachact)

            }
          else if(nextleveldata.activityType == "Login") {

             let eachact =
            `
            <div class="eachassignedact cs-hide"><div class="cs-act-name cs-pr cs-hmar"><em class="iconact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                
            <span class="cs-textb drred cs-hmar">${nextleveldata.activityType} Activity:</span> 
               <div class="aclists multiact cs-hide">
                  <div class="eachlistsact1 active"><span class="cs-tw-600">Username</span> : ${nextleveldata.loginActivityVo.userName}</div>
                  <div class="eachlistsact1 active"><span class="cs-tw-600">Password</span> : ${nextleveldata.loginActivityVo.password} </div>
               </div>
         
                
             </div> </div> `
             $(appendPathact).append(eachact)

          }
          else if(nextleveldata.activityType == "csFileAct") {
            var fileTval;
            if(nextleveldata.FileActivityVo.filetype == "") {
                fileTval = "Read"; 
            }
            else {
                fileTval = nextleveldata.FileActivityVo.filetype;
            }

            let eachact =
           `
           <div class="eachassignedact cs-hide"><div class="cs-act-name cs-pr cs-hmar"><em class="iconact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
               
           <span class="cs-textb csexcelclr cs-hmar">File Activity:</span> 
              <div class="aclists multiact cs-hide">
                 <div class="eachlistsact1 active"><span class="cs-tw-600">File Type</span> : ${fileTval}</div>
                 <div class="eachlistsact1 active"><span class="cs-tw-600">Source</span> : ${nextleveldata.FileActivityVo.source} </div>
                 <div class="eachlistsact1 active"><span class="cs-tw-600">Target (Data Table)</span> : ${nextleveldata.FileActivityVo.target} </div>
              </div>
        
               
            </div> </div> `
            $(appendPathact).append(eachact)

         }
         else if(nextleveldata.activityType == "csAddRow") {
            var rowTval;
            if(nextleveldata.AddRowActivityVo.rowtype == "") {
                rowTval = "Array Row"; 
            }
            else {
                rowTval = nextleveldata.AddRowActivityVo.rowtype;
            }

            let eachact =
           `
           <div class="eachassignedact cs-hide"><div class="cs-act-name cs-pr cs-hmar"><em class="iconact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
               
           <span class="cs-textb csaddrowclr cs-hmar">Add Row Activity:</span> 
              <div class="aclists multiact cs-hide">
                 <div class="eachlistsact1 active"><span class="cs-tw-600">Target (Data Table)</span> : ${nextleveldata.AddRowActivityVo.target}</div>
                 <div class="eachlistsact1 active"><span class="cs-tw-600">Row Type</span> : ${rowTval} </div>
                 <div class="eachlistsact1 active"><span class="cs-tw-600">Enter Expression</span> : ${nextleveldata.AddRowActivityVo.addrowexpression} </div>
                 <div class="cs-addrow-Attrlist-text-par">`;
                 if(nextleveldata.AddRowActivityVo.rowtype == "Data Row") { 
                    eachact =+`
                    <div class="cs-vsmar cs-tw-600  csaddrowclr">Attribute List</div>
                    <div class="eachlistsact active"><span class="cs-tw-600">Add</span> : ${nextleveldata.AddRowActivityVo.addname}</div>
                    <div class="eachlistsact active"><span class="cs-tw-600">Sprint Name</span> : ${nextleveldata.AddRowActivityVo.sprintname} </div>
                    <div class="eachlistsact active"><span class="cs-tw-600">Connection Name</span> : ${nextleveldata.AddRowActivityVo.conectionname} </div>
                    <div class="eachlistsact active"><span class="cs-tw-600">Version Name</span> : ${nextleveldata.AddRowActivityVo.versionname} </div>
                    `
                 }

                 eachact =+`   
                 </div>
              </div>
        
               
            </div> </div> `
            $(appendPathact).append(eachact)

         }
         else if(nextleveldata.activityType == "csRemRow") {
            var remRowTval;
            if(nextleveldata.RemRowActivityVo.rowtype == "") {
                remRowTval = "Array Row"; 
            }
            else {
                remRowTval = nextleveldata.RemRowActivityVo.rowtype;
            }
            let eachact =
           `
           <div class="eachassignedact cs-hide"><div class="cs-act-name cs-pr cs-hmar"><em class="iconact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
               
           <span class="cs-textb cs-remclr cs-hmar">Remove Row Activity:</span> 
              <div class="aclists multiact cs-hide">
                 <div class="eachlistsact1 active"><span class="cs-tw-600">Data Table</span> : ${nextleveldata.RemRowActivityVo.datatable}</div>
                 <div class="eachlistsact1 active"><span class="cs-tw-600">Row Type</span> : ${remRowTval} </div>
                 <div class="eachlistsact1 active"><span class="cs-tw-600">Row Index Value</span> : ${nextleveldata.RemRowActivityVo.rowindexval} </div>`;
                 if(nextleveldata.RemRowActivityVo.rowtype == "Row") { 
                    eachact += `
                    <div class="eachlistsact active cs-tw-600"> Row Condition :<span class="cs-remrow-con-list cs-lmar">Condition = </span></div>
                    `
                  }
                  eachact += `
              </div>
        
               
            </div> </div> `
            $(appendPathact).append(eachact)
            $(dropeachact.RemRowActivityVo).each(function(index,valact)  {
                if (valact.condition.length) {
                    var gettheconditionval = valact.condition
                    $(gettheconditionval).each(function (index, value) {
                    var eachExpSet =
                        '<span class="cs-getconditionlabel "> ' + value.condVal + ' <span>' +
                            '<span class="cs-oper ">' + "( " + '</span>' +
                            '<span class="cs-getleftexpval ">' + value.attrName +
                            '</span>' + " " + '<span class="cs-op "> ' + value.operator + ' </span> ' +
                            '<span class="cs-getrightval ">' + value.attVal + '</span>' +
                            '<span class="cs-closecurve ">' + " )" + '</span>' + " " ;

                            
                        $('.cs-remrow-con-list').append(eachExpSet)

                    })
                }
            });
            $(".cs-remrow-con-list").removeClass("cs-remrow-con-list")

         }
         else if(nextleveldata.activityType == "csFilRow") {
            var filRowTval;
            if(nextleveldata.UptRowActivityVo.rowType == "") {
                filRowTval = "By Value"; 
            }
            else {
                filRowTval = nextleveldata.FilRowActivityVo.rowType;
            }
            let eachact =
           `
           <div class="eachassignedact cs-hide"><div class="cs-act-name cs-pr cs-hmar"><em class="iconact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
               
           <span class="cs-textb cs-filrowclr cs-hmar">Filter Row Activity:</span> 
              <div class="aclists multiact cs-hide">
                 <div class="eachlistsact1 active"><span class="cs-tw-600">Data Table</span> : ${nextleveldata.FilRowActivityVo.dataTable}</div>
                 <div class="eachlistsact1 active"><span class="cs-tw-600">Row Type</span> : ${filRowTval} </div>`;
                 if(nextleveldata.FilRowActivityVo.rowType == "By Condition") {
                    eachact +=`
                    <div class="eachlistsact active cs-tw-600"> By Condition :<span class="cs-by-con-list cs-lmar">Condition = </span></div>
                    `
                  }
                  else {
                    eachact +=`
                    <div class="eachlistsact active"><span class="cs-tw-600">Row Index Value</span> : ${nextleveldata.FilRowActivityVo.rowIndexVal} </div>
                    <div class="eachlistsact active cs-tw-600"> By Value Condition :<span class="cs-byVal-con-list cs-lmar">Condition = </span></div>
                    `
                  }
                  
                  eachact +=`
              </div>
        
               
            </div> </div> `
            $(appendPathact).append(eachact)
            $(dropeachact.FilRowActivityVo).each(function(index,valact)  {
                if (valact.byValcondition.length) {
                    var gettheconditionval = valact.byValcondition
                    $(gettheconditionval).each(function (index, value) {
                    var eachExpSet =
                        '<span class="cs-getconditionlabel "> ' + value.condVal + ' <span>' +
                            '<span class="cs-oper ">' + "( " + '</span>' +
                            '<span class="cs-getleftexpval ">' + value.attrName +
                            '</span>' + " " + '<span class="cs-op "> ' + value.operator + ' </span> ' +
                            '<span class="cs-getrightval ">' + value.attVal + '</span>' +
                            '<span class="cs-closecurve ">' + " )" + '</span>' + " " ;

                            
                        $('.cs-byVal-con-list').append(eachExpSet)

                    })
                }
                if (valact.byCondition.length) {
                    var gettheconditionval = valact.byCondition
                    $(gettheconditionval).each(function (index, value) {
                    var eachExpSet =
                        '<span class="cs-getconditionlabel "> ' + value.condVal + ' <span>' +
                            '<span class="cs-oper ">' + "( " + '</span>' +
                            '<span class="cs-getleftexpval ">' + value.attrName +
                            '</span>' + " " + '<span class="cs-op "> ' + value.operator + ' </span> ' +
                            '<span class="cs-getrightval ">' + value.attVal + '</span>' +
                            '<span class="cs-closecurve ">' + " )" + '</span>' + " " ;

                            
                        $('.cs-by-con-list').append(eachExpSet)

                    })
                }
            });
            $(".cs-by-con-list").removeClass("cs-by-con-list");
            $(".cs-byVal-con-list").removeClass("cs-byVal-con-list");

         }
         else if(nextleveldata.activityType == "csMergeRow") {
            var allowDuplicateVal;
            if(dropeachact.MergeRowActivityVo.allowDuplicate == "") {
                allowDuplicateVal = "N"; 
            }
            else {
                allowDuplicateVal = dropeachact.MergeRowActivityVo.allowDuplicate;
            }
            let eachact =
           `
           <div class="eachassignedact cs-hide"><div class="cs-act-name cs-pr cs-hmar"><em class="iconact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
               
           <span class="cs-textb cs-mergerow-clr cs-hmar">Merge Row Activity:</span> 
              <div class="aclists multiact cs-hide">
                 <div class="eachlistsact1 active"><span class="cs-tw-600">Allow Duplicate</span> : ${allowDuplicateVal} </div>
              </div>
        
               
            </div> </div> `
            $(appendPathact).append(eachact)

         }
         else if(nextleveldata.activityType == "csEachRow") {
            $('.cs-eachFetch-par').removeClass('cs-eachFetch-par');
            let eachact =
           `
           <div class="eachassignedact cs-hide"><div class="cs-act-name cs-pr cs-hmar"><em class="iconact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
               
           <span class="cs-textb cs-eachrow-clr cs-hmar">Each Row Activity:</span> 
              <div class="aclists multiact cs-hide">
                 <div class="eachlistsact1 active"><span class="cs-tw-600">For Each</span> : ${nextleveldata.EachRowActivityVo.foreach}</div>
                 <div class="eachlistsact1 active"><span class="cs-tw-600">In</span> : ${nextleveldata.EachRowActivityVo.in} </div>
              </div>
              <div class="cs-eachFetch-par"></div>
               
            </div> </div> `
            $(appendPathact).append(eachact)
            if(nextleveldata.EachRowActivityVo.playbackActivityVOs.length) {
                nextleveliterationactivities (nextleveldata.EachRowActivityVo.playbackActivityVOs, $('.cs-eachFetch-par'))
             }

         }
         else if(nextleveldata.activityType == "csUptRow") {
            var uptRowTval;
            if(nextleveldata.UptRowActivityVo.rowType == "") {
                uptRowTval = "Array Row"; 
            }
            else {
                uptRowTval = nextleveldata.UptRowActivityVo.rowType;
            }
            let eachact =
           `
           <div class="eachassignedact cs-hide"><div class="cs-act-name cs-pr cs-hmar"><em class="iconact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
               
           <span class="cs-textb cs-uptrowclr cs-hmar">Update Row Activity:</span> 
              <div class="aclists multiact cs-hide">
                 <div class="eachlistsact1 active"><span class="cs-tw-600">Data Table</span> : ${nextleveldata.UptRowActivityVo.dataTable}</div>
                 <div class="eachlistsact1 active"><span class="cs-tw-600">Row Type</span> : ${uptRowTval} </div>`;
                 if(nextleveldata.UptRowActivityVo.rowType == "Data Row") { 
                    eachact += `
                    <div class="eachlistsact active cs-tw-600"> Data Row Condition :<span class="cs-uptDatarow-con-list cs-lmar">Condition = </span></div>
                    <div class="cs-textb cs-vsmar cs-tw-600 cs-uptrowclr">Attribute List</div>
                        <div class="eachlistsact active"><span class="cs-tw-600">Add</span> : ${nextleveldata.UptRowActivityVo.addname}</div>
                        <div class="eachlistsact active"><span class="cs-tw-600">Sprint Name</span> : ${nextleveldata.UptRowActivityVo.sprintname} </div>
                        <div class="eachlistsact active"><span class="cs-tw-600">Connection Name</span> : ${nextleveldata.UptRowActivityVo.conectionname} </div>
                        <div class="eachlistsact active"><span class="cs-tw-600">Version Name</span> : ${nextleveldata.UptRowActivityVo.versionname} </div>
                    `
                  }
                  else { 
                    eachact += `
                    <div class="eachlistsact1 active"><span class="cs-tw-600">Enter Expression</span> : ${nextleveldata.UptRowActivityVo.expression} </div>
                    <div class="eachlistsact active cs-tw-600"> Array Row Condition :<span class="cs-uptArrayrow-con-list cs-lmar">Condition = </span></div>
                    `
                  }  

                  eachact += `
              </div>
               
            </div> </div> `
            $(appendPathact).append(eachact)
            $(dropeachact.UptRowActivityVo).each(function(index,valact)  {
                if (valact.arrayRowCondition.length) {
                    var gettheconditionval = valact.arrayRowCondition
                    $(gettheconditionval).each(function (index, value) {
                    var eachExpSet =
                        '<span class="cs-getconditionlabel "> ' + value.condVal + ' <span>' +
                            '<span class="cs-oper ">' + "( " + '</span>' +
                            '<span class="cs-getleftexpval ">' + value.attrName +
                            '</span>' + " " + '<span class="cs-op "> ' + value.operator + ' </span> ' +
                            '<span class="cs-getrightval ">' + value.attVal + '</span>' +
                            '<span class="cs-closecurve ">' + " )" + '</span>' + " " ;

                            
                        $('.cs-uptArrayrow-con-list').append(eachExpSet)

                    })
                }
                if (valact.dataRowCondition.length) {
                    var gettheconditionval = valact.dataRowCondition
                    $(gettheconditionval).each(function (index, value) {
                    var eachExpSet =
                        '<span class="cs-getconditionlabel "> ' + value.condVal + ' <span>' +
                            '<span class="cs-oper ">' + "( " + '</span>' +
                            '<span class="cs-getleftexpval ">' + value.attrName +
                            '</span>' + " " + '<span class="cs-op "> ' + value.operator + ' </span> ' +
                            '<span class="cs-getrightval ">' + value.attVal + '</span>' +
                            '<span class="cs-closecurve ">' + " )" + '</span>' + " " ;

                            
                        $('.cs-uptDatarow-con-list').append(eachExpSet)

                    })
                }
            });

         }

        else if(nextleveldata.activityType == "Logout") {

                let eachact =
         `<div class="eachassignedact cs-hide"><div class="cs-act-name cs-pr cs-bpad cs-bmar cs-hmar cs-act-section cs-hide"><em class="iconact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                 <span class="cs-textb brredclr cs-hmar">${nextleveldata.activityType} Activity:</span> 
              </div> </div>`
              $(appendPathact).append(eachact)
   
          }

          else if(nextleveldata.activityType == "ScreenShot") { 
       
                let eachact =
                    `
                 <div class="eachassignedact cs-hide"><div class="cs-act-name cs-pr cs-hmar"><em class="iconact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
               
               <span class="cs-textb drblclr cs-hmar">${nextleveldata.activityType} Activity:</span> 
                   <div class="aclists multiact cs-hide">
                      <div class="eachlistsact1 active"><span class="cs-tw-600">File Name</span> : ${nextleveldata.screenShotActivityVo.fileName}</div>
                   </div>
        
                      
               </div> </div>`
               $(appendPathact).append(eachact)

             
            
            }
          else if(nextleveldata.activityType == "Launchbrowser") {
       
                let eachact =
                    `
                    <div class="eachassignedact cs-hide"><div class="cs-act-name cs-pr cs-hmar"><em class="iconact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                      <span class="cs-textb brclr cs-hmar">${nextleveldata.activityType} Activity:</span> 
                </div> </div>`
                $(appendPathact).append(eachact)
    
           }
          else if(nextleveldata.activityType == "Closebrowser") {

                let eachact =
                   `
                <div class="eachassignedact cs-hide"><div class="cs-act-name cs-pr cs-bpad cs-hmar "><em class="iconact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                       <span class="cs-textb orclr cs-hmar">${nextleveldata.activityType} Activity:</span> 
                        
                 </div> </div>`
                 $(appendPathact).append(eachact) 
           
            }
            else if(nextleveldata.activityType == "DataTableActivity") {
                $(".cs-dTable-part").removeClass("cs-dTable-part");
                let eachact = `<div class="eachassignedact cs-hide"><div class="cs-dTable-part"><div class="cs-act-name cs-pr cs-hmar cs-itpart"><em class="iclayact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em><span class="blclr cs-dataTabclr cs-hmar">Data Table Activity:</span>
                   </div>
              
                 </div> 
                 </div> `
                 $(appendPathact).append(eachact)
 
                //  $(".currentiterationactivity").removeClass("currentiterationactivity")
             
                     if(nextleveldata.dataTableActivityVo.playbackActivityVOs.length) {
                         nextleveliterationactivities (nextleveldata.dataTableActivityVo.playbackActivityVOs, appendPathact.find(">.eachassignedact > .cs-dTable-part"))
                       
                     }
           
            }
            else if(nextleveldata.activityType == "ExcelAutomationAct") {
                $(".cs-excelA2-part").removeClass("cs-excelA2-part");
                var eachact = `<div class="eachassignedact cs-hide"><div class="cs-excelA2-part"><div class="cs-act-name cs-pr cs-hmar cs-itpart"><em class="iclayact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em><span class="blclr cs-excAutclr cs-hmar">Excel Activity:</span>
                                            </div>
                                        </div>
                               </div> `
                               $(appendPathact).append(eachact) 

                 if(nextleveldata.excelAutomationActivityVo.playbackActivityVOs.length) {
                    nextleveliterationactivities (nextleveldata.excelAutomationActivityVo.playbackActivityVOs, appendPathact.find(">.eachassignedact > .cs-excelA2-part"));
                 
               }

           
            }
            else if(nextleveldata.activityType == "csExcelAct") {
                var appendact =
                `
                <div class="eachassignedact cs-hide"><div class="cs-act-name cs-hmar cs-pr"><em class="iconclose cs-circle icact icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                    
                <span class="cs-textb cs-exc-act-clr cs-hmar">Excel File:</span> 
                   <div class="aclists multiact cs-hide">
                      <div class="eachlistsact active"><span class="cs-tw-600">Select File Location</span> : ${nextleveldata.excelSubActivityVo.selectFileLocation}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">References Name</span> : ${nextleveldata.excelSubActivityVo.referencesName} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Create if not exists</span> : ${nextleveldata.excelSubActivityVo.createIfNotExists} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Save Changes</span> : ${nextleveldata.excelSubActivityVo.saveChanges} </div>
                   </div>
                   </div>
             
                    
             </div>`
             $(appendPathact).append(appendact)
            }
          else if(nextleveldata.activityType == "Hotkey") {
        
                let eachact =
                     `
                     <div class="eachassignedact cs-hide"><div class="cs-act-name cs-pr cs-hmar"><em class="iconact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
             
                     <span class="cs-textb vclr cs-hmar">${nextleveldata.activityType} Activity:</span> 
                         <div class="aclists multiact cs-hide">
                             <div class="eachlistsact1 active"><span class="cs-tw-600">Hotkey Value</span> : ${nextleveldata.hotkeyActivityVo.hotkeyValue}</div>
                        </div>
        
                   
                   </div> </div>`
                   $(appendPathact).append(eachact)
        
            }
          else if(nextleveldata.activityType == "Entail") {

                let eachact =
                     `
                     <div class="eachassignedact cs-hide"><div class="cs-act-name cs-pr cs-hmar">
                     <em class="iconact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em><em class="icon-cs-execute cs-greenc cs-hpad"></em>
                              <span class="cs-textb greclr">Playback : </span> <span>${nextleveldata.playbackName}</span>
                      </div> </div>`
                      $(appendPathact).append(eachact)

          }     


             else if(nextleveldata.activityType == "Iteration") {

            let eachact = `<div class="eachassignedact cs-hide"><div class="cs-Iteration-part"><div class="cs-act-name cs-pr cs-hmar cs-itpart"><em class="iclayact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em><span class="blclr cs-textb cs-hmar">${nextleveldata.activityType} Activity:</span>
                <div class="aclists cs-hide">
                   <div class="actvalact active"><span class="cs-tw-600">Element Type</span> : ${nextleveldata.iterationActivityVO.iterationCountType}</div>  

                    <div class="actvalact active"><span class="cs-tw-600">Element value</span> : ${nextleveldata.iterationActivityVO.iterationCountValue}</div>
                 </div>         
                  
        
                   </div>
              
                 </div> 
                 </div> `
                 $(appendPathact).append(eachact)
 
                //  $(".currentiterationactivity").removeClass("currentiterationactivity")
             
                     if(nextleveldata.iterationActivityVO.playbackActivityVOs.length) {
                         nextleveliterationactivities (nextleveldata.iterationActivityVO.playbackActivityVOs, appendPathact.find(">.eachassignedact > .cs-Iteration-part"))
                       
                     }

             }
          else if(nextleveldata.activityType == "Layout") {   
                
            nisthenumber = +nisthenumber + 1;
            console.log(nisthenumber)
         
                 
            let eachact = 
               `<div class="eachassignedact cs-hide"><div class="cs-layout-part cs-lay"><div class="cs-act-name cs-pr cs-hmar cs-act-section"><div class="cs-layname">
                    <em class="iclayact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                      <em class="icon-cs-layout cs-bluec cs-hpad"></em>
              
                     <span class="cs-textb blclr">${nextleveldata.activityType} Activity: </span>
                     <span> ${nextleveldata.layoutActivityVO.layoutName} </span>
                      <span class="appendlayact"></span>
                  </div>
                      <div class="aclists multiact cs-layacts cs-hide">
                         <div class="eachvalact currentappendblockmllists1 ${nisthenumber} activelayout"></div>
                         
                      </div>

               </div>  
              </div> 

              </div>`
                           
              $(appendPathact).append(eachact)
             
            
                // var currLength = $(nextleveldata.layoutActivityVO.playbackActivityVOs).length;
              $(nextleveldata.layoutActivityVO.playbackActivityVOs).each(function (index,layactlength1) {
                var currLength1 = $(nextleveldata.layoutActivityVO.playbackActivityVOs).length;
              if(layactlength1.activityType == "Element") {
                 
        
                  let appendlay = 
                '<div class="elements active"><span class="cs-tw-600">' +layactlength1.elementActivityVO.layoutElementsVO.elementName + '</span> : ' + '<span class=""> '+ layactlength1.elementActivityVO.layoutElementsVO.elementType + '</span></div>' 
      
                    $(`.cs-layout-part .multiact > .currentappendblockmllists1.${nisthenumber}`).append(appendlay);
                    if(index == currLength1-1){
                        nisthenumber = nisthenumber-1;
                      }
                        
                  }
               
                  else{
                              getactdata (layactlength1 ,  $(`.cs-layout-part .multiact > .currentappendblockmllists1.${nisthenumber}`));
                              if(index == currLength1-1){
                                nisthenumber = nisthenumber-1;
                              }
                     }   
                            
                           
                    })
                   

                }
            
        
            $(nextleveldata.conditionalActivitySet).each(function(index,valact)  {

                if (valact.conditionalActivityVO.clauseType == "If") {  

                    var eachact = `
                  
                    <div class="eachassignedact12 cs-ifcondition cs-hide"><div class="cs-conditionnActivity-part cs-eachact">
                         <div class="cs-act-name cs-hmar cs-bpad cs-pr cs-conline"><em class="iclayact cs-circle icon-cs-up-arrow cs-pad-sm"></em>
                             <span class="vtclr cs-textb cs-hmar"> Condition Activity</span>

                             <div class="cs-if cs-lmar-lg cs-hide"><span class="cs-icif"><em class="ic-conact icact cs-circle icon-cs-up-arrow cs-pad-sm cs-line"></em></span>
                                <span class="if-block cs-tw-600 cs-lmar"> If :
                                 <span class="appendifconditionlists actvalact eachset cs-tw-600">Condition = </span></span>
                             <div class="appendifactivities"></div>
                         </div>
           
                </div> </div> </div> `  
               
                   appendPathact.append(eachact) 


                      if (valact.conditionalActivityVO.condition.length) {
                           var gettheconditionval = valact.conditionalActivityVO.condition
                           var customexpression = valact.conditionalActivityVO.customExpression 
                           $(gettheconditionval).each(function (index, value) {
                           var eachExpSet =
                                  '<span class="cs-getconditionlabel "> ' + value.getConditionalValue + ' <span>' +
                                   '<span class="cs-oper ">' + "( " + '</span>' +
                                   '<span class="cs-getleftexpval ">' + value.leftexp +
                                   '</span>' + " " + '<span class="cs-op "> ' + value.operator + ' </span> ' +
                                   '<span class="cs-getrightval ">' + value.rightexp + '</span>' +
                                   '<span class="cs-closecurve ">' + " )" + '</span>' + " " ;
    
                                   
                               $('.appendifconditionlists').append(eachExpSet)

                            })
                         }

                         if(valact.conditionalActivityVO.playbackActivityVOs.length) {

                            nextleveliterationactivities (valact.conditionalActivityVO.playbackActivityVOs , appendPathact.find(">.cs-ifcondition > .cs-conditionnActivity-part .appendifactivities"))
                              
                            //   $('.currentconditionactivity').removeClass('currentconditionactivity')
                                   $('.cs-ifcondition').removeClass('cs-ifcondition')
                                //    $('.appendifactivities').removeClass('appendifactivities')
                       
                        }    
                        
                      }

                      else if(valact.conditionalActivityVO.clauseType == "ElseIf") {

                        var eachact = `<div class="eachassignedact12 cs-elseifcondition cs-hide"><div class="cs-conditionnActivity-part cs-eachact"><div class="cs-act-name cs-hmar cs-bpad cs-pr cs-conline">
                             
                             <div class="cs-elseif cs-lmar-lg cs-hide"><span class="cs-icif"><em class="ic-conact icact cs-circle icon-cs-up-arrow cs-pad-sm cs-line"></em></span>
                                  <span class="elseif-block cs-tw-600 cs-lmar"> ElseIf :
                                  <span class="appendelseifconditionlists actvalact eachset cs-tw-600">Condition = </span></span>
                                  <div class="appendelseifactivities cs-hide"></div>
                            </div>
               
                               </div> </div> </div> `  
                               appendPathact.append(eachact) 

                      if (valact.conditionalActivityVO.condition.length) {
                        var gettheconditionval = valact.conditionalActivityVO.condition
                        var customexpression = valact.conditionalActivityVO.customExpression
                        $(gettheconditionval).each(function (index, value) {
                        var eachExpSet =
                               '<span class="cs-getconditionlabel "> ' + value.getConditionalValue + ' <span>' +
                                '<span class="cs-oper ">' + "( " + '</span>' +
                                '<span class="cs-getleftexpval ">' + value.leftexp +
                                '</span>' + " " + '<span class="cs-op "> ' + value.operator + ' </span> ' +
                                '<span class="cs-getrightval ">' + value.rightexp + '</span>' +
                                '<span class="cs-closecurve ">' + " )" + '</span>' + " " ;
                             
                           $('.appendelseifconditionlists').append(eachExpSet)

                         })
                      }

                        if(valact.conditionalActivityVO.playbackActivityVOs.length) {

                            nextleveliterationactivities (valact.conditionalActivityVO.playbackActivityVOs, appendPathact.find(">.cs-elseifcondition > .cs-conditionnActivity-part .appendelseifactivities"))
                            $('.cs-elseifcondition').removeClass('cs-elseifcondition')
                       }
                    }  

                     else if(valact.conditionalActivityVO.clauseType == "Else") {
                                   
                        var eachact = `<div class="eachassignedact12 cs-elsecondition cs-hide"><div class="cs-conditionnActivity-part cs-eachact"><div class="cs-act-name cs-hmar cs-bpad cs-pr cs-conline">


                        <div class="cs-else cs-lmar-lg cs-hide"><span class="cs-icif"><em class="ic-conact icact cs-circle icon-cs-up-arrow cs-pad-sm cs-line"></em></span>
                                  <span class="else-block cs-tw-600 cs-lmar"> Else : </span>
                                  
                              <div class="appendelseactivities"></div>
                        </div> 
                            
                       
                       </div> </div> </div> `  
                       appendPathact.append(eachact) 

                         if(valact.conditionalActivityVO.playbackActivityVOs.length) {
   
                            nextleveliterationactivities (valact.conditionalActivityVO.playbackActivityVOs , appendPathact.find(">.cs-elsecondition > .cs-conditionnActivity-part .appendelseactivities"))
                              $('.cs-elsecondition').removeClass('cs-elsecondition')
                             
                            //   $('.currentconditionactivity').removeClass('currentconditionactivity')
                       
                        }    
                     }

                    })
                }

          function nextleveliterationactivities  (nextleveldata,appendPath) {
           
            
            console.log("nextleveldata - " , nextleveldata)

            for(var i = 0; i < nextleveldata.length; i++) {
              var dropeachact =  nextleveldata[i];
                
             
              if (dropeachact.activityType == "Assignment") {
            

         var eachact = `<div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-pr cs-hmar itacteachlists"><div class="eachlineact">
         <em class="iconactit cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em><span class="cs-textb pkclr cs-hmar">${dropeachact.activityType} Activity:</span> 
             <div class="aclists multiact cs-hide">
                  <div class="eachlistsact1 active"><span class="cs-tw-600">Variable Name</span> : ${dropeachact.assignmentActivityVO.variableName}</div>
                  <div class="eachlistsact1 active"><span class="cs-tw-600">Value Type</span> : ${dropeachact.assignmentActivityVO.valueType}</div>
             </div>
             </div> </div> </div>`
                   appendPath.append(eachact) 

            }  

          else if(dropeachact.activityType == "Verification") {
           
                var eachact =
                `
                <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-pr cs-hmar itacteachlists"><div class="eachlineact"><em class="iconactit cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
               <span class="cs-textb grclr cs-hmar">${dropeachact.activityType} Activity:</span> 
                   <div class="aclists multiact cs-hide">
                       <div class="eachlistsact1 active"><span class="cs-tw-600">Left Expression</span> : ${dropeachact.verificationActivityVO.leftExpressionValue}</div>
                        <div class="eachlistsact1 active"><span class="cs-tw-600">Operators</span> : ${dropeachact.verificationActivityVO.operator} </div>
                        <div class="eachlistsact1 active"><span class="cs-tw-600">Right Expression</span> : ${dropeachact.verificationActivityVO.rightExpressionValue}</div>
                        <div class="eachlistsact1 active"><span class="cs-tw-600">Message</span> : ${dropeachact.verificationActivityVO.message} </div>
                        <div class="eachlistsact1 active"><span class="cs-tw-600">Expression</span> : ${dropeachact.verificationActivityVO.customExpression} </div>
                     </div>
                </div> 
               </div> </div>`
              
                 appendPath.append(eachact) 


              }
          else if(dropeachact.activityType == "Assertion") {
           
                var eachact =
                    ` <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-pr cs-hmar itacteachlists"><div class="eachlineact">
                               <em class="iconactit cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                            
                                     <span class="cs-textb ylclr cs-hmar">${dropeachact.activityType}Activity:</span>
                                 <div class="aclists multiact cs-hide">
                               
                                         <div class="eachlistsact1 active"><span class="cs-tw-600">LeftExpressionType</span> : ${dropeachact.assertionActivityVO.leftExpressionType}</div>    
                                         <div class="eachlistsact1 active"><span class="cs-tw-600">LeftExpressionType</span> : ${dropeachact.assertionActivityVO.leftExpressionType}</div>    
                                         <div class="eachlistsact1 active"><span class="cs-tw-600">LeftExpressionValue</span> : ${dropeachact.assertionActivityVO.leftExpressionValue}</div>
                                         <div class="eachlistsact1 active"><span class="cs-tw-600">Operator</span> : ${dropeachact.assertionActivityVO.operator} </div>
                                         <div class="eachlistsact1 active"><span class="cs-tw-600">RightExpressionType</span> : ${dropeachact.assertionActivityVO.rightExpressionType} </div>
                                         <div class="eachlistsact1 active"><span class="cs-tw-600">RightExpressionValue</span> : ${dropeachact.assertionActivityVO.rightExpressionValue} </div>
                                        <div class="eachlistsact1 active"><span class="cs-tw-600">Message</span> :${dropeachact.assertionActivityVO.message} </div>
                                         <div class="eachlistsact1 active"><span class="cs-tw-600">Expression</span> : ${dropeachact.assertionActivityVO.customExpression} </div>
                                 </div>
                   
                        </div>
                        </div>
                        </div>`
                appendPath.append(eachact) 
    
           }
          else if(dropeachact.activityType == "OpenURL") {

            var eachact =

            ` <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-pr cs-hmar itacteachlists"><div class="eachlineact">
                <em class="iconactit cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>

                    <span class="cs-textb drgreen cs-hmar">${dropeachact.activityType} Activity:</span>
                      <div class="aclists multiact cs-hide">
                        <div class="eachlistsact1 active"><span class="cs-tw-600">url type</span> : ${dropeachact.openURLActivityVO.urlType} </div>
                        <div class="eachlistsact1 active"><span class="cs-tw-600">FunctionName</span> :${dropeachact.openURLActivityVO.functionName}</div>
                        <div class="eachlistsact1 active"><span class="cs-tw-600">ResponsibilityName</span> :${dropeachact.openURLActivityVO.responsibilityName}</div>
                        <div class="eachlistsact1 active"><span class="cs-tw-600">ApplicationName</span> :${dropeachact.openURLActivityVO.applicationName}</div>
                        <div class="eachlistsact1 active"><span class="cs-tw-600">SecurityGroupName</span> :${dropeachact.openURLActivityVO.securityGroupName}</div>
                        <div class="eachlistsact1 active"><span class="cs-tw-600">LanguageName</span> :${dropeachact.openURLActivityVO.languageShortName}</div>
                        <div class="eachlistsact1 active"><span class="cs-tw-600">Param Value</span> :${dropeachact.openURLActivityVO.urlParamValue}</div>
                       
                                 
                      </div>
                   
                 </div> </div> </div> `

                 appendPath.append(eachact) 

            }
          else if(dropeachact.activityType == "Login") {

            var eachact =
            `
            <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-pr cs-hmar itacteachlists"><div class="eachlineact"><em class="iconactit cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                
            <span class="cs-textb drred cs-hmar">${dropeachact.activityType} Activity:</span> 
               <div class="aclists multiact cs-hide">
                  <div class="eachlistsact1 active"><span class="cs-tw-600">Username</span> : ${dropeachact.loginActivityVo.userName}</div>
                  <div class="eachlistsact1 active"><span class="cs-tw-600">Password</span> : ${dropeachact.loginActivityVo.password} </div>
               </div>
         
                
             </div> </div> </div>`
                appendPath.append(eachact) 

          }
          else if(dropeachact.activityType == "csFileAct") {
            var fileTval;
            if(dropeachact.FileActivityVo.filetype == "") {
                fileTval = "Read"; 
            }
            else {
                fileTval = dropeachact.FileActivityVo.filetype;
            }
            var eachact =
            `
            <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-pr cs-hmar itacteachlists"><div class="eachlineact"><em class="iconactit cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                
            <span class="cs-textb csexcelclr cs-hmar">File Activity:</span> 
               <div class="aclists multiact cs-hide">
                  <div class="eachlistsact1 active"><span class="cs-tw-600">File Type</span> : ${fileTval}</div>
                  <div class="eachlistsact1 active"><span class="cs-tw-600">Source</span> : ${dropeachact.FileActivityVo.source} </div>
                  <div class="eachlistsact1 active"><span class="cs-tw-600">Target (Data Table)</span> : ${dropeachact.FileActivityVo.target} </div>



               </div>
         
                
             </div> </div> </div>`
                appendPath.append(eachact) 

          }
          else if(dropeachact.activityType == "csAddRow") {
            var rowTval;
            if(dropeachact.AddRowActivityVo.rowtype == "") {
                rowTval = "Array Row"; 
            }
            else {
                rowTval = dropeachact.AddRowActivityVo.rowtype;
            }

            var eachact =
            `
            <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-pr cs-hmar itacteachlists"><div class="eachlineact"><em class="iconactit cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                
            <span class="cs-textb csaddrowclr cs-hmar">Add Row Activity:</span> 
               <div class="aclists multiact cs-hide">

                  <div class="eachlistsact1 active"><span class="cs-tw-600">Target (Data Table)</span> : ${dropeachact.AddRowActivityVo.target}</div>
                  <div class="eachlistsact1 active"><span class="cs-tw-600">Row Type</span> : ${rowTval} </div>
                  <div class="eachlistsact1 active"><span class="cs-tw-600">Enter Expression</span> : ${dropeachact.AddRowActivityVo.addrowexpression} </div>
                  <div class="cs-addrow-Attrlist-text-par">`; 
                  if(dropeachact.AddRowActivityVo.rowtype == "Data Row") {
                    eachact+=`<div class="cs-vsmar cs-tw-600 csaddrowclr">Attribute List</div>
                    <div class="eachlistsact active"><span class="cs-tw-600">Add</span> : ${dropeachact.AddRowActivityVo.addname}</div>
                    <div class="eachlistsact active"><span class="cs-tw-600">Sprint Name</span> : ${dropeachact.AddRowActivityVo.sprintname} </div>
                    <div class="eachlistsact active"><span class="cs-tw-600">Connection Name</span> : ${dropeachact.AddRowActivityVo.conectionname} </div>
                    <div class="eachlistsact active"><span class="cs-tw-600">Version Name</span> : ${dropeachact.AddRowActivityVo.versionname} </div>`
                  }
                      eachact+=`            
                      
                    </div>
               </div>
             </div> </div> </div>`;
                appendPath.append(eachact) 

               

          }
          else if(dropeachact.activityType == "csRemRow") {
            var remRowTval;
            if(dropeachact.RemRowActivityVo.rowtype == "") {
                remRowTval = "Array Row"; 
            }
            else {
                remRowTval = dropeachact.RemRowActivityVo.rowtype;
            }
            var eachact =
            `
            <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-pr cs-hmar itacteachlists"><div class="eachlineact"><em class="iconactit cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                
            <span class="cs-textb cs-remclr cs-hmar">Remove Row Activity:</span> 
               <div class="aclists multiact cs-hide">
                  <div class="eachlistsact1 active"><span class="cs-tw-600">Data Table</span> : ${dropeachact.RemRowActivityVo.datatable}</div>
                  <div class="eachlistsact1 active"><span class="cs-tw-600">Row Type</span> : ${remRowTval} </div>
                  <div class="eachlistsact1 active"><span class="cs-tw-600">Row Index Value</span> : ${dropeachact.RemRowActivityVo.rowindexval} </div>`;
                  if(dropeachact.RemRowActivityVo.rowtype == "Row") { 
                    eachact += `
                    <div class="eachlistsact active cs-tw-600"> Row Condition :<span class="cs-remrow-con-list cs-lmar">Condition = </span></div>
                    `
                  }
                  eachact += `</div>
                
             </div> </div> </div>`
                appendPath.append(eachact);
                $(dropeachact.RemRowActivityVo).each(function(index,valact)  {
                    console.log("valact - ",valact);
                    if (valact.condition.length) {
                        var gettheconditionval = valact.condition
                        console.log("value - " , gettheconditionval);
                        $(gettheconditionval).each(function (index, value) {
                        var eachExpSet =
                            '<span class="cs-getconditionlabel "> ' + value.condVal + ' <span>' +
                                '<span class="cs-oper ">' + "( " + '</span>' +
                                '<span class="cs-getleftexpval ">' + value.attrName +
                                '</span>' + " " + '<span class="cs-op "> ' + value.operator + ' </span> ' +
                                '<span class="cs-getrightval ">' + value.attVal + '</span>' +
                                '<span class="cs-closecurve ">' + " )" + '</span>' + " " ;

                                
                            $('.cs-remrow-con-list').append(eachExpSet)

                        })
                    }
                });
                $(".cs-remrow-con-list").removeClass("cs-remrow-con-list")
          }
          else if(dropeachact.activityType == "csFilRow") {
            var filRowTval;
            if(dropeachact.FilRowActivityVo.rowType == "") {
                filRowTval = "By Value"; 
            }
            else {
                filRowTval = dropeachact.FilRowActivityVo.rowType;
            }
            var eachact =
            `
            <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-pr cs-hmar itacteachlists"><div class="eachlineact"><em class="iconactit cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                
            <span class="cs-textb cs-filrowclr cs-hmar">Filter Row Activity:</span> 
               <div class="aclists multiact cs-hide">
                  <div class="eachlistsact1 active"><span class="cs-tw-600">Data Table </span> : ${dropeachact.FilRowActivityVo.dataTable}</div>
                  <div class="eachlistsact1 active"><span class="cs-tw-600">Row Type</span> : ${filRowTval} </div>`;
                  if(dropeachact.FilRowActivityVo.rowType == "By Condition") {
                    eachact +=`
                    <div class="eachlistsact active cs-tw-600"> By Condition :<span class="cs-by-con-list cs-lmar">Condition = </span></div>
                    `
                  }
                  else {
                    eachact +=`
                    <div class="eachlistsact active"><span class="cs-tw-600">Row Index Value</span> : ${dropeachact.FilRowActivityVo.rowIndexVal} </div>
                    <div class="eachlistsact active cs-tw-600"> By Value Condition :<span class="cs-byVal-con-list cs-lmar">Condition = </span></div>
                    `
                  }
                  
                  eachact +=`
                  
               </div>
         
                
             </div> </div> </div>`
                appendPath.append(eachact) 
                $(dropeachact.FilRowActivityVo).each(function(index,valact)  {
                    if (valact.byValcondition.length) {
                        var gettheconditionval = valact.byValcondition
                        $(gettheconditionval).each(function (index, value) {
                        var eachExpSet =
                            '<span class="cs-getconditionlabel "> ' + value.condVal + ' <span>' +
                                '<span class="cs-oper ">' + "( " + '</span>' +
                                '<span class="cs-getleftexpval ">' + value.attrName +
                                '</span>' + " " + '<span class="cs-op "> ' + value.operator + ' </span> ' +
                                '<span class="cs-getrightval ">' + value.attVal + '</span>' +
                                '<span class="cs-closecurve ">' + " )" + '</span>' + " " ;

                                
                            $('.cs-byVal-con-list').append(eachExpSet)

                        })
                    }
                    if (valact.byCondition.length) {
                        var gettheconditionval = valact.byCondition
                        $(gettheconditionval).each(function (index, value) {
                        var eachExpSet =
                            '<span class="cs-getconditionlabel "> ' + value.condVal + ' <span>' +
                                '<span class="cs-oper ">' + "( " + '</span>' +
                                '<span class="cs-getleftexpval ">' + value.attrName +
                                '</span>' + " " + '<span class="cs-op "> ' + value.operator + ' </span> ' +
                                '<span class="cs-getrightval ">' + value.attVal + '</span>' +
                                '<span class="cs-closecurve ">' + " )" + '</span>' + " " ;

                                
                            $('.cs-by-con-list').append(eachExpSet)

                        })
                    }
                });
                $(".cs-by-con-list").removeClass("cs-by-con-list");
                $(".cs-byVal-con-list").removeClass("cs-byVal-con-list");

          }
          else if(dropeachact.activityType == "csMergeRow") {
            var allowDuplicateVal;
            if(dropeachact.MergeRowActivityVo.allowDuplicate == "") {
                allowDuplicateVal = "N"; 
            }
            else {
                allowDuplicateVal = dropeachact.MergeRowActivityVo.allowDuplicate;
            }

            var eachact =
            `
            <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-pr cs-hmar itacteachlists"><div class="eachlineact"><em class="iconactit cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                
            <span class="cs-textb cs-mergerow-clr cs-hmar">Merge Row Activity:</span> 
               <div class="aclists multiact cs-hide">
                  <div class="eachlistsact1 active"><span class="cs-tw-600">Allow Duplicate</span> : ${allowDuplicateVal} </div>`;
                  if(dropeachact.MergeRowActivityVo.MappedAttr != "") {
                    eachact +=`
                            <div class="eachlistsact1 active"><span class="cs-tw-600">Mapped Attributes</span> : <span class="cs-merge-mapp-atr-val"></span> </div>
                    `
                  }
                  eachact +=`
               </div>
         
                
             </div> </div> </div>`
                appendPath.append(eachact) 
                $(dropeachact.MergeRowActivityVo.MappedAttr).each(function(index,valact)  {
                    var mergedtxt = $(".cs-merge-mapp-atr-val").text().trim();
                    var des = `<span>${valact.mappedDestinationID}</span>`;
                    var mp = ``;
                    var src = ` <span>${valact.mappedSourceID}</span>`;
                    var coma = ``;
                    if(mergedtxt != ""){
                        coma = `<span class="cs-hsmar">,</span>`;
                    }
                    if(valact.mappedDestinationID != "" && valact.mappedSourceID != "") {
                        mp = `<span class="cs-hsmar"><em class="icon-cs-mapping"></em></span>`;
                    }
                    var mapTxt = `${coma}${des}${mp}${src}`;
                    $(".cs-merge-mapp-atr-val").append(mapTxt);

                });
                $(".cs-merge-mapp-atr-val").removeClass("cs-merge-mapp-atr-val");

          }
          else if(dropeachact.activityType == "csEachRow") {
            $('.cs-eachFetch-par').removeClass('cs-eachFetch-par');
            var eachact =
            `
            <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-pr cs-hmar itacteachlists"><div class="eachlineact"><em class="iconactit cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                
            <span class="cs-textb cs-eachrow-clr cs-hmar">Each Row Activity:</span> 
               <div class="aclists multiact cs-hide">
                  <div class="eachlistsact1 active"><span class="cs-tw-600">For Each</span> : ${dropeachact.EachRowActivityVo.foreach}</div>
                  <div class="eachlistsact1 active"><span class="cs-tw-600">In</span> : ${dropeachact.EachRowActivityVo.in} </div>
               </div>
               <div class="cs-eachFetch-par"></div>
                
             </div> </div> </div>`
                appendPath.append(eachact) 
                if(dropeachact.EachRowActivityVo.playbackActivityVOs.length) {
                    nextleveliterationactivities (dropeachact.EachRowActivityVo.playbackActivityVOs, $('.cs-eachFetch-par'))
                 }

          }
          else if(dropeachact.activityType == "csUptRow") {
            var uptRowTval;
                if(dropeachact.UptRowActivityVo.rowType == "") {
                    uptRowTval = "Array Row"; 
                }
                else {
                    uptRowTval = dropeachact.UptRowActivityVo.rowType;
                }

            var eachact =
            `
            <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-pr cs-hmar itacteachlists"><div class="eachlineact"><em class="iconactit cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                
            <span class="cs-textb cs-uptrowclr cs-hmar">Update Row Activity:</span> 
               <div class="aclists multiact cs-hide">
                  <div class="eachlistsact1 active"><span class="cs-tw-600">Data Table</span> : ${dropeachact.UptRowActivityVo.dataTable}</div>
                  <div class="eachlistsact1 active"><span class="cs-tw-600">Row Type</span> : ${uptRowTval} </div>`;
                  if(dropeachact.UptRowActivityVo.rowType == "Data Row") { 
                    eachact += `
                    <div class="eachlistsact active cs-tw-600"> Data Row Condition :<span class="cs-uptDatarow-con-list cs-lmar">Condition = </span></div>
                    <div class="cs-textb cs-vsmar cs-tw-600 cs-uptrowclr">Attribute List</div>
                        <div class="eachlistsact active"><span class="cs-tw-600">Add</span> : ${dropeachact.UptRowActivityVo.addname}</div>
                        <div class="eachlistsact active"><span class="cs-tw-600">Sprint Name</span> : ${dropeachact.UptRowActivityVo.sprintname} </div>
                        <div class="eachlistsact active"><span class="cs-tw-600">Connection Name</span> : ${dropeachact.UptRowActivityVo.conectionname} </div>
                        <div class="eachlistsact active"><span class="cs-tw-600">Version Name</span> : ${dropeachact.UptRowActivityVo.versionname} </div>
                    `
                  }
                  else { 
                    eachact += `
                    <div class="eachlistsact1 active"><span class="cs-tw-600">Enter Expression</span> : ${dropeachact.UptRowActivityVo.expression} </div>
                    <div class="eachlistsact active cs-tw-600"> Array Row Condition :<span class="cs-uptArrayrow-con-list cs-lmar">Condition = </span></div>
                    `
                  }  

                  eachact += `
               </div>
         
                
             </div> </div> </div>`
                appendPath.append(eachact) 
                $(dropeachact.UptRowActivityVo).each(function(index,valact)  {
                    if (valact.arrayRowCondition.length) {
                        var gettheconditionval = valact.arrayRowCondition
                        $(gettheconditionval).each(function (index, value) {
                        var eachExpSet =
                            '<span class="cs-getconditionlabel "> ' + value.condVal + ' <span>' +
                                '<span class="cs-oper ">' + "( " + '</span>' +
                                '<span class="cs-getleftexpval ">' + value.attrName +
                                '</span>' + " " + '<span class="cs-op "> ' + value.operator + ' </span> ' +
                                '<span class="cs-getrightval ">' + value.attVal + '</span>' +
                                '<span class="cs-closecurve ">' + " )" + '</span>' + " " ;

                                
                            $('.cs-uptArrayrow-con-list').append(eachExpSet)

                        })
                    }
                    if (valact.dataRowCondition.length) {
                        var gettheconditionval = valact.dataRowCondition
                        $(gettheconditionval).each(function (index, value) {
                        var eachExpSet =
                            '<span class="cs-getconditionlabel "> ' + value.condVal + ' <span>' +
                                '<span class="cs-oper ">' + "( " + '</span>' +
                                '<span class="cs-getleftexpval ">' + value.attrName +
                                '</span>' + " " + '<span class="cs-op "> ' + value.operator + ' </span> ' +
                                '<span class="cs-getrightval ">' + value.attVal + '</span>' +
                                '<span class="cs-closecurve ">' + " )" + '</span>' + " " ;

                                
                            $('.cs-uptDatarow-con-list').append(eachExpSet)

                        })
                    }
                });
                $('.cs-uptArrayrow-con-list').removeClass('cs-uptArrayrow-con-list')
                $('.cs-uptDatarow-con-list').removeClass('cs-uptDatarow-con-list')

          }

        else if(dropeachact.activityType == "Logout") {

                var eachact =
         `<div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-pr cs-bpad cs-bmar cs-hmar itacteachlists"><div class="eachlineact"><em class="iconactit cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                 <span class="cs-textb brredclr cs-hmar">${dropeachact.activityType} Activity:</span> 
              </div> </div> </div>`
                  appendPath.append(eachact) 
   
          }

          else if(dropeachact.activityType == "ScreenShot") { 
       
              var eachact =
                    `
                 <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-pr cs-hmar itacteachlists"><div class="eachlineact"><em class="iconactit cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
               
               <span class="cs-textb drblclr cs-hmar">${dropeachact.activityType} Activity:</span> 
                   <div class="aclists multiact cs-hide">
                      <div class="eachlistsact1 active"><span class="cs-tw-600">File Name</span> : ${dropeachact.screenShotActivityVo.fileName}</div>
                   </div>
        
                      
               </div> </div> </div>`
                 appendPath.append(eachact) 

             
            
            }
          else if(dropeachact.activityType == "Launchbrowser") {
       
                var eachact =
                    `
                    <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-pr cs-hmar itacteachlists"><div class="eachlineact"><em class="iconactit cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                      <span class="cs-textb brclr cs-hmar">${dropeachact.activityType} Activity:</span> 
                </div> </div> </div>`
                  appendPath.append(eachact) 
    
           }
          else if(dropeachact.activityType == "Closebrowser") {

                var eachact =
                   `
                <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-pr cs-bpad cs-hmar itacteachlists"><div class="eachlineact"><em class="iconactit cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                       <span class="cs-textb orclr cs-hmar">${dropeachact.activityType} Activity:</span> 
                        
                 </div> </div> </div>`
                 appendPath.append(eachact) 
           
            }
            else if(dropeachact.activityType == "DataTableActivity") {
                $(".cs-dataTable-part").removeClass("cs-dataTable-part");
                var eachact = `<div class="grpoflists eachassignedact12 cs-hide"><div class="cs-dataTable-part"><div class="cs-act-name cs-pr cs-hmar cs-itpart"><em class="iclayact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em><span class="blclr cs-dataTabclr cs-hmar">Data Table Activity:</span>
                                            </div>
                                        </div>
                               </div> `
                 appendPath.append(eachact) 

                 if(dropeachact.dataTableActivityVo.playbackActivityVOs.length) {
                    nextleveliterationactivities (dropeachact.dataTableActivityVo.playbackActivityVOs,appendPath.find(">.grpoflists > .cs-dataTable-part"));
                 
               }

           
            }
            else if(dropeachact.activityType == "ExcelAutomationAct") {
                $(".cs-excelA3-part").removeClass("cs-excelA3-part");
                var eachact = `<div class="grpoflists eachassignedact12 cs-hide"><div class="cs-excelA3-part"><div class="cs-act-name cs-pr cs-hmar cs-itpart"><em class="iclayact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em><span class="blclr cs-excAutclr cs-hmar">Excel Activity:</span>
                                            </div>
                                        </div>
                               </div> `
                 appendPath.append(eachact) 

                 if(dropeachact.excelAutomationActivityVo.playbackActivityVOs.length) {
                    nextleveliterationactivities (dropeachact.excelAutomationActivityVo.playbackActivityVOs,appendPath.find(">.grpoflists > .cs-excelA3-part"));
                 
               }

           
            }
            else if(dropeachact.activityType == "csExcelAct") {
                var appendact =
                `
                <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-hmar cs-pr"><em class="iconclose cs-circle icact icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                    
                <span class="cs-textb cs-exc-act-clr cs-hmar">Excel File:</span> 
                   <div class="aclists multiact cs-hide">
                      <div class="eachlistsact active"><span class="cs-tw-600">Select File Location</span> : ${dropeachact.excelSubActivityVo.selectFileLocation}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">References Name</span> : ${dropeachact.excelSubActivityVo.referencesName} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Create if not exists</span> : ${dropeachact.excelSubActivityVo.createIfNotExists} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Save Changes</span> : ${dropeachact.excelSubActivityVo.saveChanges} </div>
                   </div>
                   </div>
             
                    
             </div>`
             appendPath.append(appendact)
            }
             else if(dropeachact.activityType == "csManupulationAct") {
                var appendact =
                `
                <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-hmar cs-pr"><em class="iconclose cs-circle icact icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                    
                <span class="cs-textb cs-excManu-act-clr cs-hmar">Manipulation:</span> 
                   <div class="aclists multiact cs-hide">
                   <div class="eachlistsact active"><span class="cs-tw-600">Activity Name</span> : ${dropeachact.excelManupulationActivityVo.manupulationGroupText}</div>`;
                   if(dropeachact.excelManupulationActivityVo.manupulationGroupText == "Append Range") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">Excel range to append</span> : ${dropeachact.excelManupulationActivityVo.appendRange[0].excelRangeToAppend}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Append after range</span> : ${dropeachact.excelManupulationActivityVo.appendRange[0].appendAfterRange} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">What to copy</span> : ${dropeachact.excelManupulationActivityVo.appendRange[0].whatToCopy} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Exclude Header</span> : ${dropeachact.excelManupulationActivityVo.appendRange[0].excludeHeader} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Transpose</span> : ${dropeachact.excelManupulationActivityVo.appendRange[0].transpose} </div>
                    `
                   }
                   else if(dropeachact.excelManupulationActivityVo.manupulationGroupText == "Clear Sheet/Range/Table") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">Range to clear</span> : ${dropeachact.excelManupulationActivityVo.clearSheetRange[0].rangeToClear}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Has headers</span> : ${dropeachact.excelManupulationActivityVo.clearSheetRange[0].hasHeaders} </div>
                    `
                   }
                   else if(dropeachact.excelManupulationActivityVo.manupulationGroupText == "Copy/Paste Range") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">Destination Cell</span> : ${dropeachact.excelManupulationActivityVo.copyPasteRange[0].destinatioCell}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Destination sheet</span> : ${dropeachact.excelManupulationActivityVo.copyPasteRange[0].destinationSheet} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Sheet name</span> : ${dropeachact.excelManupulationActivityVo.copyPasteRange[0].sheetName} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Sheet range</span> : ${dropeachact.excelManupulationActivityVo.copyPasteRange[0].sheetRange} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Copy items</span> : ${dropeachact.excelManupulationActivityVo.copyPasteRange[0].copyItems} </div>
                    `
                   }
                   else if(dropeachact.excelManupulationActivityVo.manupulationGroupText == "Fill Range") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">Where to write</span> : ${dropeachact.excelManupulationActivityVo.fillRange[0].whereToWrite}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">What to write</span> : ${dropeachact.excelManupulationActivityVo.fillRange[0].whatToWrite} </div>
                    `
                   }
                   else if(dropeachact.excelManupulationActivityVo.manupulationGroupText == "Find/Replace Value") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">Operation</span> : ${dropeachact.excelManupulationActivityVo.findReplaceRange[0].operation}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Where to search</span> : ${dropeachact.excelManupulationActivityVo.findReplaceRange[0].whereTosearch} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Value to find</span> : ${dropeachact.excelManupulationActivityVo.findReplaceRange[0].valueToFind} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Replace with</span> : ${dropeachact.excelManupulationActivityVo.findReplaceRange[0].replaceWith} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Found at</span> : ${dropeachact.excelManupulationActivityVo.findReplaceRange[0].foundAt} </div>
                    `
                   }
                   appendact +=`
                      
                   </div>
                   </div>
             
                    
             </div>`
             appendPath.append(appendact)
            }
            else if(dropeachact.activityType == "csAdvancedAct") {
                var appendact =
                `
                <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-hmar cs-pr"><em class="iconclose cs-circle icact icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                    
                <span class="cs-textb cs-excAdvanced-act-clr cs-hmar">Manipulation:</span> 
                   <div class="aclists multiact cs-hide">
                   <div class="eachlistsact active"><span class="cs-tw-600">Activity Name</span> : ${dropeachact.excelAdvancedActivityVo.advancedGroupText}</div>`;
                   if(dropeachact.excelAdvancedActivityVo.advancedGroupText == "Create Pivot Table") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">Source</span> : ${dropeachact.excelAdvancedActivityVo.createPivotTable[0].source}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">New table name</span> : ${dropeachact.excelAdvancedActivityVo.createPivotTable[0].newtable} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Destination</span> : ${dropeachact.excelAdvancedActivityVo.createPivotTable[0].destination} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Pivot Fields</span> : <span class="cs-excel-adv-pivot-table"></span></div>
                    `
                   }
                   else if(dropeachact.excelAdvancedActivityVo.advancedGroupText == "Lookup") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">Value to lookup</span> : ${dropeachact.excelAdvancedActivityVo.lookup[0].valueToLookup}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Range</span> : ${dropeachact.excelAdvancedActivityVo.lookup[0].range} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Source of results</span> : ${dropeachact.excelAdvancedActivityVo.lookup[0].sourceOfResult} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Result</span> : ${dropeachact.excelAdvancedActivityVo.lookup[0].result} </div>
                    `
                   }
                   else if(dropeachact.excelAdvancedActivityVo.advancedGroupText == "Run Spreadsheet Macro") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">Source workbook</span> : ${dropeachact.excelAdvancedActivityVo.runSpreadsheetMacro[0].sourceWorkBook}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Macro name</span> : ${dropeachact.excelAdvancedActivityVo.runSpreadsheetMacro[0].macroName} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Output to</span> : ${dropeachact.excelAdvancedActivityVo.runSpreadsheetMacro[0].outputTo} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Add Macro Argument</span> : ${dropeachact.excelAdvancedActivityVo.runSpreadsheetMacro[0].addMacroArgument} </div>
                    `
                   }
                   else if(dropeachact.excelAdvancedActivityVo.advancedGroupText == "Invoke VBA") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">Code file path</span> : ${dropeachact.excelAdvancedActivityVo.invokeVBA[0].codeFilePath}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Entry method name</span> : ${dropeachact.excelAdvancedActivityVo.invokeVBA[0].entryMethodName} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Entry method parameter   </span> : ${dropeachact.excelAdvancedActivityVo.invokeVBA[0].entryMethodParameter} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Output value</span> : ${dropeachact.excelAdvancedActivityVo.invokeVBA[0].outputValue} </div>
                    `
                   }
                   appendact +=`
                      
                   </div>
                   </div>
             
                    
             </div>`
             appendPath.append(appendact);
             $(dropeachact.excelAdvancedActivityVo.createPivotTable[0].pivot).each(function(index,valact)  {
                var pivotTableTxt = $(".cs-excel-adv-pivot-table").text().trim();
                var pivotHtml = `(<span class="cs-hsmar cs-blackc">Field : ${valact.field}</span>,<span class="cs-hsmar cs-blackc">Is a : ${valact.Isa}</span>)`;
                var coma = ``;
                if(pivotTableTxt != ""){
                    coma = `<span class="cs-hsmar">,</span>`;
                }
                $(".cs-excel-adv-pivot-table").append(`${coma}${pivotHtml}`);

            });
            $(".cs-excel-adv-pivot-table").removeClass("cs-excel-adv-pivot-table");
            }
            else if(dropeachact.activityType == "csDeleteAct") {
                var appendact =
                `
                <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-hmar cs-pr"><em class="iconclose cs-circle icact icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                    
                <span class="cs-textb cs-excDelete-act-clr cs-hmar">Delete:</span> 
                   <div class="aclists multiact cs-hide">
                   <div class="eachlistsact active"><span class="cs-tw-600">Activity Name</span> : ${dropeachact.excelDeleteActivityVo.deleteGroupText}</div>`;
                   if(dropeachact.excelDeleteActivityVo.deleteGroupText == "Delete Column") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">Source</span> : ${dropeachact.excelDeleteActivityVo.deleteColumn[0].source}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Column name</span> : ${dropeachact.excelDeleteActivityVo.deleteColumn[0].columnName} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Has Header</span> : ${dropeachact.excelDeleteActivityVo.deleteColumn[0].hasHeader} </div>
                    `
                   }
                   else if(dropeachact.excelDeleteActivityVo.deleteGroupText == "Delete Rows") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">In what table or range</span> : ${dropeachact.excelDeleteActivityVo.deleteRow[0].iwtor}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">What to delete</span> : ${dropeachact.excelDeleteActivityVo.deleteRow[0].whattodel} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">At position</span> : ${dropeachact.excelDeleteActivityVo.deleteRow[0].atposition} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Has headers</span> : ${dropeachact.excelDeleteActivityVo.deleteRow[0].hasHeader} </div>
                    `
                   }
                   else if(dropeachact.excelDeleteActivityVo.deleteGroupText == "Delete Sheet") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">Select sheet</span> : ${dropeachact.excelDeleteActivityVo.deleteSheet[0].selectSheet}</div>
                    `
                   }
                   appendact +=`
                      
                   </div>
                   </div>
             
                    
             </div>`
             appendPath.append(appendact);
            }
            else if(dropeachact.activityType == "csFilterAct") {
                var appendact =
                `
                <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-hmar cs-pr"><em class="iconclose cs-circle icact icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                    
                <span class="cs-textb cs-excFilter-act-clr cs-hmar">Filter:</span> 
                   <div class="aclists multiact cs-hide">
                   <div class="eachlistsact active"><span class="cs-tw-600">Activity Name</span> : ${dropeachact.excelFilterActivityVo.filterGroupText}</div>`;
                   if(dropeachact.excelFilterActivityVo.filterGroupText == "Filter") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">Source</span> : ${dropeachact.excelFilterActivityVo.Filter[0].source}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Column name</span> : ${dropeachact.excelFilterActivityVo.Filter[0].columnName} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Clear any existing filter</span> : ${dropeachact.excelFilterActivityVo.Filter[0].clearAnyExistingFilter} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Basic Filter</span> : <span class="cs-excelFilter-basic-fieldval"></span> </div>
                    `
                   }
                   else if(dropeachact.excelFilterActivityVo.filterGroupText == "Filter Pivot Table") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">Source</span> : ${dropeachact.excelFilterActivityVo.filterPivotTable[0].source}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Column name</span> : ${dropeachact.excelFilterActivityVo.filterPivotTable[0].columnName} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Clear any existing filter</span> : ${dropeachact.excelFilterActivityVo.filterPivotTable[0].clearAnyExistingFilter} </div>
                    `
                   }
                   appendact +=`
                      
                   </div>
                   </div>
             
                    
             </div>`
             appendPath.append(appendact);
             $(dropeachact.excelFilterActivityVo.Filter[0].basicFilter).each(function(index,valact)  {
                var pivotTableTxt = $(".cs-excelFilter-basic-fieldval").text().trim();
                var pivotHtml = `(<span class="cs-hsmar cs-blackc">Is Equal to : ${valact.IsEqualto}</span>)`;
                var coma = ``;
                if(pivotTableTxt != ""){
                    coma = `<span class="cs-hsmar">,</span>`;
                }
                $(".cs-excelFilter-basic-fieldval").append(`${coma}${pivotHtml}`);

            });
            $(".cs-excelFilter-basic-fieldval").removeClass("cs-excelFilter-basic-fieldval");
            }
            else if(dropeachact.activityType == "csReadAct") {
                $('.cs-excReadFetch-par').removeClass('cs-excReadFetch-par');
                var appendact =
                `
                <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-hmar cs-pr"><em class="iconactit iconclose cs-circle icact icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                    
                <span class="cs-textb cs-excRead-act-clr cs-hmar">Read:</span> 
                   <div class="aclists multiact cs-hide">
                   <div class="eachlistsact active"><span class="cs-tw-600">Activity Name</span> : ${dropeachact.excelReadActivityVo.readGroupText}</div>`;
                   if(dropeachact.excelReadActivityVo.readGroupText == "For Each Excel Row") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">For each</span> : ${dropeachact.excelReadActivityVo.forEachExcelRow[0].forEach}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">In range</span> : ${dropeachact.excelReadActivityVo.forEachExcelRow[0].inRange} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Empty Row Behavior</span> : ${dropeachact.excelReadActivityVo.forEachExcelRow[0].emptyRowBehaviour} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Has headers</span> : ${dropeachact.excelReadActivityVo.forEachExcelRow[0].hasHeader} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Save after each row</span> : ${dropeachact.excelReadActivityVo.forEachExcelRow[0].saveAfterEachRow} </div>
                    `
                   }
                   else if(dropeachact.excelReadActivityVo.readGroupText == "Read Cell Formula/Table") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">Cell</span> : ${dropeachact.excelReadActivityVo.readCellFormula[0].cell}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Save to</span> : ${dropeachact.excelReadActivityVo.readCellFormula[0].saveto} </div>
                    `
                   }
                   else if(dropeachact.excelReadActivityVo.readGroupText == "Read Cell Value") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">Cell</span> : ${dropeachact.excelReadActivityVo.readCellValue[0].cell}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Save to</span> : ${dropeachact.excelReadActivityVo.readCellValue[0].saveto} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Get formatted text</span> : ${dropeachact.excelReadActivityVo.readCellValue[0].getFormattedText} </div>
                    `
                   }
                   else if(dropeachact.excelReadActivityVo.readGroupText == "Read Range") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">Range</span> : ${dropeachact.excelReadActivityVo.readRange[0].range}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Has headers</span> : ${dropeachact.excelReadActivityVo.readRange[0].hasHeaders} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Visible rows only</span> : ${dropeachact.excelReadActivityVo.readRange[0].visibleRowOnly} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Save to</span> : ${dropeachact.excelReadActivityVo.readRange[0].saveTo} </div>
                    `
                   }
                   appendact +=`
                      
                   </div>
                   <div class="cs-excReadFetch-par"></div>
                   </div>
             
                    
             </div>`
             appendPath.append(appendact);
             if(dropeachact.excelReadActivityVo.playbackActivityVOs.length) {
                nextleveliterationactivities (dropeachact.excelReadActivityVo.playbackActivityVOs, $(".cs-excReadFetch-par"))
             }

            }
            else if(dropeachact.activityType == "csChartAct") {
                var appendact =
                `
                <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-hmar cs-pr"><em class="iconclose cs-circle icact icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                    
                <span class="cs-textb cs-ExcChart-act-clr cs-hmar">Chart:</span> 
                   <div class="aclists multiact cs-hide">
                   <div class="eachlistsact active"><span class="cs-tw-600">Activity Name</span> : ${dropeachact.excelChartActivityVo.chartText}</div>`;
                   if(dropeachact.excelChartActivityVo.chartText == "Get Excel Chart") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">Chart</span> : ${dropeachact.excelChartActivityVo.getExcelChart[0].chart}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Action</span> : ${dropeachact.excelChartActivityVo.getExcelChart[0].action} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">File Name</span> : ${dropeachact.excelChartActivityVo.getExcelChart[0].fileName} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Replace existing file</span> : ${dropeachact.excelChartActivityVo.getExcelChart[0].replaceExistingFile} </div>
                    `
                   }
                   else if(dropeachact.excelChartActivityVo.chartText == "Insert Chart") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">Chart category</span> : ${dropeachact.excelChartActivityVo.insertChart[0].chartCatagory}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Chart type</span> : ${dropeachact.excelChartActivityVo.insertChart[0].chartType} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Data range</span> : ${dropeachact.excelChartActivityVo.insertChart[0].dataRange} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Insert into sheet</span> : ${dropeachact.excelChartActivityVo.insertChart[0].insertIntoSheet} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Save Chart to</span> : ${dropeachact.excelChartActivityVo.insertChart[0].saveChartTo} </div>
                    `
                   }
                   appendact +=`
                      
                   </div>
                   </div>
             
                    
             </div>`
             appendPath.append(appendact);
            }    
            else if(dropeachact.activityType == "csInsertAct") {
                var appendact =
                `
                <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-hmar cs-pr"><em class="iconclose cs-circle icact icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                    
                <span class="cs-textb cs-excInsert-act-clr cs-hmar">Insert:</span> 
                   <div class="aclists multiact cs-hide">
                   <div class="eachlistsact active"><span class="cs-tw-600">Activity Name</span> : ${dropeachact.excelInsertActivityVo.insertText}</div>`;
                   if(dropeachact.excelInsertActivityVo.insertText == "Insert Column") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">Range</span> : ${dropeachact.excelInsertActivityVo.insertColumn[0].range}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Relative to column</span> : ${dropeachact.excelInsertActivityVo.insertColumn[0].relativeToColumn} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Where</span> : ${dropeachact.excelInsertActivityVo.insertColumn[0].where} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Add header</span> : ${dropeachact.excelInsertActivityVo.insertColumn[0].addHeader} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Format data as type</span> : ${dropeachact.excelInsertActivityVo.insertColumn[0].formatDataAsType} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Has Header</span> : ${dropeachact.excelInsertActivityVo.insertColumn[0].hasHeader} </div>
                    `
                   }
                   else if(dropeachact.excelInsertActivityVo.insertText == "Insert Rows") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">In what table or range</span> : ${dropeachact.excelInsertActivityVo.insertRows[0].inWhatTableOrRange}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Number of rows</span> : ${dropeachact.excelInsertActivityVo.insertRows[0].numberOfRows} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Where</span> : ${dropeachact.excelInsertActivityVo.insertRows[0].where} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Has header</span> : ${dropeachact.excelInsertActivityVo.insertRows[0].hasHeader} </div>
                    `
                   }
                   else if(dropeachact.excelInsertActivityVo.insertText == "Insert Sheet") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">Create in workbook</span> : ${dropeachact.excelInsertActivityVo.insertSheet[0].createInWorkbook}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Sheet name</span> : ${dropeachact.excelInsertActivityVo.insertSheet[0].sheetName}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Reference new sheet as</span> : ${dropeachact.excelInsertActivityVo.insertSheet[0].referenceNewSheetAs}</div>
                    `
                   }
                   appendact +=`
                      
                   </div>
                   </div>
             
                    
             </div>`
             appendPath.append(appendact);
            }
            else if(dropeachact.activityType == "csSaveAct") {
                var appendact =
                `
                <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-hmar cs-pr"><em class="iconclose cs-circle icact icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                    
                <span class="cs-textb cs-excSave-act-clr cs-hmar">Save:</span> 
                   <div class="aclists multiact cs-hide">
                   <div class="eachlistsact active"><span class="cs-tw-600">Activity Name</span> : ${dropeachact.excelSaveActivityVo.saveText}</div>`;
                   if(dropeachact.excelSaveActivityVo.saveText == "Save Excel File As") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">Workbook</span> : ${dropeachact.excelSaveActivityVo.saveExcelFileAs[0].workBook}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Save as type</span> : ${dropeachact.excelSaveActivityVo.saveExcelFileAs[0].saveAsType} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Save as file</span> : ${dropeachact.excelSaveActivityVo.saveExcelFileAs[0].saveAsFile} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">File Name</span> : ${dropeachact.excelSaveActivityVo.saveExcelFileAs[0].fileName} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Replace existing</span> : ${dropeachact.excelSaveActivityVo.saveExcelFileAs[0].replaceExisting} </div>
                    `
                   }
                   else if(dropeachact.excelSaveActivityVo.saveText == "Save Excel File") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">File</span> : ${dropeachact.excelSaveActivityVo.saveExcelFile[0].file}</div>
                    `
                   }
                   else if(dropeachact.excelSaveActivityVo.saveText == "Save Excel File As PDF") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">Workbook</span> : ${dropeachact.excelSaveActivityVo.saveExcelFileAsPDF[0].workBook}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Sheet name</span> : ${dropeachact.excelSaveActivityVo.saveExcelFileAsPDF[0].sheetName}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Replace existing</span> : ${dropeachact.excelSaveActivityVo.saveExcelFileAsPDF[0].replaceExisting}</div>
                    `
                   }
                   appendact +=`
                      
                   </div>
                   </div>
             
                    
             </div>`
             appendPath.append(appendact);
            }
            else if(dropeachact.activityType == "csWriteAct") {
                var appendact =
                `
                <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-hmar cs-pr"><em class="iconclose cs-circle icact icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                    
                <span class="cs-textb cs-excWrite-act-clr cs-hmar">Write:</span> 
                   <div class="aclists multiact cs-hide">
                   <div class="eachlistsact active"><span class="cs-tw-600">Activity Name</span> : ${dropeachact.excelWriteActivityVo.writeText}</div>`;
                   if(dropeachact.excelWriteActivityVo.writeText == "DataTable to Excel") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">What to write</span> : ${dropeachact.excelWriteActivityVo.writeDataTable[0].whatToWrite}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Destination</span> : ${dropeachact.excelWriteActivityVo.writeDataTable[0].destination} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Append</span> : ${dropeachact.excelWriteActivityVo.writeDataTable[0].append} </div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Exclude header</span> : ${dropeachact.excelWriteActivityVo.writeDataTable[0].excludeHeader} </div>
                    `
                   }
                   else if(dropeachact.excelWriteActivityVo.writeText == "Write Cell") {
                    appendact +=` 
                      <div class="eachlistsact active"><span class="cs-tw-600">What to write</span> : ${dropeachact.excelWriteActivityVo.writeCell[0].whatToWrite}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Where to write</span> : ${dropeachact.excelWriteActivityVo.writeCell[0].whereToWrite}</div>
                      <div class="eachlistsact active"><span class="cs-tw-600">Auto increment row</span> : ${dropeachact.excelWriteActivityVo.writeCell[0].autoIncrementRow}</div>
                    `
                   }
                   appendact +=`
                      
                   </div>
                   </div>
             
                    
             </div>`
             appendPath.append(appendact);
            }
          else if(dropeachact.activityType == "Hotkey") {
        
                var eachact =
                     `
                     <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-pr cs-hmar itacteachlists"><div class="eachlineact"><em class="iconactit cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
             
                     <span class="cs-textb vclr cs-hmar">${dropeachact.activityType} Activity:</span> 
                         <div class="aclists multiact cs-hide">
                             <div class="eachlistsact1 active"><span class="cs-tw-600">Hotkey Value</span> : ${dropeachact.hotkeyActivityVo.hotkeyValue}</div>
                        </div>
        
                   
                   </div> </div> </div>`
                   appendPath.append(eachact) 
        
            }
          else if(dropeachact.activityType == "Entail") {

                var eachact =
                     `
                     <div class="grpoflists eachassignedact12 cs-hide"><div class="cs-act-name cs-pr cs-hmar itacteachlists"><div class="eachlineact"><em class="iconactit cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em><em class="icon-cs-execute cs-greenc cs-hpad"></em>
                              <span class="cs-textb greclr">Playback : </span> <span>${dropeachact.playbackName}</span>
                      </div> </div> </div>`
                     appendPath.append(eachact) 

          }     


             else if(dropeachact.activityType == "Iteration") {


               var eachact = `<div class="grpoflists eachassignedact12 cs-hide"><div class="cs-Iteration-part"><div class="cs-act-name cs-pr cs-hmar cs-itpart"><em class="iclayact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em><span class="blclr cs-textb cs-hmar">${dropeachact.activityType} Activity:</span>
                <div class="aclists cs-hide">
                     <div class="eachlistsact active"><span class="cs-tw-600">Element Type</span> : ${dropeachact.iterationActivityVO.iterationCountType}</div>  

                     <div class="eachlistsact active"><span class="cs-tw-600">Element value</span> : ${dropeachact.iterationActivityVO.iterationCountValue}</div>
                 </div>         
                  
                   </div>
                   </div>
              
            
                 </div> `
                 appendPath.append(eachact) 

                 $(".currentiterationactivity").removeClass("currentiterationactivity")
             


                     if(dropeachact.iterationActivityVO.playbackActivityVOs.length) {
                          nextleveliterationactivities (dropeachact.iterationActivityVO.playbackActivityVOs,appendPath.find(">.grpoflists > .cs-Iteration-part"))
                       
                     }

             }
          else if(dropeachact.activityType == "Layout") {   

            nisthenumber = +nisthenumber + 1;
            var eachact = 
               `  <div class="eachassignedact12 grpoflists cs-hide"><div class="cs-layout-part cs-lay"><div class="cs-act-name cs-pr cs-hmar cs-lyline cs-act-section cs-layname"><div class="cs-layname">
                    <em class="iclayact cs-circle icon-cs-up-arrow cs-pad-sm cs-b-white"></em>
                      <em class="icon-cs-layout cs-bluec cs-hpad"></em>
              
                     <span class="cs-textb blclr">${dropeachact.activityType} Activity: </span>
                     <span> ${dropeachact.layoutActivityVO.layoutName} </span>
                      <span class="appendlayact"></span>
                    </div>
                      <div class="aclists cs-hide">
                         
                         <div class="eachvalact eachcurrentappendblockmllists ${nisthenumber}"></div>
                        
                         
                      </div>

                   </div>
              </div>  
              </div>`

                           appendPath.append(eachact) 

        
                 $(dropeachact.layoutActivityVO.playbackActivityVOs).each(function (index,layactlength) {
                    var currLength1 = $(dropeachact.layoutActivityVO.playbackActivityVOs).length;
          
                 if(layactlength.activityType == "Element") {
                  var appendlay = 
                '<div class="elements active"><span class="cs-tw-600">' +layactlength.elementActivityVO.layoutElementsVO.elementName + '</span> : ' + '<span class=""> '+ layactlength.elementActivityVO.layoutElementsVO.elementType + '</span></div>' 
          
                       $(`.eachcurrentappendblockmllists.${nisthenumber}`).append(appendlay)
                       if(index == currLength1-1){
                        nisthenumber = nisthenumber-1;
                      }

                  }
                  else{
                    if ($(layactlength.length)) {
                             getactdata (layactlength, $(`.eachcurrentappendblockmllists.${nisthenumber}`))
                             if(index == currLength1-1){
                                nisthenumber = nisthenumber-1;
                              }
                         }
                  }

                })


                }

              $(dropeachact.conditionalActivitySet).each(function(index,valact)  {

                  if (valact.conditionalActivityVO.clauseType == "If") {  

                    var eachact = `
                  
                    <div class="grpoflists eachassignedact12 cs-ifcondition cs-hide"><div class="cs-conditionnActivity-part cs-eachact">
                         <div class="cs-act-name cs-hmar cs-bpad cs-pr cs-conline"><em class="iclayact cs-circle icon-cs-up-arrow cs-pad-sm"></em>
                             <span class="vtclr cs-textb cs-hmar"> Condition Activity</span>

                             <div class="cs-if cs-lmar-lg cs-hide"><span class="cs-icif"><em class="ic-conact icact cs-circle icon-cs-up-arrow cs-pad-sm cs-line"></em></span>
                                <span class="if-block cs-tw-600 cs-lmar"> If :
                                 <span class="appendifconditionlists actvalact eachset cs-tw-600">Condition = </span></span>
                             <div class="appendifactivities"></div>
                         </div>
           
                </div> </div> </div> `  
               
                   appendPath.append(eachact) 


                      if (valact.conditionalActivityVO.condition.length) {
                           var gettheconditionval = valact.conditionalActivityVO.condition
                           var customexpression = valact.conditionalActivityVO.customExpression 
                           $(gettheconditionval).each(function (index, value) {
                           var eachExpSet =
                                  '<span class="cs-getconditionlabel "> ' + value.getConditionalValue + ' <span>' +
                                   '<span class="cs-oper ">' + "( " + '</span>' +
                                   '<span class="cs-getleftexpval ">' + value.leftexp +
                                   '</span>' + " " + '<span class="cs-op "> ' + value.operator + ' </span> ' +
                                   '<span class="cs-getrightval ">' + value.rightexp + '</span>' +
                                   '<span class="cs-closecurve ">' + " )" + '</span>' + " " ;
    
                                   
                               $('.appendifconditionlists').append(eachExpSet)

                            })
                         }

                         if(valact.conditionalActivityVO.playbackActivityVOs.length) {

                            nextleveliterationactivities (valact.conditionalActivityVO.playbackActivityVOs , appendPath.find(">.cs-ifcondition > .cs-conditionnActivity-part .appendifactivities"))
                              
                            //   $('.currentconditionactivity').removeClass('currentconditionactivity')
                                   $('.cs-ifcondition').removeClass('cs-ifcondition')
                                //    $('.appendifactivities').removeClass('appendifactivities')
                       
                        }    
                        
                      }

                      else if(valact.conditionalActivityVO.clauseType == "ElseIf") {

                        var eachact = `<div class="grpoflists eachassignedact12 cs-elseifcondition cs-hide"><div class="cs-conditionnActivity-part cs-eachact"><div class="cs-act-name cs-hmar cs-bpad cs-pr cs-conline">
                             
                             <div class="cs-elseif cs-lmar-lg cs-hide"><span class="cs-icif"><em class="ic-conact icact cs-circle icon-cs-up-arrow cs-pad-sm cs-line"></em></span>
                                  <span class="elseif-block cs-tw-600 cs-lmar"> ElseIf :
                                  <span class="appendelseifconditionlists actvalact eachset cs-tw-600">Condition = </span></span>
                                  <div class="appendelseifactivities cs-hide"></div>
                            </div>
               
                               </div> </div> </div> `  
                               appendPath.append(eachact) 

                      if (valact.conditionalActivityVO.condition.length) {
                        var gettheconditionval = valact.conditionalActivityVO.condition
                        var customexpression = valact.conditionalActivityVO.customExpression
                        $(gettheconditionval).each(function (index, value) {
                        var eachExpSet =
                               '<span class="cs-getconditionlabel "> ' + value.getConditionalValue + ' <span>' +
                                '<span class="cs-oper ">' + "( " + '</span>' +
                                '<span class="cs-getleftexpval ">' + value.leftexp +
                                '</span>' + " " + '<span class="cs-op "> ' + value.operator + ' </span> ' +
                                '<span class="cs-getrightval ">' + value.rightexp + '</span>' +
                                '<span class="cs-closecurve ">' + " )" + '</span>' + " " ;
                             
                           $('.appendelseifconditionlists').append(eachExpSet)

                         })
                      }

                        if(valact.conditionalActivityVO.playbackActivityVOs.length) {

                            nextleveliterationactivities (valact.conditionalActivityVO.playbackActivityVOs, appendPath.find(">.cs-elseifcondition > .cs-conditionnActivity-part .appendelseifactivities"))
                            $('.cs-elseifcondition').removeClass('cs-elseifcondition')
                       }
                    }  

                     else if(valact.conditionalActivityVO.clauseType == "Else") {
                                   
                        var eachact = `<div class="grpoflists eachassignedact12 cs-elsecondition cs-hide"><div class="cs-conditionnActivity-part cs-eachact"><div class="cs-act-name cs-hmar cs-bpad cs-pr cs-conline">


                        <div class="cs-else cs-lmar-lg cs-hide"><span class="cs-icif"><em class="ic-conact icact cs-circle icon-cs-up-arrow cs-pad-sm cs-line"></em></span>
                                  <span class="else-block cs-tw-600 cs-lmar"> Else : </span>
                                  
                              <div class="appendelseactivities"></div>
                        </div> 
                            
                       
                       </div> </div> </div> `  
                       appendPath.append(eachact) 

                         if(valact.conditionalActivityVO.playbackActivityVOs.length) {
   
                            nextleveliterationactivities (valact.conditionalActivityVO.playbackActivityVOs , appendPath.find(">.cs-elsecondition > .cs-conditionnActivity-part .appendelseactivities"))
                              $('.cs-elsecondition').removeClass('cs-elsecondition')
                             
                            //   $('.currentconditionactivity').removeClass('currentconditionactivity')
                       
                        }    
                     }


                   })
                    

                }
             }

          }
        nisthenumber = 0; 
       

       $('.btn-design').removeClass('active');
       $('.btn-text').addClass('active');
       $('.cs-pb-ly-droparea').addClass('cs-hide');
       $('.cs-text-content').removeClass('cs-hide');

      $(".cs-eachcontent >.cs-Iteration-part").find(".eachlineact.eachlinestraightact:last").removeClass("eachlinestraightact eachlineact")
      $(".cs-eachcontent >.cs-conditionnActivity-part").find(".eachlineact:last").removeClass("eachlineact")
     $(".cs-eachcontent >.cs-layout-part").find(".eachlineact.eachlinestraightact:last").removeClass("eachlinestraightact eachlineact")

  



 function setElementCount() {
    $(".cs-pb-create-board .cs-at-layoutcontroweach.cs-layout-container").each(function() {
        var getAssigned = 0;
        var getNotAssigned = 0;
        $(this).find(">.cs-at-layouttogglecontentmain >.cs-at-layoutcontroweach.cs-each-element").each(function() {
            if($(this).data("eachActivityVO").elementActivityVO.elementAction != undefined && $(this).data("eachActivityVO").elementActivityVO.elementAction != "") {
                getAssigned++;
            }
            else {
                getNotAssigned++;
            }
        });
        $(this).find(">h3 .cs-assigned-elem").text(getAssigned);
        $(this).find(">h3 .cs-non-aggigned-elem").text(getNotAssigned);
    });
}
function recallTooltip() {
    allTooltipMain()
    $(".cs-tooltip").tooltip();
    $( ".cs-tooltip-top" ).tooltip({
      position: {
        my: "center bottom",
        at: "center top-10",
        using: function( position, feedback ) {
          $( this ).css( position );
          $( this ).addClass( "cs-tooltip-top-block" );
          
        }
      }
    });
}
function bindDynamicInputData() {
   
    $(".cs-each-element.cs-dyna-edit-active").data("eachActivityVO").elementActivityVO.dynamicValue = [];
    $(".cs-dynamic-input-container .cs-dyna-input-element-container ul li").each(function() {
        $(".cs-each-element.cs-dyna-edit-active").data("eachActivityVO").elementActivityVO.dynamicValue.push($(this).find(".cs-each-dyna-text").text());
    });
}

function imgDroppable() {
    $(".cs-pb-img-drp").droppable({
        activeClass: "ui-state-default",
        hoverClass: "ui-drop-hover",
        accept: ".cs-at-imagelayout-main",
        greedy: "greedy",
        drop: function(event, ui) {
            if ($(ui.draggable).hasClass('cs-at-imagelayout-main')) {
                var imgurl = $(ui.draggable).find('img').attr('src');
                $(this).find("img").attr("src", imgurl);
                $(this).addClass("cs-imgdropped");
                $(this).closest(".cs-image-element").data("eachActivityVO").elementActivityVO.dropImageId = imgurl;
            }
        }
    });
}
function datatableDroppable() {
    $(".cs-DataTable").droppable({
        activeClass: "ui-state-default",
        hoverClass: "ui-drop-hover",
        accept: ":not(.ui-sortable-helper)",
        greedy: "greedy",
        over: function(event, ui) {
            var $this = $(this);
        },
        drop: function(event, ui) {
            console.log(event)
            if ($(ui.draggable).hasClass("cs-fileactivity")) {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-fileActivity cs-pr cs-pb-blk">' +
                    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">File Activity</div>' +
                    '<div class="cs-activity-icon cs-pa">' +
                    '<i class="icon-cs-file-text-o"></i>' +
                    '</div>' +
                    '<span class="cs-remove-activity cs-pa cs-cur">' +
                    '<i class="icon-cs-delete"></i>' +
                    '</span>' +
                    '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
                    '<div class="clearfix">' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-fileactivity-inp cs-fileactivity-filetype">' +
                    '<label>File Type</label>' +
                    '<select>'+
                    '<option value="Read">Read</option>'+
                    '<option value="Write">Write</option>'+
                    '</select>'+
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-fileactivity-inp cs-fileactivity-source">' +
                    '<label>Source</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-pr cs-fileactivity-inp cs-fileactivity-target">' +
                    '<label>Target (Data Table)</label>' +
                    '<input type="text">' +
                    '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '</div>';
                    if($(event.target).find(".cs-drg-txt-box-par").find(".cs-activityBlock").length == 0){
                        $(event.target).find(".cs-drg-txt-box-par").html(" ");
                    }
                    var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-drg-txt-box-par .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-drg-txt-box-par"));
                        }
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csFileAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            else if ($(ui.draggable).hasClass("cs-eachRow")) {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-aparent cs-at-layoutcontroweach dropAcrive cs-eachRowSty cs-pr cs-pb-blk">' +
                    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Each Row</div>' +
                    '<div class="cs-activity-icon cs-pa">' +
                    '<i class="icon-cs-each-row"></i>' +
                    '</div>' +
                    '<span class="cs-remove-activity cs-pa cs-cur">' +
                    '<i class="icon-cs-delete"></i>' +
                    '</span>' +
                    '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
                    '<div class="clearfix">' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-eachrow-inp cs-foreach">' +
                        '<label>For Each</label>' +
                        '<input type="text" >' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-pr cs-eachrow-inp cs-in">' +
                        '<label>In</label>' +
                        '<input type="text" >' +
                        '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-24f">' +
                            `<div class="cs-pad cs-bg-bdy-clr">Body</div>
                            <div class="cs-each-drop-area cs-line cs-pad-sm"></div>`+
                        '</div>' +
                    '</div>' +
                    '</div>' +
                    '</div>';
                    if($(event.target).find(".cs-drg-txt-box-par").find(".cs-activityBlock").length == 0){
                        $(event.target).find(".cs-drg-txt-box-par").html(" ");
                    }
                    var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-drg-txt-box-par .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-drg-txt-box-par"));
                        }
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csEachRow");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                    eachrowDroppable()
            }
            else if ($(ui.draggable).hasClass("cs-addRow")) {
                var getElementHtml ='<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-addRowSty cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Add Row</div>' +
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-create-row"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
                '<div class="clearfix">' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-pr cs-addrow-inp cs-addrow-datatable">' +
                    '<label>Target (Data Table)</label>' +
                    '<input type="text">' +
                    '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-addrow-inp cs-addrow-rowtype">' +
                    '<label>Row Type</label>' +
                    '<select class="addRowSelOpt">'+
                    '<option value="select1">Array Row</option>'+
                    '<option value="select2">Data Row</option>'+
                    '</select>'+
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8 cs-addrow-inp cs-add-row-login-inp">' +
                    '<div class="cs-input cs-addrow-inp cs-addrow-exp">' +
                    '<label>Enter Expression</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                '</div>' +
                `<div class="cs-addrow-addrlist-par cs-tmar cs-hide">
                    <div class="cs-lmar"><span class="cs-tw-600">Attribute List</span><span class="cs-lmar cs-badge cs-badge-info">18</span></div>
                    <div class="cs-cell-24f cs-addname cs-tsmar">  
                        <div class="cs-cell-6f"><span class="cs-lmar">Add</span></div>
                        <div class="cs-cell-3f">
                            <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
                        </div>
                        <div class="cs-cell-8f"><span class="cs-inline cs-addrow-inp cs-addName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Variable"></span></div>
                    </div>
                    <div class="cs-cell-24f cs-sprintname cs-tsmar">
                        <div class="cs-cell-6f"><span class="cs-lmar">Sprint Name</span></div>
                        <div class="cs-cell-3f">
                            <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
                        </div>
                        <div class="cs-cell-8f"><span class="cs-inline cs-addrow-inp cs-sprintName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Variable"></span></div>
                    </div>
                    <div class="cs-cell-24f cs-conectionname cs-tsmar">
                        <div class="cs-cell-6f"><span class="cs-lmar">Connection Name</span></div>
                        <div class="cs-cell-3f">
                            <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
                        </div>
                        <div class="cs-cell-8f"><span class="cs-inline cs-addrow-inp cs-conectionName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Global Variable"></span></div>
                    </div>
                    <div class="cs-cell-24f cs-versionname cs-tsmar">
                        <div class="cs-cell-6f"><span class="cs-lmar">Version Name</span></div>
                        <div class="cs-cell-3f">
                            <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
                        </div>
                        <div class="cs-cell-8f"><span class="cs-inline cs-addrow-inp cs-versionName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Variable"></span></div>
                    </div>
                </div>`+
                '</div>' +
                '</div>' ;
                if($(event.target).find(".cs-drg-txt-box-par").find(".cs-activityBlock").length == 0){
                    $(event.target).find(".cs-drg-txt-box-par").html(" ");
                }
                var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-drg-txt-box-par .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-drg-txt-box-par"));
                        }
                    }
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csAddRow");
                $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            else if ($(ui.draggable).hasClass("cs-remRow")) {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-remRowSty cs-pr cs-pb-blk">' +
                    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Remove Row</div>' +
                    '<div class="cs-activity-icon cs-pa">' +
                    '<i class="icon-cs-remove-row"></i>' +
                    '</div>' +
                    '<span class="cs-remove-activity cs-pa cs-cur">' +
                    '<i class="icon-cs-delete"></i>' +
                    '</span>' +
                    '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
                    '<div class="clearfix cs-remcon-par">' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-pr cs-remrow-inp cs-datatable">' +
                        '<label>Data Table</label>' +
                        '<input type="text" >' +
                        '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-remrow-inp cs-rowtype">' +
                        '<label>Row Type</label>' +
                        '<select id="remRowSelOpt">'+
                        '<option value="select1">Row Index</option>'+
                        '<option value="select2">Row</option>'+
                        '</select>'+
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8 cs-rem-row-login-inp">' +
                        '<div class="cs-input cs-remrow-inp cs-rowindval">' +
                        '<label>Row Index Value</label>' +
                        '<input type="text" >' +
                        '</div>' +
                        '</div>' +
                    '</div>' +
                    `<div class="cs-remrow-addrlist-par cs-tmar cs-hide">
                       <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-remrow-inp cs-left-expr cs-var-el-dd-click" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                                    <label>Attribute Name</label>
                                                    <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                                    <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-remrow-inp cs-operator cs-var-el-dd-click cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                                    <label>Operators</label>
                                                    <input type="text" placeholder="Select Operators" class="cs-cond-opr cs-pe-none cs-cur">
                                                </div>
                                            </div>
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-remrow-inp cs-right-expr cs-var-el-dd-click" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                                    <label>Attribute Value</label>
                                                    <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                                    <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="cs-cell-3f">
                                            <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                                            <i class="icon-cs-delete"></i>
                                            </span>
                                            <span class="cs-remove-activity-datatable-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                            <i class="icon-cs-new"></i></span>
                                            </div>
                        </div>
                    </div>`+
                    '</div>' +
                    '</div>';
                    if($(event.target).find(".cs-drg-txt-box-par").find(".cs-activityBlock").length == 0){
                        $(event.target).find(".cs-drg-txt-box-par").html(" ");
                    }
                    var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-drg-txt-box-par .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-drg-txt-box-par"));
                        }
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csRemRow");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            else if ($(ui.draggable).hasClass("cs-uptROw")) {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-uptRowSty cs-pr cs-pb-blk">' +
                    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Update Row</div>' +
                    '<div class="cs-activity-icon cs-pa">' +
                    '<i class="icon-cs-update-row"></i>' +
                    '</div>' +
                    '<span class="cs-remove-activity cs-pa cs-cur">' +
                    '<i class="icon-cs-delete"></i>' +
                    '</span>' +
                    '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
                    '<div class="clearfix">' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-pr cs-uptrow-inp cs-datatable">' +
                        '<label>Data Table</label>' +
                        '<input type="text">' +
                        '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-uptrow-inp cs-rowtype">' +
                        '<label>Row Type</label>' +
                        '<select id="uptRowSelOpt">'+
                        '<option value="select1">Array Row</option>'+
                        '<option value="select2">Data Row</option>'+
                        '</select>'+
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8 cs-upt-row-login-inp">' +
                        '<div class="cs-input cs-uptrow-inp cs-expression">' +
                        '<label>Enter Expression</label>' +
                        '<input type="text">' +
                        '</div>' +
                        '</div>' +
                    '</div>' +
                    `<div class="cs-row-con-par">
                    <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
                                      <div class="cs-cell-7">
                                          <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                              <label>Attribute Name</label>
                                              <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                              <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                              <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                  <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                              </div>
                                          </div>
                                      </div>
                                      <div class="cs-cell-7">
                                          <div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                              <label>Operators</label>
                                              <input type="text" placeholder="Select Operators" class="cs-cond-opr cs-pe-none cs-cur">
                                          </div>
                                      </div>
                                      <div class="cs-cell-7">
                                          <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                              <label>Attribute Value</label>
                                              <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                              <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                              <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                  <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                              </div>
                                          </div>
                                      </div>
                                      <div class="cs-cell-3f">
                                      <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                                      <i class="icon-cs-delete"></i>
                                      </span>
                                      <span class="cs-remove-activity-datatable-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                      <i class="icon-cs-new"></i></span>
                                      </div>
                    
                                      
                    </div>
                    </div>`+
                    `<div class="cs-uptrow-addrlist-par cs-tmar cs-hide">
                        <div class="cs-uptrow-exprs">
                        <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                                    <label>Attribute Name</label>
                                                    <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                                    <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                                    <label>Operators</label>
                                                    <input type="text" placeholder="Select Operators" class="cs-cond-opr cs-pe-none cs-cur">
                                                </div>
                                            </div>
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                                    <label>Attribute Value</label>
                                                    <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                                    <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="cs-cell-3f">
                                            <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                                            <i class="icon-cs-delete"></i>
                                            </span>
                                            <span class="cs-remove-activity-datatable-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                            <i class="icon-cs-new"></i></span>
                                            </div>

                                            
                        </div>
                        </div>
                        <div class="cs-cell-24f cs-upt-attr-par cs-tline">
                                            <div class="cs-tmar">
                                                    <div class="cs-lmar"><span class="cs-tw-600">Attribute List</span><span class="cs-lmar cs-badge cs-badge-info">18</span></div>
                                                    <div class="cs-cell-24f cs-tsmar cs-upt-addName">
                                                        <div class="cs-cell-6f"><span class="cs-lmar">Add</span></div>
                                                        <div class="cs-cell-3f">
                                                            <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
                                                        </div>
                                                        <div class="cs-cell-8f"><span class="cs-inline cs-uptrow-inp cs-addName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Variable"></span></div>
                                                    </div>
                                                    <div class="cs-cell-24f cs-tsmar cs-upt-sprintName">
                                                        <div class="cs-cell-6f"><span class="cs-lmar">Sprint Name</span></div>
                                                        <div class="cs-cell-3f">
                                                            <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
                                                        </div>
                                                        <div class="cs-cell-8f"><span class="cs-inline cs-uptrow-inp cs-sprintName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Variable"></span></div>
                                                    </div>
                                                    <div class="cs-cell-24f cs-tsmar cs-upt-connectionName">
                                                        <div class="cs-cell-6f"><span class="cs-lmar">Connection Name</span></div>
                                                        <div class="cs-cell-3f">
                                                            <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
                                                        </div>
                                                        <div class="cs-cell-8f"><span class="cs-inline cs-uptrow-inp cs-conectionName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Global Variable"></span></div>
                                                    </div>
                                                    <div class="cs-cell-24f cs-tsmar cs-upt-versionName">
                                                        <div class="cs-cell-6f"><span class="cs-lmar">Version Name</span></div>
                                                        <div class="cs-cell-3f">
                                                            <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
                                                        </div>
                                                        <div class="cs-cell-8f"><span class="cs-inline cs-uptrow-inp cs-versionName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Variable"></span></div>
                                                    </div>
                                                </div>
                                            </div>
                    </div>`+
                    '</div>' +
                    '</div>';
                    if($(event.target).find(".cs-drg-txt-box-par").find(".cs-activityBlock").length == 0){
                        $(event.target).find(".cs-drg-txt-box-par").html(" ");
                    }
                    var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-drg-txt-box-par .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-drg-txt-box-par"));
                        }
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csUptRow");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            else if ($(ui.draggable).hasClass("cs-filRow")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-filRowSty cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Filter Row</div>' +
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-filter-row"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
                '<div class="clearfix">' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-pr cs-filrow-inp cs-datatable">' +
                    '<label>Data Table</label>' +
                    '<input type="text" >' +
                    '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-filrow-inp cs-rowtype">' +
                    '<label>Row Type</label>' +
                    '<select id="filRowSelOpt">'+
                    '<option value="select1">By Value</option>'+
                    '<option value="select2">By Condition</option>'+
                    '</select>'+
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8 cs-fil-row-login-inp">' +
                    '<div class="cs-input cs-filrow-inp cs-rowindexval">' +
                    '<label>Row Index Value</label>' +
                    '<input type="text" >' +
                    '</div>' +
                    '</div>' +
                '</div>' +
                `<div class="cs-fil-row-con">
                <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
                                  <div class="cs-cell-7">
                                      <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                          <label>Attribute Name</label>
                                          <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                          <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                          <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                              <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                          </div>
                                      </div>
                                  </div>
                                  <div class="cs-cell-7">
                                      <div class="cs-input cs-var-el-dd-click cs-operator" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                          <label>Operators</label>
                                          <input type="text" placeholder="Select Operators" value="=" class="cs-cond-opr cs-pe-none cs-cur">
                                      </div>
                                  </div>
                                  <div class="cs-cell-7">
                                      <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                          <label>Attribute Value</label>
                                          <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                          <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                          <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                              <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                          </div>
                                      </div>
                                  </div>
                                  <div class="cs-cell-3f">
                                  <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                                  <i class="icon-cs-delete"></i>
                                  </span>
                                  <span class="cs-remove-activity-datatable-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                  <i class="icon-cs-new"></i></span>
                                  </div>
                
                                  
                </div>
                </div>`+
                `<div class="cs-filrow-addrlist-par cs-tmar cs-hide">
                    <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
                                        <div class="cs-cell-7">
                                            <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                                <label>Attribute Name</label>
                                                <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                                <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                                <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                    <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="cs-cell-7">
                                            <div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                                <label>Operators</label>
                                                <input type="text" placeholder="Select Operators" class="cs-cond-opr cs-pe-none cs-cur">
                                            </div>
                                        </div>
                                        <div class="cs-cell-7">
                                            <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                                <label>Attribute Value</label>
                                                <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                                <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                                <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                    <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="cs-cell-3f">
                                        <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                                        <i class="icon-cs-delete"></i>
                                        </span>
                                        <span class="cs-remove-activity-datatable-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                        <i class="icon-cs-new"></i></span>
                                        </div>
                    </div>
                </div>`+
                '</div>' +
                '</div>';
                if($(event.target).find(".cs-drg-txt-box-par").find(".cs-activityBlock").length == 0){
                    $(event.target).find(".cs-drg-txt-box-par").html(" ");
                }
                var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-drg-txt-box-par .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-drg-txt-box-par"));
                        }
                    }
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csFilRow");
                $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            else if ($(ui.draggable).hasClass("cs-merge-table")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-mergeRowSty cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Merge Data Table</div>' +
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-merge-table"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
                '<div class="clearfix">' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-pr cs-mergerow-inp cs-destinaion">' +
                    '<label>Destination</label>' +
                    '<input type="text" >' +
                    '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-pr cs-mergerow-inp cs-source">' +
                    '<label>Source</label>' +
                    '<input type="text" >' +
                    '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-login-inp cs-login-username">' +
                    '<label>Allow Duplicate</label>' +
                    `
                    <div class="cs-flex cs-column-middle cs-row-between">
                            <label class="switch-toggle cs-lsmar">
                                <input type="checkbox" class="cs-merge-inp" id="playbackIsactive">
                                <div class="slider-toggle round-toggle"></div>
                            </label>
                            <div>
                            <a href="#" class="cs-7x-radius cs-btn cs-btn-primary cs-btn-xs cs-pb-mapp-clk">Mapping</a>
                            </div>
                    </div>
                    `+
                    '</div>' +
                    '</div>' +
                '</div>' +
                `<div class="cs-mergerow-addrlist-par cs-tmar cs-hide">
                    <div class="cs-cell-24f">
                        <div class="cs-cell-6f cs-dest-attr-par">
                            <div class="cs-pad cs-head-clr cs-rline">Destination Attributes</div>
                            <div class="cs-rline cs-lline cs-bline">
                                <div class="cs-pad cs-pr"><input type="text" name="Sprint Name" placeholder="Destination Attributes"><a href="#" class="cs-pa cs-r-5"><i class="icon-cs-search cs-ts-12"></i></a></div>
                                <div class="cs-list cs-pr cs-scroll-2">
                                </div>
                            </div>
                        </div>
                        <div class="cs-cell-6f cs-pr cs-sour-attr-par">
                            <span class="cs-center cs-circle cs-merge-mapper-ic-pos cs-pa cs-cur"><em class="icon-cs-mapper"></em></span>
                            <div class="cs-pad cs-head-clr cs-rline">Source Attributes</div>
                            <div class="cs-rline cs-bline">
                                <div class="cs-pad cs-pr"><input type="text" name="Sprint Name" placeholder="Source Attributes"><a href="#" class="cs-pa cs-r-5"><i class="icon-cs-search cs-ts-12"></i></a></div>
                                <div class="cs-list cs-pr cs-scroll-2">
                                </div>
                            </div>
                        </div>
                        <div class="cs-cell-12f cs-mapp-attr-par">
                            <div class="cs-pad cs-head-clr cs-rline">Mapped Attributes</div>
                            <div class="cs-rline cs-bline">
                                <div class="cs-pad cs-pr"><input type="text" name="Sprint Name" placeholder="Mapped Attributes"><a href="#" class="cs-pa cs-r-5"><i class="icon-cs-search cs-ts-12"></i></a></div>
                                <div class="cs-list cs-pr cs-scroll-2">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>`+
                '</div>' +
                '</div>';
                if($(event.target).find(".cs-drg-txt-box-par").find(".cs-activityBlock").length == 0){
                    $(event.target).find(".cs-drg-txt-box-par").html(" ");
                }
                var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-drg-txt-box-par .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-drg-txt-box-par"));
                        }
                    }
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csMergeRow");
                $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            eachrowDroppable();
        }
    });
}
function eachrowDroppable() {
    $(".cs-eachRowSty").droppable({
        activeClass: "ui-state-default",
        hoverClass: "ui-drop-hover",
        accept: ":not(.ui-sortable-helper)",
        greedy: "greedy",
        over: function(event, ui) {
            var $this = $(this);
        },
        drop: function(event, ui) {
            if ($(ui.draggable).hasClass("cs-fileactivity")) {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-fileActivity cs-pr cs-pb-blk">' +
                    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">File Activity</div>' +
                    '<div class="cs-activity-icon cs-pa">' +
                    '<i class="icon-cs-file-text-o"></i>' +
                    '</div>' +
                    '<span class="cs-remove-activity cs-pa cs-cur">' +
                    '<i class="icon-cs-delete"></i>' +
                    '</span>' +
                    '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
                    '<div class="clearfix">' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-fileactivity-inp cs-fileactivity-filetype">' +
                    '<label>File Type</label>' +
                    '<select>'+
                    '<option value="Read">Read</option>'+
                    '<option value="Write">Write</option>'+
                    '</select>'+
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-fileactivity-inp cs-fileactivity-source">' +
                    '<label>Source</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-pr cs-fileactivity-inp cs-fileactivity-target">' +
                    '<label>Target (Data Table)</label>' +
                    '<input type="text">' +
                    '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '</div>';
                    var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-each-drop-area .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-each-drop-area"));
                        }
                    }
                        droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csFileAct");
                        $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            else if ($(ui.draggable).hasClass("cs-eachRow")) {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-eachRowSty cs-pr cs-pb-blk">' +
                    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Each Row</div>' +
                    '<div class="cs-activity-icon cs-pa">' +
                    '<i class="icon-cs-each-row"></i>' +
                    '</div>' +
                    '<span class="cs-remove-activity cs-pa cs-cur">' +
                    '<i class="icon-cs-delete"></i>' +
                    '</span>' +
                    '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
                    '<div class="clearfix">' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-eachrow-inp cs-foreach">' +
                        '<label>For Each</label>' +
                        '<input type="text" >' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-pr cs-eachrow-inp cs-in">' +
                        '<label>In</label>' +
                        '<input type="text" >' +
                        '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-24f">' +
                            `<div class="cs-pad cs-bg-bdy-clr">Body</div>
                            <div class="cs-each-drop-area cs-line cs-pad-sm"></div>`+
                        '</div>' +
                    '</div>' +
                    '</div>' +
                    '</div>';
                    var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-each-drop-area .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-each-drop-area"));
                        }
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csEachRow");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                    eachrowDroppable();
            }
            else if ($(ui.draggable).hasClass("cs-addRow")) {
                var getElementHtml ='<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-addRowSty cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Add Row</div>' +
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-create-row"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
                '<div class="clearfix">' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-pr cs-addrow-inp cs-addrow-datatable">' +
                    '<label>Target (Data Table)</label>' +
                    '<input type="text">' +
                    '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-addrow-inp cs-addrow-rowtype">' +
                    '<label>Row Type</label>' +
                    '<select class="addRowSelOpt">'+
                    '<option value="select1">Array Row</option>'+
                    '<option value="select2">Data Row</option>'+
                    '</select>'+
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8 cs-addrow-inp cs-add-row-login-inp">' +
                    '<div class="cs-input cs-addrow-inp cs-addrow-exp">' +
                    '<label>Enter Expression</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                '</div>' +
                `<div class="cs-addrow-addrlist-par cs-tmar cs-hide">
                    <div class="cs-lmar"><span class="cs-tw-600">Attribute List</span><span class="cs-lmar cs-badge cs-badge-info">18</span></div>
                    <div class="cs-cell-24f cs-addname cs-tsmar">
                        <div class="cs-cell-6f"><span class="cs-lmar">Add</span></div>
                        <div class="cs-cell-3f">
                            <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
                        </div>
                        <div class="cs-cell-8f"><span class="cs-inline cs-addrow-inp cs-addName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Variable"></span></div>
                    </div>
                    <div class="cs-cell-24f cs-sprintname cs-tsmar">
                        <div class="cs-cell-6f"><span class="cs-lmar">Sprint Name</span></div>
                        <div class="cs-cell-3f">
                            <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
                        </div>
                        <div class="cs-cell-8f"><span class="cs-inline cs-addrow-inp cs-sprintName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Variable"></span></div>
                    </div>
                    <div class="cs-cell-24f cs-conectionname cs-tsmar">
                        <div class="cs-cell-6f"><span class="cs-lmar">Connection Name</span></div>
                        <div class="cs-cell-3f">
                            <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
                        </div>
                        <div class="cs-cell-8f"><span class="cs-inline cs-addrow-inp cs-conectionName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Global Variable"></span></div>
                    </div>
                    <div class="cs-cell-24f cs-versionname cs-tsmar">
                        <div class="cs-cell-6f"><span class="cs-lmar">Version Name</span></div>
                        <div class="cs-cell-3f">
                            <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
                        </div>
                        <div class="cs-cell-8f"><span class="cs-inline cs-addrow-inp cs-versionName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Variable"></span></div>
                    </div>
                </div>`+
                '</div>' +
                '</div>' ;
                var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-each-drop-area .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-each-drop-area"));
                        }
                    }
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csAddRow");
                $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            else if ($(ui.draggable).hasClass("cs-remRow")) {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-remRowSty cs-pr cs-pb-blk">' +
                    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Remove Row</div>' +
                    '<div class="cs-activity-icon cs-pa">' +
                    '<i class="icon-cs-remove-row"></i>' +
                    '</div>' +
                    '<span class="cs-remove-activity cs-pa cs-cur">' +
                    '<i class="icon-cs-delete"></i>' +
                    '</span>' +
                    '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
                    '<div class="clearfix cs-remcon-par">' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-pr cs-remrow-inp cs-datatable">' +
                        '<label>Data Table</label>' +
                        '<input type="text" >' +
                        '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-remrow-inp cs-rowtype">' +
                        '<label>Row Type</label>' +
                        '<select id="remRowSelOpt">'+
                        '<option value="select1">Row Index</option>'+
                        '<option value="select2">Row</option>'+
                        '</select>'+
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8 cs-rem-row-login-inp">' +
                        '<div class="cs-input cs-remrow-inp cs-rowindval">' +
                        '<label>Row Index Value</label>' +
                        '<input type="text" >' +
                        '</div>' +
                        '</div>' +
                    '</div>' +
                    `<div class="cs-remrow-addrlist-par cs-tmar cs-hide">
                        <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-remrow-inp cs-left-expr cs-var-el-dd-click" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                                    <label>Attribute Name</label>
                                                    <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                                    <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-remrow-inp cs-operator cs-var-el-dd-click cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                                    <label>Operators</label>
                                                    <input type="text" placeholder="Select Operators" class="cs-cond-opr cs-pe-none cs-cur">
                                                </div>
                                            </div>
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-remrow-inp cs-right-expr cs-var-el-dd-click" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                                    <label>Attribute Value</label>
                                                    <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                                    <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="cs-cell-3f">
                                            <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                                            <i class="icon-cs-delete"></i>
                                            </span>
                                            <span class="cs-remove-activity-datatable-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                            <i class="icon-cs-new"></i></span>
                                            </div>
                        </div>
                    </div>`+
                    '</div>' +
                    '</div>';
                    var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-each-drop-area .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-each-drop-area"));
                        }
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csRemRow");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            else if ($(ui.draggable).hasClass("cs-uptROw")) {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-uptRowSty cs-pr cs-pb-blk">' +
                    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Update Row</div>' +
                    '<div class="cs-activity-icon cs-pa">' +
                    '<i class="icon-cs-update-row"></i>' +
                    '</div>' +
                    '<span class="cs-remove-activity cs-pa cs-cur">' +
                    '<i class="icon-cs-delete"></i>' +
                    '</span>' +
                    '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
                    '<div class="clearfix">' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-pr cs-uptrow-inp cs-datatable">' +
                        '<label>Data Table</label>' +
                        '<input type="text">' +
                        '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-uptrow-inp cs-rowtype">' +
                        '<label>Row Type</label>' +
                        '<select id="uptRowSelOpt">'+
                        '<option value="select1">Array Row</option>'+
                        '<option value="select2">Data Row</option>'+
                        '</select>'+
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8 cs-upt-row-login-inp">' +
                        '<div class="cs-input cs-uptrow-inp cs-expression">' +
                        '<label>Enter Expression</label>' +
                        '<input type="text">' +
                        '</div>' +
                        '</div>' +
                    '</div>' +
                    `<div class="cs-row-con-par">
                    <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
                                      <div class="cs-cell-7">
                                          <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                              <label>Attribute Name</label>
                                              <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                              <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                              <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                  <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                              </div>
                                          </div>
                                      </div>
                                      <div class="cs-cell-7">
                                          <div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                              <label>Operators</label>
                                              <input type="text" placeholder="Select Operators" class="cs-cond-opr cs-pe-none cs-cur">
                                          </div>
                                      </div>
                                      <div class="cs-cell-7">
                                          <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                              <label>Attribute Value</label>
                                              <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                              <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                              <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                  <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                              </div>
                                          </div>
                                      </div>
                                      <div class="cs-cell-3f">
                                      <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                                      <i class="icon-cs-delete"></i>
                                      </span>
                                      <span class="cs-remove-activity-datatable-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                      <i class="icon-cs-new"></i></span>
                                      </div>
                    
                                      
                    </div>
                    </div>`+
                    `<div class="cs-uptrow-addrlist-par cs-tmar cs-hide">
                        <div class="cs-uptrow-exprs">
                        <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                                    <label>Attribute Name</label>
                                                    <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                                    <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                                    <label>Operators</label>
                                                    <input type="text" placeholder="Select Operators" class="cs-cond-opr cs-pe-none cs-cur">
                                                </div>
                                            </div>
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                                    <label>Attribute Value</label>
                                                    <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                                    <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="cs-cell-3f">
                                            <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                                            <i class="icon-cs-delete"></i>
                                            </span>
                                            <span class="cs-remove-activity-datatable-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                            <i class="icon-cs-new"></i></span>
                                            </div>

                                            
                        </div>
                        </div>
                        <div class="cs-cell-24f cs-upt-attr-par cs-tline">
                                            <div class="cs-tmar">
                                                    <div class="cs-lmar"><span class="cs-tw-600">Attribute List</span><span class="cs-lmar cs-badge cs-badge-info">18</span></div>
                                                    <div class="cs-cell-24f cs-tsmar cs-upt-addName">
                                                        <div class="cs-cell-6f"><span class="cs-lmar">Add</span></div>
                                                        <div class="cs-cell-3f">
                                                            <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
                                                        </div>
                                                        <div class="cs-cell-8f"><span class="cs-inline cs-uptrow-inp cs-addName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Variable"></span></div>
                                                    </div>
                                                    <div class="cs-cell-24f cs-tsmar cs-upt-sprintName">
                                                        <div class="cs-cell-6f"><span class="cs-lmar">Sprint Name</span></div>
                                                        <div class="cs-cell-3f">
                                                            <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
                                                        </div>
                                                        <div class="cs-cell-8f"><span class="cs-inline cs-uptrow-inp cs-sprintName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Variable"></span></div>
                                                    </div>
                                                    <div class="cs-cell-24f cs-tsmar cs-upt-connectionName">
                                                        <div class="cs-cell-6f"><span class="cs-lmar">Connection Name</span></div>
                                                        <div class="cs-cell-3f">
                                                            <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
                                                        </div>
                                                        <div class="cs-cell-8f"><span class="cs-inline cs-uptrow-inp cs-conectionName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Global Variable"></span></div>
                                                    </div>
                                                    <div class="cs-cell-24f cs-tsmar cs-upt-versionName">
                                                        <div class="cs-cell-6f"><span class="cs-lmar">Version Name</span></div>
                                                        <div class="cs-cell-3f">
                                                            <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
                                                        </div>
                                                        <div class="cs-cell-8f"><span class="cs-inline cs-uptrow-inp cs-versionName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Variable"></span></div>
                                                    </div>
                                                </div>
                                            </div>
                    </div>`+
                    '</div>' +
                    '</div>';
                    var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-each-drop-area .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-each-drop-area"));
                        }
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csUptRow");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            else if ($(ui.draggable).hasClass("cs-filRow")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-filRowSty cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Filter Row</div>' +
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-filter-row"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
                '<div class="clearfix">' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-pr cs-filrow-inp cs-datatable">' +
                    '<label>Data Table</label>' +
                    '<input type="text" >' +
                    '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-filrow-inp cs-rowtype">' +
                    '<label>Row Type</label>' +
                    '<select id="filRowSelOpt">'+
                    '<option value="select1">By Value</option>'+
                    '<option value="select2">By Condition</option>'+
                    '</select>'+
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8 cs-fil-row-login-inp">' +
                    '<div class="cs-input cs-filrow-inp cs-rowindexval">' +
                    '<label>Row Index Value</label>' +
                    '<input type="text" >' +
                    '</div>' +
                    '</div>' +
                '</div>' +
                `<div class="cs-fil-row-con">
                <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
                                  <div class="cs-cell-7">
                                      <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                          <label>Attribute Name</label>
                                          <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                          <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                          <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                              <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                          </div>
                                      </div>
                                  </div>
                                  <div class="cs-cell-7">
                                      <div class="cs-input cs-var-el-dd-click cs-operator" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                          <label>Operators</label>
                                          <input type="text" placeholder="Select Operators" value="=" class="cs-cond-opr cs-pe-none cs-cur">
                                      </div>
                                  </div>
                                  <div class="cs-cell-7">
                                      <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                          <label>Attribute Value</label>
                                          <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                          <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                          <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                              <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                          </div>
                                      </div>
                                  </div>
                                  <div class="cs-cell-3f">
                                  <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                                  <i class="icon-cs-delete"></i>
                                  </span>
                                  <span class="cs-remove-activity-datatable-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                  <i class="icon-cs-new"></i></span>
                                  </div>
                
                                  
                </div>
                </div>`+
                `<div class="cs-filrow-addrlist-par cs-tmar cs-hide">
                    <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
                                        <div class="cs-cell-7">
                                            <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                                <label>Attribute Name</label>
                                                <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                                <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                                <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                    <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="cs-cell-7">
                                            <div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                                <label>Operators</label>
                                                <input type="text" placeholder="Select Operators" class="cs-cond-opr cs-pe-none cs-cur">
                                            </div>
                                        </div>
                                        <div class="cs-cell-7">
                                            <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                                <label>Attribute Value</label>
                                                <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                                <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                                <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                    <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="cs-cell-3f">
                                        <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                                        <i class="icon-cs-delete"></i>
                                        </span>
                                        <span class="cs-remove-activity-datatable-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                        <i class="icon-cs-new"></i></span>
                                        </div>
                    </div>
                </div>`+
                '</div>' +
                '</div>';
                var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-each-drop-area .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-each-drop-area"));
                        }
                    }
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csFilRow");
                $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            else if ($(ui.draggable).hasClass("cs-merge-table")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-mergeRowSty cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Merge Data Table</div>' +
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-merge-table"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
                '<div class="clearfix">' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-pr cs-mergerow-inp cs-destinaion">' +
                    '<label>Destination</label>' +
                    '<input type="text" >' +
                    '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-pr cs-mergerow-inp cs-source">' +
                    '<label>Source</label>' +
                    '<input type="text" >' +
                    '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-login-inp cs-login-username">' +
                    '<label>Allow Duplicate</label>' +
                    `
                    <div class="cs-flex cs-column-middle cs-row-between">
                            <label class="switch-toggle cs-lsmar">
                                <input type="checkbox" class="cs-merge-inp" id="playbackIsactive">
                                <div class="slider-toggle round-toggle"></div>
                            </label>
                            <div>
                            <a href="#" class="cs-7x-radius cs-btn cs-btn-primary cs-btn-xs cs-pb-mapp-clk">Mapping</a>
                            </div>
                    </div>
                    `+
                    '</div>' +
                    '</div>' +
                '</div>' +
                `<div class="cs-mergerow-addrlist-par cs-tmar cs-hide">
                    <div class="cs-cell-24f">
                        <div class="cs-cell-6f cs-dest-attr-par">
                            <div class="cs-pad cs-head-clr cs-rline">Destination Attributes</div>
                            <div class="cs-rline cs-lline cs-bline">
                                <div class="cs-pad cs-pr"><input type="text" name="Sprint Name" placeholder="Destination Attributes"><a href="#" class="cs-pa cs-r-5"><i class="icon-cs-search cs-ts-12"></i></a></div>
                                <div class="cs-list cs-pr cs-scroll-2">
                                </div>
                            </div>
                        </div>
                        <div class="cs-cell-6f cs-pr cs-sour-attr-par">
                            <span class="cs-center cs-circle cs-merge-mapper-ic-pos cs-pa cs-cur"><em class="icon-cs-mapper"></em></span>
                            <div class="cs-pad cs-head-clr cs-rline">Source Attributes</div>
                            <div class="cs-rline cs-bline">
                                <div class="cs-pad cs-pr"><input type="text" name="Sprint Name" placeholder="Source Attributes"><a href="#" class="cs-pa cs-r-5"><i class="icon-cs-search cs-ts-12"></i></a></div>
                                <div class="cs-list cs-pr cs-scroll-2">
                                </div>
                            </div>
                        </div>
                        <div class="cs-cell-12f cs-mapp-attr-par">
                            <div class="cs-pad cs-head-clr cs-rline">Mapped Attributes</div>
                            <div class="cs-rline cs-bline">
                                <div class="cs-pad cs-pr"><input type="text" name="Sprint Name" placeholder="Mapped Attributes"><a href="#" class="cs-pa cs-r-5"><i class="icon-cs-search cs-ts-12"></i></a></div>
                                <div class="cs-list cs-pr cs-scroll-2">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>`+
                '</div>' +
                '</div>';
                var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-each-drop-area .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-each-drop-area"));
                        }
                    }
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csMergeRow");
                $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
        }
    });
}
function dynaIdCheckBox() {
    $('.cs-excel-act-clearIne').each(function(i, e){
        $(this).attr("id",  "cine"+ i);
        $(this).next().attr("for", "cine"+ i);
    });
    $('.cs-excel-act-saveChange').each(function(i, e){
        $(this).attr("id",  "savechanges"+ i);
        $(this).next().attr("for", "savechanges"+ i);
    });
    $('.cs-man-append-exclude-header').each(function(i, e){
        $(this).attr("id",  "excH"+ i);
        $(this).next().attr("for", "excH"+ i);
    });
    $('.cs-man-append-transpose').each(function(i, e){
        $(this).attr("id",  "tran"+ i);
        $(this).next().attr("for", "tran"+ i);
    });
    $('.cs-man-sheetrange-headers').each(function(i, e){
        $(this).attr("id",  "clrsh"+ i);
        $(this).next().attr("for", "clrsh"+ i);
    });
    $('.cs-excel-file-upload').each(function(i, e){
        $(this).attr("for",  "excUpl"+ i);
        $(this).next().attr("id", "excUpl"+ i);
    });
    $('.cs-delete-column-has-header').each(function(i, e){
        $(this).attr("id",  "delColhas"+ i);
        $(this).next().attr("for", "delColhas"+ i);
    });
    $('.cs-delete-rows-has-headers').each(function(i, e){
        $(this).attr("id",  "delRowhas"+ i);
        $(this).next().attr("for", "delRowhas"+ i);
    });
    $('.cs-excel-filter-caef').each(function(i, e){
        $(this).attr("id",  "exfil"+ i);
        $(this).next().attr("for", "exfil"+ i);
    });
    $('.cs-excel-filter-pivotTable-caef').each(function(i, e){
        $(this).attr("id",  "exfilPivot"+ i);
        $(this).next().attr("for", "exfilPivot"+ i);
    });
    $('.cs-read-forEacExcelRow-hh').each(function(i, e){
        $(this).attr("id",  "exreadforEacExcelRowHh"+ i);
        $(this).next().attr("for", "exreadforEacExcelRowHh"+ i);
    });
    $('.cs-read-forEacExcelRow-saer').each(function(i, e){
        $(this).attr("id",  "exreadforEacExcelRowSaer"+ i);
        $(this).next().attr("for", "exreadforEacExcelRowSaer"+ i);
    });
    $('.cs-read-readRange-headers').each(function(i, e){
        $(this).attr("id",  "exreadreadRangeHead"+ i);
        $(this).next().attr("for", "exreadreadRangeHead"+ i);
    });
    $('.cs-read-readRange-vro').each(function(i, e){
        $(this).attr("id",  "exreadreadRangeVro"+ i);
        $(this).next().attr("for", "exreadreadRangeVro"+ i);
    });
    $('.cs-chart-replaceexistingfile').each(function(i, e){
        $(this).attr("id",  "chartREF"+ i);
        $(this).next().attr("for", "chartREF"+ i);
    });
    $('.cs-insertCol-hasHead').each(function(i, e){
        $(this).attr("id",  "insertColHH"+ i);
        $(this).next().attr("for", "insertColHH"+ i);
    });
    $('.cs-insertRows-hasHead').each(function(i, e){
        $(this).attr("id",  "insertRowsHH"+ i);
        $(this).next().attr("for", "insertRowsHH"+ i);
    });
    $('.cs-SaveExcelFileAsPDF-RE').each(function(i, e){
        $(this).attr("id",  "saveExcPdf"+ i);
        $(this).next().attr("for", "saveExcPdf"+ i);
    });
    $('.cs-SaveExcelFileAs-RE').each(function(i, e){
        $(this).attr("id",  "saveExcFILEAs"+ i);
        $(this).next().attr("for", "saveExcFILEAs"+ i);
    });
    $('.cs-writeWC-autoIncRow').each(function(i, e){
        $(this).attr("id",  "wriAinc"+ i);
        $(this).next().attr("for", "wriAinc"+ i);
    });
    $('.cs-WriteDataTab-append').each(function(i, e){
        $(this).attr("id",  "wriDappend"+ i);
        $(this).next().attr("for", "wriDappend"+ i);
    });
    $('.cs-WriteDataTab-Eheader').each(function(i, e){
        $(this).attr("id",  "wriDEhead"+ i);
        $(this).next().attr("for", "wriDEhead"+ i);
    });
}
function excelAutomationDroppable() {
    $(".cs-excel-auto-act-child").droppable({
        activeClass: "ui-state-default",
        hoverClass: "ui-drop-hover",
        accept: ":not(.ui-sortable-helper)",
        greedy: "greedy",
        over: function(event, ui) {
            var $this = $(this);
        },
        drop: function(event, ui) {
            console.log(event);
            if ($(ui.draggable).hasClass("cs-excel-act")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-excel-act-child cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Excel File</div>' +
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-file-excel-o"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
                '<div class="clearfix">' +

                '<div class="cs-cell-8">' +
                '<div class="cs-input cs-pr cs-excel-act-file-loc">' +
                '<label>Select File Location</label>' +
                '<input type="text" class="cs-exc-sel-file-loc-val cs-truncate">' +
                '<label for=""class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur cs-excel-file-upload"><em class="icon-cs-folder-open cs-graylightc cs-ts-10"></em></label>'+
                '<input id="" type="file" class="cs-hide cs-excel-file-inp">' +
                '</div>' +
                '</div>' +
                '<div class="cs-cell-8">' +
                '<div class="cs-input cs-excel-act-refname">' +
                '<label>References Name</label>' +
                '<input type="text">' +
                '</div>' +
                '</div>' +
                `<div class="cs-cell-8">
                    <div class="clearfix cs-excel-act-chk-boc-hei">
                    <input type="checkbox" id="ex1" class="cs-excel-act-clearIne">
                    <label for="ex1" class="cs-blackc">Create if not exists</label>
                    </div>
                </div>` +
                `<div class="cs-cell-24f cs-bsmar">
                    <div class="cs-cell-8">
                    <div class="clearfix">
                    <input type="checkbox" id="ex2" class="cs-excel-act-saveChange">
                    <label for="ex2" class="cs-blackc">Save Changes</label>
                    </div>
                    </div>
                 </div>` +

                '</div>' +
                '</div>' +
                '</div>';
                    if($(event.target).find(".cs-drg-txt-box-par").find(".cs-activityBlock").length == 0){
                        $(event.target).find(".cs-drg-txt-box-par").html(" ");
                    }
                    var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-drg-txt-box-par .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-drg-txt-box-par"));
                        }
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csExcelAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            else if ($(ui.draggable).hasClass("cs-excel-manipulation-act")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-excel-manipulation-child cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Manipulation</div>' +
                `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-man-sel cs-select">
                    <select class="manupulationGroup">
                                    <option value="select1">Append Range</option>
                                    <option value="select2">Clear Sheet/Range/Table</option>
                                    <option value="select3">Copy/Paste Range</option>
                                    <option value="select4">Fill Range</option>
                                    <option value="select5">Find/Replace Value</option>
                    </select>
                    <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
                </div>
                `+
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-file-excel-o"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
                '<div class="clearfix">' +

                '<div class="cs-man-append-range-par cs-manupulation-common cs-tsmar">'+
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-man-append-exc-range">' +
                    '<label>Excel range to append</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-man-append-after-range">' +
                    '<label>Append after range</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    `<div class="cs-cell-8">
                        <div class="cs-input cs-man-append-what-copy">
                        <label>What to copy</label>
                        <select>
                            <option value="All">All</option>
                            <option value="Values">Values</option>
                            <option value="Formula">Formula</option>
                            <option value="Format">Format</option>
                        </select>
                        </div>
                    </div>` +
                    `<div class="cs-cell-24f cs-bsmar">
                        <div class="cs-cell-8">
                            <div class="clearfix">
                            <input type="checkbox" id="" class="cs-man-append-exclude-header">
                            <label for="" class="cs-blackc">Exclude Header</label>
                            </div>
                        </div>
                        <div class="cs-cell-8">
                        <div class="clearfix">
                        <input type="checkbox" id="" class="cs-man-append-transpose">
                        <label for="" class="cs-blackc">Transpose</label>
                        </div>
                        </div>
                    </div>` +
                '</div>'+
                `
                <div class="cs-man-clear-sheetrange-par cs-manupulation-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-sheetrange-clear">
                        <label>Range to clear</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="clearfix cs-man-act-chk-boc-hei">
                        <input type="checkbox" id="" class="cs-man-sheetrange-headers">
                        <label for="" class="cs-blackc">Has headers</label>
                        </div>
                    </div>
                </div>
                `+

                `
                <div class="cs-man-copypaste-range-par cs-manupulation-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-copypaste-destcell">
                        <label>Destination Cell</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-copypaste-destsheet">
                        <label>Destination sheet</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-copypaste-destsheetname">
                        <label>Sheet name</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-copypaste-destsheetrange">
                        <label>Sheet range</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-copypaste-what-copy">
                        <label>Copy items</label>
                        <select>
                            <option value="All">All</option>
                            <option value="Values">Values</option>
                            <option value="Formula">Formula</option>
                            <option value="Number format">Number format</option>
                            <option value="Cell Format">Cell Format</option>
                        </select>
                        </div>
                    </div>
                </div>
                `+
                `
                <div class="cs-man-fillrange-par cs-manupulation-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-fillrange-wheretowri">
                            <label>Where to write</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-fillrange-whattowri">
                            <label>What to write</label><input type="text">
                        </div>
                    </div>
                </div>
                `+
                `
                <div class="cs-man-findreplace-par cs-manupulation-common cs-tsmar cs-hide">
                <div class="cs-cell-8">
                        <div class="cs-input cs-man-findreplace-opr">
                        <label>Operation </label>
                        <select>
                            <option value="Find">Find</option>
                            <option value="Replace">Replace</option>
                            <option value="Replace all">Replace all</option>
                        </select>
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-findreplace-wheretoser">
                            <label>Where to search</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-findreplace-valuetofin">
                            <label>Value to find</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-findreplace-repwith">
                            <label>Replace with</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-findreplace-foundat">
                            <label>Found at</label><input type="text">
                        </div>
                    </div>
                </div>
                `+
                
                '</div>' +
                '</div>' +
                '</div>';
                    if($(event.target).find(".cs-drg-txt-box-par").find(".cs-activityBlock").length == 0){
                        $(event.target).find(".cs-drg-txt-box-par").html(" ");
                    }
                    var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-drg-txt-box-par .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-drg-txt-box-par"));
                        }
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csManupulationAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            else if ($(ui.draggable).hasClass("cs-excel-advanced-act")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-excel-advanced-act-child cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Advanced</div>' +
                `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-advanced-sel cs-select">
                    <select class="advancedGroup">
                                    <option value="select1">Create Pivot Table</option>
                                    <option value="select2">Lookup</option>
                                    <option value="select3">Run Spreadsheet Macro</option>
                                    <option value="select4">Invoke VBA</option>
                    </select>
                    <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
                </div>
                `+
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-file-excel-o"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
                '<div class="clearfix">' +

                '<div class="cs-advanced-creatr-pivot-par cs-Advanced-common cs-tsmar">'+
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-advanced-source-inp">' +
                    '<label>Source</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-advanced-newtable-name">' +
                    '<label>New table name</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-advanced-destination">' +
                    '<label>Destination</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    `
                    <div class="cs-cell-24f">
                    <div class="cs-flex cs-row-between">
                        <div class="cs-column-middle cs-flex cs-lmar">
                            <span class="cs-lsmar cs-tw-600">Pivot Fields</span>
                            <span class="cs-badge cs-badge-info cs-lsmar">03</span>
                        </div>
                        <div class="cs-rmar"><div class="cs-btn cs-btn-primary cs-btn-sm cs-ts-12">Add Pivot Field</div></div>
                    </div>
                    </div>
                    <div class="cs-advanced-pivotField-par">
                        <div class="cs-advanced-pivotField-list cs-cell-24f">
                            <div class="cs-cell-8">
                                <div class="cs-input cs-advanced-Field">
                                <label>Field</label><input type="text">
                            </div>
                            </div>
                            <div class="cs-cell-8">
                                <div class="cs-input cs-advanced-Isa">
                                <label>Is a</label>
                                <select>
                                    <option value="Row">Row</option>
                                    <option value="Column">Column</option>
                                    <option value="Value">Value</option>
                                    <option value="Filter">Filter</option>
                                </select>
                                </div> 
                            </div>
                            <div class="cs-cell-3f cs-flex cs-advanced-pivotField-del-add-sty">
                                <div class="cs-lmar">
                                    <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur"><i class="icon-cs-delete"></i></span>
                                    <span class="cs-cur cs-inline cs-remove-activity-datatable-add cs-rsmar cs-tsmar"><i class="icon-cs-new"></i></span>
                                </div>                        
                            </div>
                        </div>
                    </div>
                    `+
                '</div>'+ 

                `<div class="cs-advanced-Lookup-par cs-Advanced-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-lookup-vtl">
                        <label>Value to lookup</label><input type="text">
                        <span class="cs-bluec cs-cur cs-lookup cs-open-modal cs-r"><i class="icon-cs-search"></i></span>
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-lookup-range">
                        <label>Range</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-lookup-sor">
                        <label>Source of results</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-lookup-result">
                        <label>Result</label><input type="text">
                    </div>
                    </div>
                </div>
                

                <div class="cs-advanced-runspreadsheetmacro-par cs-Advanced-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-runspreadsheetmacro-swbook">
                        <label>Source workbook</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-runspreadsheetmacro-mname">
                        <label>Macro name</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-runspreadsheetmacro-outto">
                        <label>Output to </label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-runspreadsheetmacro-addmacarg">
                        <label>Add Macro Argument</label><input type="text">
                    </div>
                    </div>
                </div>
                
                <div class="cs-advanced-InvokeVBA-par cs-Advanced-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-InvokeVBA-cfp">
                            <label>Code file path</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-InvokeVBA-emn">
                            <label>Entry method name</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-InvokeVBA-emp">
                            <label>Entry method parameter</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-InvokeVBA-ov">
                            <label>Output value</label><input type="text">
                        </div>
                    </div>
                </div>
                
                `+
                
                '</div>' +
                '</div>' +
                '</div>';
                    if($(event.target).find(".cs-drg-txt-box-par").find(".cs-activityBlock").length == 0){
                        $(event.target).find(".cs-drg-txt-box-par").html(" ");
                    }
                    var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-drg-txt-box-par .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-drg-txt-box-par"));
                        }
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csAdvancedAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            else if ($(ui.draggable).hasClass("cs-excel-delete-act")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-excel-delete-child cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Delete</div>' +
                `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-delete-sel cs-select">
                    <select class="deleteGroup">
                                    <option value="select1">Delete Column</option>
                                    <option value="select2">Delete Rows</option>
                                    <option value="select3">Delete Sheet</option>
                    </select>
                    <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
                </div>
                `+
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-file-excel-o"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
                '<div class="clearfix">' +

                '<div class="cs-delete-column-par cs-delete-common cs-tsmar">'+
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-delete-source">' +
                    '<label>Source</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-delete-column-name">' +
                    '<label>Column name</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    `<div class="cs-cell-8">
                        <div class="clearfix cs-delete-act-chk-boc-hei">
                        <input type="checkbox" id="" class="cs-delete-column-has-header">
                        <label for="" class="cs-blackc">Has Header</label>
                        </div>
                    </div>` +
                '</div>'+
                `
                <div class="cs-delete-rows-par cs-delete-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-delete-rows-iwtor">
                        <label>In what table or range</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-delete-rows-whattodel">
                        <label>What to delete</label>
                        <select>
                            <option value="Specific rows">Specific rows</option>
                            <option value="All visible rows">All visible rows</option>
                            <option value="All duplicate rows">All duplicate rows</option>
                            <option value="All hidden rows">All hidden rows</option>
                        </select>
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-delete-rows-atpos">
                        <label>At position</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8 cs-bsmar">
                        <div class="clearfix">
                        <input type="checkbox" id="" class="cs-delete-rows-has-headers">
                        <label for="" class="cs-blackc">Has headers</label>
                        </div>
                    </div>
                </div>
                `+

                `
                <div class="cs-delete-sheet-par cs-delete-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-delete-sheet-select">
                        <label>Select sheet</label><input type="text">
                    </div>
                    </div>
                </div>
                `+
                
                '</div>' +
                '</div>' +
                '</div>';
                    if($(event.target).find(".cs-drg-txt-box-par").find(".cs-activityBlock").length == 0){
                        $(event.target).find(".cs-drg-txt-box-par").html(" ");
                    }
                    var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-drg-txt-box-par .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-drg-txt-box-par"));
                        }
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csDeleteAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            else if ($(ui.draggable).hasClass("cs-excel-filter-act")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-excel-filter-act-child cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Filter</div>' +
                `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-filter-sel cs-select">
                    <select class="filterGroup">
                                    <option value="select1">Filter</option>
                                    <option value="select2">Filter Pivot Table</option>
                    </select>
                    <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
                </div>
                `+
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-file-excel-o"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
                '<div class="clearfix">' +

                '<div class="cs-filter-par cs-filter-common cs-tsmar">'+
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-filter-source-inp">' +
                    '<label>Source</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-filter-column-name">' +
                    '<label>Column name</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    `
                    <div class="cs-cell-8">
                        <div class="clearfix cs-filter-act-chk-boc-hei">
                        <input type="checkbox" id="" class="cs-excel-filter-caef">
                        <label for="" class="cs-blackc">Clear any existing filter</label>
                        </div>
                    </div>
                    <div class="cs-cell-24f">
                        <div class="cs-flex cs-row-between">
                            <div class="cs-column-middle cs-flex cs-lmar">
                                <span class="cs-lsmar cs-tw-600">Basic Filter</span>
                                <span class="cs-badge cs-badge-info cs-lsmar">03</span>
                            </div>
                            <div class="cs-rmar"><div class="cs-btn cs-btn-primary cs-btn-sm cs-ts-12">Configure Filter</div></div>
                        </div>
                    </div>
                    <div class="cs-filter-BasicFilter-par">
                        <div class="cs-filter-pivotField-list cs-cell-24f">
                            <div class="cs-cell-8">
                                <div class="cs-input cs-filter-isEqTo">
                                <label>Is Equal to</label><input type="text">
                            </div>
                            </div>
                            <div class="cs-cell-3f cs-flex cs-filter-BasicFilter-del-add-sty">
                                <div class="cs-lmar">
                                    <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur"><i class="icon-cs-delete"></i></span>
                                    <span class="cs-cur cs-inline cs-remove-activity-datatable-add cs-rsmar cs-tsmar"><i class="icon-cs-new"></i></span>
                                </div>                        
                            </div>
                        </div>
                    </div>
                    `+
                '</div>'+ 

                `<div class="cs-filter-pivotTable-par cs-filter-common cs-tsmar cs-hide">
                    <div class="cs-cell-12">
                        <div class="cs-input cs-filter-pivotTable-sou">
                        <label>Source</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-12">
                        <div class="cs-input cs-filter-pivotTable-cname">
                        <label>Column name</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-12">
                        <div class="cs-rmar cs-pull-left cs-rpad"><div class="cs-btn cs-btn-primary cs-btn-sm cs-ts-12">Configure Filter</div></div>
                        <div class="clearfix">
                        <input type="checkbox" id="" class="cs-excel-filter-pivotTable-caef">
                        <label for="" class="cs-blackc">Clear any existing filter</label>
                        </div>
                    </div>
                    </div>
                </div>
                `+
                
                '</div>' +
                '</div>';
                    if($(event.target).find(".cs-drg-txt-box-par").find(".cs-activityBlock").length == 0){
                        $(event.target).find(".cs-drg-txt-box-par").html(" ");
                    }
                    var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-drg-txt-box-par .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-drg-txt-box-par"));
                        }
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csFilterAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            else if ($(ui.draggable).hasClass("cs-excel-read-act")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-aparent cs-at-layoutcontroweach dropAcrive cs-excel-read-act-child cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Read</div>' +
                `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-read-sel cs-select">
                    <select class="readGroup">
                                    <option value="select1">For Each Excel Row</option>
                                    <option value="select2">Read Cell Formula/Table</option>
                                    <option value="select3">Read Cell Value</option>
                                    <option value="select4">Read Range</option>
                    </select>
                    <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
                </div>
                `+
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-file-excel-o"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
                '<div class="clearfix">' +

                '<div class="cs-read-forEacExcelRow-par cs-read-common cs-tsmar">'+
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-read-forEacExcelRow-fe">' +
                    '<label>For each</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    `<div class="cs-cell-8">
                        <div class="cs-input cs-read-forEacExcelRow-Ir">
                        <label>In range</label>
                        <select>
                            <option value="table">table</option>
                            <option value="sheet to use">sheet to use</option>
                        </select>
                        </div>
                    </div>` +
                    `<div class="cs-cell-8">
                        <div class="cs-input cs-read-forEacExcelRow-erb">
                        <label>Empty Row Behavior</label>
                        <select>
                            <option value="StopAfterThreeConsecutiveEmptyRows">StopAfterThreeConsecutiveEmptyRows</option>
                            <option value="Stop">Stop</option>
                            <option value="Skip">Skip</option>
                            <option value="Process">Process</option>
                        </select>
                        </div>
                    </div>` +
                    `<div class="cs-cell-24f cs-bsmar">
                        <div class="cs-cell-8">
                            <div class="clearfix">
                            <input type="checkbox" id="" class="cs-read-forEacExcelRow-hh">
                            <label for="" class="cs-blackc">Has Hader</label>
                            </div>
                        </div>
                        <div class="cs-cell-8">
                        <div class="clearfix">
                        <input type="checkbox" id="" class="cs-read-forEacExcelRow-saer">
                        <label for="" class="cs-blackc">Save after each row</label>
                        </div>
                        </div>
                    </div>` +
                    `
                    <div class="cs-cell-24f">
                        <div class="cs-bg-bdy-clr cs-pad cs-tmar">Body</div>
                        <div class="cs-read-drop-area cs-line cs-pad-sm">
                            <div class="cs-line-das cs-pad cs-tc">Drag and drop your excel function only...</div>
                        </div>
                    </div>
                    `+
                '</div>'+
                `
                <div class="cs-read-readCellFormula-par cs-read-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-read-readCellFormula-cell">
                        <label>Cell</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-read-readCellFormula-saveto">
                        <label>Save to</label><input type="text">
                    </div>
                    </div>
                </div>
                `+

                `
                <div class="cs-read-readCellValue-par cs-read-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-read-readCellValue-cell">
                        <label>Cell</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-read-readCellValue-saveto">
                        <label>Save to</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-read-readCellValue-getFtext">
                        <label>Get formatted text</label><input type="text">
                    </div>
                    </div>
                </div>
                `+
                `
                <div class="cs-read-readRange-par cs-read-common cs-tsmar cs-hide">
                        <div class="cs-cell-8">
                            <div class="cs-input cs-read-readRange-range">
                                <label>Range</label><input type="text">
                            </div>
                        </div>
                        <div class="cs-cell-8">
                            <div class="clearfix cs-read-act-chk-boc-hei">
                            <input type="checkbox" id="" class="cs-read-readRange-headers">
                            <label for="" class="cs-blackc">Has headers</label>
                            </div>
                        </div>
                        <div class="cs-cell-8">
                            <div class="clearfix cs-read-act-chk-boc-hei">
                            <input type="checkbox" id="" class="cs-read-readRange-vro">
                            <label for="" class="cs-blackc">Visible rows only</label>
                            </div>
                        </div>
                        <div class="cs-cell-24f">
                            <div class="cs-cell-8">
                                <div class="cs-input cs-read-readRange-saveto">
                                    <label>Save to</label><input type="text">
                                </div>
                            </div>
                        </div>
                </div>
                `+
              
                
                '</div>' +
                '</div>' +
                '</div>';
                    if($(event.target).find(".cs-drg-txt-box-par").find(".cs-activityBlock").length == 0){
                        $(event.target).find(".cs-drg-txt-box-par").html(" ");
                    }
                    var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-drg-txt-box-par .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-drg-txt-box-par"));
                        }
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csReadAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }   
            else if ($(ui.draggable).hasClass("cs-excel-chart-act")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-excel-chart-child cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Chart</div>' +
                `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-chart-sel cs-select">
                    <select class="chartGroup">
                                    <option value="select1">Get Excel Chart</option>
                                    <option value="select2">Insert Chart</option>
                    </select>
                    <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
                </div>
                `+
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-file-excel-o"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
                '<div class="clearfix">' +

                '<div class="cs-chart-getExcel-par cs-chart-common cs-tsmar">'+
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-chart-cval">' +
                    '<label>Chart</label>' +
                    '<input type="text" placeholder="Select the file">' +
                    '</div>' +
                    '</div>' +
                    `<div class="cs-cell-8">
                        <div class="cs-input cs-chart-action">
                        <label>Action</label>
                        <select>
                            <option value="Copy to clipboard">Copy to clipboard</option>
                            <option value="Save as picture">Save as picture</option>
                        </select>
                        </div>
                    </div>` +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-chart-filename">' +
                    '<label>File Name</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    `<div class="cs-cell-24f cs-bsmar">
                        <div class="cs-cell-8">
                            <div class="clearfix">
                            <input type="checkbox" id="" class="cs-chart-replaceexistingfile">
                            <label for="" class="cs-blackc">Replace existing file</label>
                            </div>
                        </div>
                    </div>` +
                '</div>'+
               
                `
                <div class="cs-chart-insert-par cs-chart-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-chart-cCatagory">
                        <label>Chart category</label>
                        <select>
                            <option value="Area">Area</option>
                            <option value="Bar">Bar</option>
                            <option value="Pie">Pie</option>
                            <option value="Scatter">Scatter</option>
                        </select>
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-chart-cType">
                        <label>Chart type</label>
                        <select>
                            <option value="Stacked Area">Stacked Area</option>
                            <option value="Clustered Bar">Clustered Bar</option>
                            <option value="Pie Doughnut">Pie Doughnut</option>
                            <option value="Scatter with Straight Lines">Scatter with Straight Lines</option>
                        </select>
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-chart-dataRange">
                            <label>Data range</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-chart-iisheet">
                            <label>Insert into sheet</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-chart-scTo">
                            <label>Save Chart to</label><input type="text">
                        </div>
                    </div>
                </div>
                `+
                
                '</div>' +
                '</div>' +
                '</div>';
                    if($(event.target).find(".cs-drg-txt-box-par").find(".cs-activityBlock").length == 0){
                        $(event.target).find(".cs-drg-txt-box-par").html(" ");
                    }
                    var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-drg-txt-box-par .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-drg-txt-box-par"));
                        }
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csChartAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            else if ($(ui.draggable).hasClass("cs-excel-insert-act")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-excel-insert-child cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Insert</div>' +
                `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-insert-sel cs-select">
                    <select class="insertGroup">
                                    <option value="select1">Insert Column</option>
                                    <option value="select2">Insert Rows</option>
                                    <option value="select3">Insert Sheet</option>
                    </select>
                    <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
                </div>
                `+
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-file-excel-o"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
                '<div class="clearfix">' +

                '<div class="cs-insert-Col-par cs-insert-common cs-tsmar">'+
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-insertCol-range">' +
                    '<label>Range</label>' +
                    '<input type="text" placeholder="Select the file">' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-insertCol-rtCol">' +
                    '<label>Relative to column</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    `<div class="cs-cell-8">
                        <div class="cs-input cs-insertCol-Where">
                        <label>Where</label>
                        <select>
                            <option value="Before">Before</option>
                            <option value="After">After</option>
                        </select>
                        </div>
                    </div>` +
                    `<div class="cs-cell-24f cs-bsmar">
                        <div class="cs-cell-8">
                        <div class="cs-input cs-insertCol-addHead">
                        <label>Add header</label>
                        <input type="text">
                        </div>
                        </div>
                        <div class="cs-cell-8">
                            <div class="cs-input cs-insertCol-FDAT">
                            <label>Format data as type</label>
                            <select>
                                <option value="General">General</option>
                                <option value="Number">Number</option>
                                <option value="Date">Date</option>
                                <option value="Time">Time</option>
                                <option value="Percentage">Percentage</option>
                                <option value="Currency">Currency</option>
                                <option value="Text">Text</option>
                            </select>
                            </div>
                        </div>
                        <div class="cs-cell-8">
                            <div class="clearfix cs-insert-act-chk-boc-hei">
                            <input type="checkbox" id="" class="cs-insertCol-hasHead">
                            <label for="" class="cs-blackc">Has Header</label>
                            </div>
                        </div>
                    </div>` +
                '</div>'+
                `
                <div class="cs-insert-Rows-par cs-insert-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                    <div class="cs-input cs-insertRows-iwtor">
                    <label>In what table or range</label>
                    <input type="text" placeholder="Select the file">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                    <div class="cs-input cs-insertRows-nor">
                    <label>Number of rows</label>
                    <input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-insertRows-where">
                        <label>Where</label>
                        <select>
                            <option value="End">End</option>
                            <option value="Start">Start</option>
                            <option value="Specific index">Specific index</option>
                        </select>
                        </div>
                    </div>
                    <div class="cs-cell-24f cs-bsmar">
                        <div class="cs-cell-8">
                            <div class="clearfix">
                            <input type="checkbox" id="" class="cs-insertRows-hasHead">
                            <label for="" class="cs-blackc">Has header</label>
                            </div>
                        </div>
                    </div>
                </div>
                `+
               
                `
                <div class="cs-insert-Sheet-par cs-insert-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-insertSheet-ciw">
                            <label>Create in workbook</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-insertSheet-sName">
                            <label>Sheet name</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-insertSheet-rnsa">
                            <label>Reference new sheet as</label><input type="text">
                        </div>
                    </div>
                </div>
                `+
                
                '</div>' +
                '</div>' +
                '</div>';
                    if($(event.target).find(".cs-drg-txt-box-par").find(".cs-activityBlock").length == 0){
                        $(event.target).find(".cs-drg-txt-box-par").html(" ");
                    }
                    var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-drg-txt-box-par .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-drg-txt-box-par"));
                        }
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csInsertAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            else if ($(ui.draggable).hasClass("cs-excel-save-act")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-excel-save-child cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Save</div>' +
                `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-Save-sel cs-select">
                    <select class="saveGroup">
                                    <option value="select1">Save Excel File As</option>
                                    <option value="select2">Save Excel File</option>
                                    <option value="select3">Save Excel File As PDF</option>
                    </select>
                    <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
                </div>
                `+
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-file-excel-o"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
                '<div class="clearfix">' +

                '<div class="cs-SaveExcelFileAs-par cs-Save-common cs-tsmar">'+
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-SaveExcelFileAs-wBook">' +
                    '<label>Workbook</label>' +
                    '<input type="text" placeholder="Select the file">' +
                    '</div>' +
                    '</div>' +
                    `<div class="cs-cell-8">
                        <div class="cs-input cs-SaveExcelFileAs-SAT">
                        <label>Save as type</label>
                        <select>
                            <option value="Excel Workbook (.xlsx)">Excel Workbook (.xlsx)</option>
                            <option value="Excel Binary Workbook (.xlsb)">Excel Binary Workbook (.xlsb)</option>
                            <option value="Excel Macro Enabled Workbook (.xlsm)">Excel Macro Enabled Workbook (.xlsm)</option>
                            <option value="or Excel 97-2003 Workbook (.xls)">or Excel 97-2003 Workbook (.xls)</option>
                        </select>
                        </div>
                    </div>` +
                    `<div class="cs-cell-8">
                        <div class="cs-input cs-SaveExcelFileAs-SAF">
                        <label>Save as file</label>
                        <input type="text">
                    </div>
                    </div>`+
                    `<div class="cs-cell-24f cs-bsmar">
                        <div class="cs-cell-8">
                        <div class="cs-input cs-SaveExcelFileAs-fileName">
                        <label>File Name</label>
                        <input type="text">
                        </div>
                        </div>
                        <div class="cs-cell-8">
                            <div class="clearfix cs-save-act-chk-boc-hei">
                            <input type="checkbox" id="" class="cs-SaveExcelFileAs-RE">
                            <label for="" class="cs-blackc">Replace existing</label>
                            </div>
                        </div>
                    </div>` +
                '</div>'+
                `
                <div class="cs-SaveExcelFile-par cs-Save-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                    <div class="cs-input cs-SaveExcelFile-File ">
                    <label>File </label>
                    <input type="text" placeholder="Select the file">
                    </div>
                    </div>
                </div>
                `+
               
                `
                <div class="cs-SaveExcelFileAsPDF-par cs-Save-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-SaveExcelFileAsPDF-wBook">
                            <label>Workbook </label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-SaveExcelFileAsPDF-SAF">
                            <label>Sheet name</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                            <div class="clearfix cs-save-act-chk-boc-hei">
                            <input type="checkbox" id="" class="cs-SaveExcelFileAsPDF-RE">
                            <label for="" class="cs-blackc">Replace existing</label>
                            </div>
                    </div>
                </div>
                `+
                
                '</div>' +
                '</div>' +
                '</div>';
                    if($(event.target).find(".cs-drg-txt-box-par").find(".cs-activityBlock").length == 0){
                        $(event.target).find(".cs-drg-txt-box-par").html(" ");
                    }
                    var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-drg-txt-box-par .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-drg-txt-box-par"));
                        }
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csSaveAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            else if ($(ui.draggable).hasClass("cs-excel-write-act")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-excel-write-child cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Write</div>' +
                `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-write-sel cs-select">
                    <select class="writeGroup">
                                    <option value="select1">DataTable to Excel</option>
                                    <option value="select2">Write Cell</option>
                    </select>
                    <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
                </div>
                `+
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-file-excel-o"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
                '<div class="clearfix">' +

                `<div class="cs-write-DataTabletoExcel-par cs-write-common cs-tsmar">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-WriteDataTab-wtw">
                        <label>What to write</label>
                        <input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-WriteDataTab-dest">
                        <label>Destination</label>
                        <input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="clearfix cs-write-act-chk-boc-hei">
                        <input type="checkbox" id="" class="cs-WriteDataTab-append">
                        <label for="" class="cs-blackc">Append</label>
                        </div>
                    </div> 
                    <div class="cs-cell-24f cs-bsmar">
                        <div class="cs-cell-8">
                        <div class="clearfix">
                        <input type="checkbox" id="" class="cs-WriteDataTab-Eheader">
                        <label for="" class="cs-blackc">Exclude header</label>
                        </div>
                        </div>
                    </div>
                </div>
               
                
                <div class="cs-write-WriteCell-par cs-write-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-writeWC-whattow">
                        <label>What to write</label>
                        <input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-writeWC-wheretow">
                        <label>Where to write</label>
                        <input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="clearfix cs-write-act-chk-boc-hei">
                        <input type="checkbox" id="" class="cs-writeWC-autoIncRow">
                        <label for="" class="cs-blackc">Auto increment row</label>
                        </div>
                    </div> 
                </div>
                `+
                
                '</div>' +
                '</div>' +
                '</div>';
                    if($(event.target).find(".cs-drg-txt-box-par").find(".cs-activityBlock").length == 0){
                        $(event.target).find(".cs-drg-txt-box-par").html(" ");
                    }
                    var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-drg-txt-box-par .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-drg-txt-box-par"));
                        }
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csWriteAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            excelReadDroppable();
            dynaIdCheckBox();
        }
    });
}
function excelReadDroppable() {
    $(".cs-excel-read-act-child").droppable({
        activeClass: "ui-state-default",
        hoverClass: "ui-drop-hover",
        accept: ":not(.ui-sortable-helper)",
        greedy: "greedy",
        over: function(event, ui) {
            var $this = $(this);
        },
        drop: function(event, ui) {
            console.log(event);
            if ($(ui.draggable).hasClass("cs-excel-act")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-excel-act-child cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Excel File</div>' +
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-file-excel-o"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
                '<div class="clearfix">' +

                '<div class="cs-cell-8">' +
                '<div class="cs-input cs-pr cs-excel-act-file-loc">' +
                '<label>Select File Location</label>' +
                '<input type="text" class="cs-exc-sel-file-loc-val cs-truncate">' +
                '<label for=""class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur cs-excel-file-upload"><em class="icon-cs-folder-open cs-graylightc cs-ts-10"></em></label>'+
                '<input id="" type="file" class="cs-hide cs-excel-file-inp">' +
                '</div>' +
                '</div>' +
                '<div class="cs-cell-8">' +
                '<div class="cs-input cs-excel-act-refname">' +
                '<label>References Name</label>' +
                '<input type="text">' +
                '</div>' +
                '</div>' +
                `<div class="cs-cell-8">
                    <div class="clearfix cs-excel-act-chk-boc-hei">
                    <input type="checkbox" id="ex1" class="cs-excel-act-clearIne">
                    <label for="ex1" class="cs-blackc">Create if not exists</label>
                    </div>
                </div>` +
                `<div class="cs-cell-24f cs-bsmar">
                    <div class="cs-cell-8">
                    <div class="clearfix">
                    <input type="checkbox" id="ex2" class="cs-excel-act-saveChange">
                    <label for="ex2" class="cs-blackc">Save Changes</label>
                    </div>
                    </div>
                 </div>` +

                '</div>' +
                '</div>' +
                '</div>';
                    if($(event.target).find(".cs-read-drop-area").find(".cs-activityBlock").length == 0){
                        $(event.target).find(".cs-read-drop-area").html(" ");
                    }
                    var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-read-drop-area .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-read-drop-area"));
                        }
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csExcelAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                    excelReadDroppable();
            }
            else if ($(ui.draggable).hasClass("cs-excel-manipulation-act")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-excel-manipulation-child cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Manipulation</div>' +
                `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-man-sel cs-select">
                    <select class="manupulationGroup">
                                    <option value="select1">Append Range</option>
                                    <option value="select2">Clear Sheet/Range/Table</option>
                                    <option value="select3">Copy/Paste Range</option>
                                    <option value="select4">Fill Range</option>
                                    <option value="select5">Find/Replace Value</option>
                    </select>
                    <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
                </div>
                `+
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-file-excel-o"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
                '<div class="clearfix">' +

                '<div class="cs-man-append-range-par cs-manupulation-common cs-tsmar">'+
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-man-append-exc-range">' +
                    '<label>Excel range to append</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-man-append-after-range">' +
                    '<label>Append after range</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    `<div class="cs-cell-8">
                        <div class="cs-input cs-man-append-what-copy">
                        <label>What to copy</label>
                        <select>
                            <option value="All">All</option>
                            <option value="Values">Values</option>
                            <option value="Formula">Formula</option>
                            <option value="Format">Format</option>
                        </select>
                        </div>
                    </div>` +
                    `<div class="cs-cell-24f cs-bsmar">
                        <div class="cs-cell-8">
                            <div class="clearfix">
                            <input type="checkbox" id="" class="cs-man-append-exclude-header">
                            <label for="" class="cs-blackc">Exclude Header</label>
                            </div>
                        </div>
                        <div class="cs-cell-8">
                        <div class="clearfix">
                        <input type="checkbox" id="" class="cs-man-append-transpose">
                        <label for="" class="cs-blackc">Transpose</label>
                        </div>
                        </div>
                    </div>` +
                '</div>'+
                `
                <div class="cs-man-clear-sheetrange-par cs-manupulation-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-sheetrange-clear">
                        <label>Range to clear</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="clearfix cs-man-act-chk-boc-hei">
                        <input type="checkbox" id="" class="cs-man-sheetrange-headers">
                        <label for="" class="cs-blackc">Has headers</label>
                        </div>
                    </div>
                </div>
                `+

                `
                <div class="cs-man-copypaste-range-par cs-manupulation-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-copypaste-destcell">
                        <label>Destination Cell</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-copypaste-destsheet">
                        <label>Destination sheet</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-copypaste-destsheetname">
                        <label>Sheet name</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-copypaste-destsheetrange">
                        <label>Sheet range</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-copypaste-what-copy">
                        <label>Copy items</label>
                        <select>
                            <option value="All">All</option>
                            <option value="Values">Values</option>
                            <option value="Formula">Formula</option>
                            <option value="Number format">Number format</option>
                            <option value="Cell Format">Cell Format</option>
                        </select>
                        </div>
                    </div>
                </div>
                `+
                `
                <div class="cs-man-fillrange-par cs-manupulation-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-fillrange-wheretowri">
                            <label>Where to write</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-fillrange-whattowri">
                            <label>What to write</label><input type="text">
                        </div>
                    </div>
                </div>
                `+
                `
                <div class="cs-man-findreplace-par cs-manupulation-common cs-tsmar cs-hide">
                <div class="cs-cell-8">
                        <div class="cs-input cs-man-findreplace-opr">
                        <label>Operation </label>
                        <select>
                            <option value="Find">Find</option>
                            <option value="Replace">Replace</option>
                            <option value="Replace all">Replace all</option>
                        </select>
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-findreplace-wheretoser">
                            <label>Where to search</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-findreplace-valuetofin">
                            <label>Value to find</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-findreplace-repwith">
                            <label>Replace with</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-man-findreplace-foundat">
                            <label>Found at</label><input type="text">
                        </div>
                    </div>
                </div>
                `+
                
                '</div>' +
                '</div>' +
                '</div>';
                if($(event.target).find(".cs-read-drop-area").find(".cs-activityBlock").length == 0){
                    $(event.target).find(".cs-read-drop-area").html(" ");
                }
                var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-read-drop-area .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-read-drop-area"));
                        }
                    }
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csManupulationAct");
                $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                excelReadDroppable();
            }
            else if ($(ui.draggable).hasClass("cs-excel-advanced-act")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-excel-advanced-act-child cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Advanced</div>' +
                `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-advanced-sel cs-select">
                    <select class="advancedGroup">
                                    <option value="select1">Create Pivot Table</option>
                                    <option value="select2">Lookup</option>
                                    <option value="select3">Run Spreadsheet Macro</option>
                                    <option value="select4">Invoke VBA</option>
                    </select>
                    <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
                </div>
                `+
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-file-excel-o"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
                '<div class="clearfix">' +

                '<div class="cs-advanced-creatr-pivot-par cs-Advanced-common cs-tsmar">'+
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-advanced-source-inp">' +
                    '<label>Source</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-advanced-newtable-name">' +
                    '<label>New table name</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-advanced-destination">' +
                    '<label>Destination</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    `
                    <div class="cs-cell-24f">
                    <div class="cs-flex cs-row-between">
                        <div class="cs-column-middle cs-flex cs-lmar">
                            <span class="cs-lsmar cs-tw-600">Pivot Fields</span>
                            <span class="cs-badge cs-badge-info cs-lsmar">03</span>
                        </div>
                        <div class="cs-rmar"><div class="cs-btn cs-btn-primary cs-btn-sm cs-ts-12">Add Pivot Field</div></div>
                    </div>
                    </div>
                    <div class="cs-advanced-pivotField-par">
                        <div class="cs-advanced-pivotField-list cs-cell-24f">
                            <div class="cs-cell-8">
                                <div class="cs-input cs-advanced-Field">
                                <label>Field</label><input type="text">
                            </div>
                            </div>
                            <div class="cs-cell-8">
                                <div class="cs-input cs-advanced-Isa">
                                <label>Is a</label>
                                <select>
                                    <option value="Row">Row</option>
                                    <option value="Column">Column</option>
                                    <option value="Value">Value</option>
                                    <option value="Filter">Filter</option>
                                </select>
                                </div> 
                            </div>
                            <div class="cs-cell-3f cs-flex cs-advanced-pivotField-del-add-sty">
                                <div class="cs-lmar">
                                    <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur"><i class="icon-cs-delete"></i></span>
                                    <span class="cs-cur cs-inline cs-remove-activity-datatable-add cs-rsmar cs-tsmar"><i class="icon-cs-new"></i></span>
                                </div>                        
                            </div>
                        </div>
                    </div>
                    `+
                '</div>'+ 

                `<div class="cs-advanced-Lookup-par cs-Advanced-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-lookup-vtl">
                        <label>Value to lookup</label><input type="text">
                        <span class="cs-bluec cs-cur cs-lookup cs-open-modal cs-r"><i class="icon-cs-search"></i></span>
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-lookup-range">
                        <label>Range</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-lookup-sor">
                        <label>Source of results</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-lookup-result">
                        <label>Result</label><input type="text">
                    </div>
                    </div>
                </div>
                

                <div class="cs-advanced-runspreadsheetmacro-par cs-Advanced-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-runspreadsheetmacro-swbook">
                        <label>Source workbook</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-runspreadsheetmacro-mname">
                        <label>Macro name</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-runspreadsheetmacro-outto">
                        <label>Output to </label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-runspreadsheetmacro-addmacarg">
                        <label>Add Macro Argument</label><input type="text">
                    </div>
                    </div>
                </div>
                
                <div class="cs-advanced-InvokeVBA-par cs-Advanced-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-InvokeVBA-cfp">
                            <label>Code file path</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-InvokeVBA-emn">
                            <label>Entry method name</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-InvokeVBA-emp">
                            <label>Entry method parameter</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-advanced-InvokeVBA-ov">
                            <label>Output value</label><input type="text">
                        </div>
                    </div>
                </div>
                
                `+
                
                '</div>' +
                '</div>' +
                '</div>';
                if($(event.target).find(".cs-read-drop-area").find(".cs-activityBlock").length == 0){
                    $(event.target).find(".cs-read-drop-area").html(" ");
                }
                var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-read-drop-area .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-read-drop-area"));
                        }
                    }
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csAdvancedAct");
                $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                excelReadDroppable();
            }
            else if ($(ui.draggable).hasClass("cs-excel-delete-act")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-excel-delete-child cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Delete</div>' +
                `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-delete-sel cs-select">
                    <select class="deleteGroup">
                                    <option value="select1">Delete Column</option>
                                    <option value="select2">Delete Rows</option>
                                    <option value="select3">Delete Sheet</option>
                    </select>
                    <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
                </div>
                `+
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-file-excel-o"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
                '<div class="clearfix">' +

                '<div class="cs-delete-column-par cs-delete-common cs-tsmar">'+
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-delete-source">' +
                    '<label>Source</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-delete-column-name">' +
                    '<label>Column name</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    `<div class="cs-cell-8">
                        <div class="clearfix cs-delete-act-chk-boc-hei">
                        <input type="checkbox" id="" class="cs-delete-column-has-header">
                        <label for="" class="cs-blackc">Has Header</label>
                        </div>
                    </div>` +
                '</div>'+
                `
                <div class="cs-delete-rows-par cs-delete-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-delete-rows-iwtor">
                        <label>In what table or range</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-delete-rows-whattodel">
                        <label>What to delete</label>
                        <select>
                            <option value="Specific rows">Specific rows</option>
                            <option value="All visible rows">All visible rows</option>
                            <option value="All duplicate rows">All duplicate rows</option>
                            <option value="All hidden rows">All hidden rows</option>
                        </select>
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-delete-rows-atpos">
                        <label>At position</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8 cs-bsmar">
                        <div class="clearfix">
                        <input type="checkbox" id="" class="cs-delete-rows-has-headers">
                        <label for="" class="cs-blackc">Has headers</label>
                        </div>
                    </div>
                </div>
                `+

                `
                <div class="cs-delete-sheet-par cs-delete-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-delete-sheet-select">
                        <label>Select sheet</label><input type="text">
                    </div>
                    </div>
                </div>
                `+
                
                '</div>' +
                '</div>' +
                '</div>';
                if($(event.target).find(".cs-read-drop-area").find(".cs-activityBlock").length == 0){
                    $(event.target).find(".cs-read-drop-area").html(" ");
                }
                var i = 0;
                if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).find('.cs-read-drop-area .cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore(this);
                            i = 1;  
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo($(event.target).find(".cs-read-drop-area"));
                    }
                }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csDeleteAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                    excelReadDroppable();
            }
            else if ($(ui.draggable).hasClass("cs-excel-filter-act")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-excel-filter-act-child cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Filter</div>' +
                `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-filter-sel cs-select">
                    <select class="filterGroup">
                                    <option value="select1">Filter</option>
                                    <option value="select2">Filter Pivot Table</option>
                    </select>
                    <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
                </div>
                `+
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-file-excel-o"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
                '<div class="clearfix">' +

                '<div class="cs-filter-par cs-filter-common cs-tsmar">'+
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-filter-source-inp">' +
                    '<label>Source</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-filter-column-name">' +
                    '<label>Column name</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    `
                    <div class="cs-cell-8">
                        <div class="clearfix cs-filter-act-chk-boc-hei">
                        <input type="checkbox" id="" class="cs-excel-filter-caef">
                        <label for="" class="cs-blackc">Clear any existing filter</label>
                        </div>
                    </div>
                    <div class="cs-cell-24f">
                        <div class="cs-flex cs-row-between">
                            <div class="cs-column-middle cs-flex cs-lmar">
                                <span class="cs-lsmar cs-tw-600">Basic Filter</span>
                                <span class="cs-badge cs-badge-info cs-lsmar">03</span>
                            </div>
                            <div class="cs-rmar"><div class="cs-btn cs-btn-primary cs-btn-sm cs-ts-12">Configure Filter</div></div>
                        </div>
                    </div>
                    <div class="cs-filter-BasicFilter-par">
                        <div class="cs-filter-pivotField-list cs-cell-24f">
                            <div class="cs-cell-8">
                                <div class="cs-input cs-filter-isEqTo">
                                <label>Is Equal to</label><input type="text">
                            </div>
                            </div>
                            <div class="cs-cell-3f cs-flex cs-filter-BasicFilter-del-add-sty">
                                <div class="cs-lmar">
                                    <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur"><i class="icon-cs-delete"></i></span>
                                    <span class="cs-cur cs-inline cs-remove-activity-datatable-add cs-rsmar cs-tsmar"><i class="icon-cs-new"></i></span>
                                </div>                        
                            </div>
                        </div>
                    </div>
                    `+
                '</div>'+ 

                `<div class="cs-filter-pivotTable-par cs-filter-common cs-tsmar cs-hide">
                    <div class="cs-cell-12">
                        <div class="cs-input cs-filter-pivotTable-sou">
                        <label>Source</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-12">
                        <div class="cs-input cs-filter-pivotTable-cname">
                        <label>Column name</label><input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-12">
                        <div class="cs-rmar cs-pull-left cs-rpad"><div class="cs-btn cs-btn-primary cs-btn-sm cs-ts-12">Configure Filter</div></div>
                        <div class="clearfix">
                        <input type="checkbox" id="" class="cs-excel-filter-pivotTable-caef">
                        <label for="" class="cs-blackc">Clear any existing filter</label>
                        </div>
                    </div>
                    </div>
                </div>
                `+
                
                '</div>' +
                '</div>';
                if($(event.target).find(".cs-read-drop-area").find(".cs-activityBlock").length == 0){
                    $(event.target).find(".cs-read-drop-area").html(" ");
                }
                var i = 0;
                if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).find('.cs-read-drop-area .cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore(this);
                            i = 1;  
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo($(event.target).find(".cs-read-drop-area"));
                    }
                }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csFilterAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                    excelReadDroppable();
            }
            else if ($(ui.draggable).hasClass("cs-excel-chart-act")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-excel-chart-child cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Chart</div>' +
                `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-chart-sel cs-select">
                    <select class="chartGroup">
                                    <option value="select1">Get Excel Chart</option>
                                    <option value="select2">Insert Chart</option>
                    </select>
                    <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
                </div>
                `+
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-file-excel-o"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
                '<div class="clearfix">' +

                '<div class="cs-chart-getExcel-par cs-chart-common cs-tsmar">'+
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-chart-cval">' +
                    '<label>Chart</label>' +
                    '<input type="text" placeholder="Select the file">' +
                    '</div>' +
                    '</div>' +
                    `<div class="cs-cell-8">
                        <div class="cs-input cs-chart-action">
                        <label>Action</label>
                        <select>
                            <option value="Copy to clipboard">Copy to clipboard</option>
                            <option value="Save as picture">Save as picture</option>
                        </select>
                        </div>
                    </div>` +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-chart-filename">' +
                    '<label>File Name</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    `<div class="cs-cell-24f cs-bsmar">
                        <div class="cs-cell-8">
                            <div class="clearfix">
                            <input type="checkbox" id="" class="cs-chart-replaceexistingfile">
                            <label for="" class="cs-blackc">Replace existing file</label>
                            </div>
                        </div>
                    </div>` +
                '</div>'+
               
                `
                <div class="cs-chart-insert-par cs-chart-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-chart-cCatagory">
                        <label>Chart category</label>
                        <select>
                            <option value="Area">Area</option>
                            <option value="Bar">Bar</option>
                            <option value="Pie">Pie</option>
                            <option value="Scatter">Scatter</option>
                        </select>
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-chart-cType">
                        <label>Chart type</label>
                        <select>
                            <option value="Stacked Area">Stacked Area</option>
                            <option value="Clustered Bar">Clustered Bar</option>
                            <option value="Pie Doughnut">Pie Doughnut</option>
                            <option value="Scatter with Straight Lines">Scatter with Straight Lines</option>
                        </select>
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-chart-dataRange">
                            <label>Data range</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-chart-iisheet">
                            <label>Insert into sheet</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-chart-scTo">
                            <label>Save Chart to</label><input type="text">
                        </div>
                    </div>
                </div>
                `+
                
                '</div>' +
                '</div>' +
                '</div>';
                if($(event.target).find(".cs-read-drop-area").find(".cs-activityBlock").length == 0){
                    $(event.target).find(".cs-read-drop-area").html(" ");
                }
                var i = 0;
                if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).find('.cs-read-drop-area .cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore(this);
                            i = 1;  
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo($(event.target).find(".cs-read-drop-area"));
                    }
                }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csChartAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                    excelReadDroppable();
            }
            else if ($(ui.draggable).hasClass("cs-excel-insert-act")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-excel-insert-child cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Insert</div>' +
                `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-insert-sel cs-select">
                    <select class="insertGroup">
                                    <option value="select1">Insert Column</option>
                                    <option value="select2">Insert Rows</option>
                                    <option value="select3">Insert Sheet</option>
                    </select>
                    <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
                </div>
                `+
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-file-excel-o"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
                '<div class="clearfix">' +

                '<div class="cs-insert-Col-par cs-insert-common cs-tsmar">'+
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-insertCol-range">' +
                    '<label>Range</label>' +
                    '<input type="text" placeholder="Select the file">' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-insertCol-rtCol">' +
                    '<label>Relative to column</label>' +
                    '<input type="text">' +
                    '</div>' +
                    '</div>' +
                    `<div class="cs-cell-8">
                        <div class="cs-input cs-insertCol-Where">
                        <label>Where</label>
                        <select>
                            <option value="Before">Before</option>
                            <option value="After">After</option>
                        </select>
                        </div>
                    </div>` +
                    `<div class="cs-cell-24f cs-bsmar">
                        <div class="cs-cell-8">
                        <div class="cs-input cs-insertCol-addHead">
                        <label>Add header</label>
                        <input type="text">
                        </div>
                        </div>
                        <div class="cs-cell-8">
                            <div class="cs-input cs-insertCol-FDAT">
                            <label>Format data as type</label>
                            <select>
                                <option value="General">General</option>
                                <option value="Number">Number</option>
                                <option value="Date">Date</option>
                                <option value="Time">Time</option>
                                <option value="Percentage">Percentage</option>
                                <option value="Currency">Currency</option>
                                <option value="Text">Text</option>
                            </select>
                            </div>
                        </div>
                        <div class="cs-cell-8">
                            <div class="clearfix cs-insert-act-chk-boc-hei">
                            <input type="checkbox" id="" class="cs-insertCol-hasHead">
                            <label for="" class="cs-blackc">Has Header</label>
                            </div>
                        </div>
                    </div>` +
                '</div>'+
                `
                <div class="cs-insert-Rows-par cs-insert-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                    <div class="cs-input cs-insertRows-iwtor">
                    <label>In what table or range</label>
                    <input type="text" placeholder="Select the file">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                    <div class="cs-input cs-insertRows-nor">
                    <label>Number of rows</label>
                    <input type="text">
                    </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-insertRows-where">
                        <label>Where</label>
                        <select>
                            <option value="End">End</option>
                            <option value="Start">Start</option>
                            <option value="Specific index">Specific index</option>
                        </select>
                        </div>
                    </div>
                    <div class="cs-cell-24f cs-bsmar">
                        <div class="cs-cell-8">
                            <div class="clearfix">
                            <input type="checkbox" id="" class="cs-insertRows-hasHead">
                            <label for="" class="cs-blackc">Has header</label>
                            </div>
                        </div>
                    </div>
                </div>
                `+
               
                `
                <div class="cs-insert-Sheet-par cs-insert-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-insertSheet-ciw">
                            <label>Create in workbook</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-insertSheet-sName">
                            <label>Sheet name</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-insertSheet-rnsa">
                            <label>Reference new sheet as</label><input type="text">
                        </div>
                    </div>
                </div>
                `+
                
                '</div>' +
                '</div>' +
                '</div>';
                if($(event.target).find(".cs-read-drop-area").find(".cs-activityBlock").length == 0){
                    $(event.target).find(".cs-read-drop-area").html(" ");
                }
                var i = 0;
                if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).find('.cs-read-drop-area .cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore(this);
                            i = 1;  
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo($(event.target).find(".cs-read-drop-area"));
                    }
                }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csInsertAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                    excelReadDroppable();
            }
            else if ($(ui.draggable).hasClass("cs-excel-save-act")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-excel-save-child cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Save</div>' +
                `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-Save-sel cs-select">
                    <select class="saveGroup">
                                    <option value="select1">Save Excel File As</option>
                                    <option value="select2">Save Excel File</option>
                                    <option value="select3">Save Excel File As PDF</option>
                    </select>
                    <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
                </div>
                `+
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-file-excel-o"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
                '<div class="clearfix">' +

                '<div class="cs-SaveExcelFileAs-par cs-Save-common cs-tsmar">'+
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-SaveExcelFileAs-wBook">' +
                    '<label>Workbook</label>' +
                    '<input type="text" placeholder="Select the file">' +
                    '</div>' +
                    '</div>' +
                    `<div class="cs-cell-8">
                        <div class="cs-input cs-SaveExcelFileAs-SAT">
                        <label>Save as type</label>
                        <select>
                            <option value="Excel Workbook (.xlsx)">Excel Workbook (.xlsx)</option>
                            <option value="Excel Binary Workbook (.xlsb)">Excel Binary Workbook (.xlsb)</option>
                            <option value="Excel Macro Enabled Workbook (.xlsm)">Excel Macro Enabled Workbook (.xlsm)</option>
                            <option value="or Excel 97-2003 Workbook (.xls)">or Excel 97-2003 Workbook (.xls)</option>
                        </select>
                        </div>
                    </div>` +
                    `<div class="cs-cell-8">
                        <div class="cs-input cs-SaveExcelFileAs-SAF">
                        <label>Save as file</label>
                        <input type="text">
                    </div>
                    </div>`+
                    `<div class="cs-cell-24f cs-bsmar">
                        <div class="cs-cell-8">
                        <div class="cs-input cs-SaveExcelFileAs-fileName">
                        <label>File Name</label>
                        <input type="text">
                        </div>
                        </div>
                        <div class="cs-cell-8">
                            <div class="clearfix cs-save-act-chk-boc-hei">
                            <input type="checkbox" id="" class="cs-SaveExcelFileAs-RE">
                            <label for="" class="cs-blackc">Replace existing</label>
                            </div>
                        </div>
                    </div>` +
                '</div>'+
                `
                <div class="cs-SaveExcelFile-par cs-Save-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                    <div class="cs-input cs-SaveExcelFile-File ">
                    <label>File </label>
                    <input type="text" placeholder="Select the file">
                    </div>
                    </div>
                </div>
                `+
               
                `
                <div class="cs-SaveExcelFileAsPDF-par cs-Save-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-SaveExcelFileAsPDF-wBook">
                            <label>Workbook </label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-SaveExcelFileAsPDF-SAF">
                            <label>Sheet name</label><input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                            <div class="clearfix cs-save-act-chk-boc-hei">
                            <input type="checkbox" id="" class="cs-SaveExcelFileAsPDF-RE">
                            <label for="" class="cs-blackc">Replace existing</label>
                            </div>
                    </div>
                </div>
                `+
                
                '</div>' +
                '</div>' +
                '</div>';
                    if($(event.target).find(".cs-read-drop-area").find(".cs-activityBlock").length == 0){
                        $(event.target).find(".cs-read-drop-area").html(" ");
                    }
                    var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-read-drop-area .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-read-drop-area"));
                        }
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csSaveAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                    excelReadDroppable();
            }
            else if ($(ui.draggable).hasClass("cs-excel-write-act")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-excel-write-child cs-pr cs-pb-blk">' +
                '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Write</div>' +
                `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-write-sel cs-select">
                    <select class="writeGroup">
                                    <option value="select1">DataTable to Excel</option>
                                    <option value="select2">Write Cell</option>
                    </select>
                    <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
                </div>
                `+
                '<div class="cs-activity-icon cs-pa">' +
                '<i class="icon-cs-file-excel-o"></i>' +
                '</div>' +
                '<span class="cs-remove-activity cs-pa cs-cur">' +
                '<i class="icon-cs-delete"></i>' +
                '</span>' +
                '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
                '<div class="clearfix">' +

                `<div class="cs-write-DataTabletoExcel-par cs-write-common cs-tsmar">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-WriteDataTab-wtw">
                        <label>What to write</label>
                        <input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-WriteDataTab-dest">
                        <label>Destination</label>
                        <input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="clearfix cs-write-act-chk-boc-hei">
                        <input type="checkbox" id="" class="cs-WriteDataTab-append">
                        <label for="" class="cs-blackc">Append</label>
                        </div>
                    </div> 
                    <div class="cs-cell-24f cs-bsmar">
                        <div class="cs-cell-8">
                        <div class="clearfix">
                        <input type="checkbox" id="" class="cs-WriteDataTab-Eheader">
                        <label for="" class="cs-blackc">Exclude header</label>
                        </div>
                        </div>
                    </div>
                </div>
               
                
                <div class="cs-write-WriteCell-par cs-write-common cs-tsmar cs-hide">
                    <div class="cs-cell-8">
                        <div class="cs-input cs-writeWC-whattow">
                        <label>What to write</label>
                        <input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="cs-input cs-writeWC-wheretow">
                        <label>Where to write</label>
                        <input type="text">
                        </div>
                    </div>
                    <div class="cs-cell-8">
                        <div class="clearfix cs-write-act-chk-boc-hei">
                        <input type="checkbox" id="" class="cs-writeWC-autoIncRow">
                        <label for="" class="cs-blackc">Auto increment row</label>
                        </div>
                    </div> 
                </div>
                `+
                
                '</div>' +
                '</div>' +
                '</div>';
                    if($(event.target).find(".cs-read-drop-area").find(".cs-activityBlock").length == 0){
                        $(event.target).find(".cs-read-drop-area").html(" ");
                    }
                    var i = 0;
                    if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).find('.cs-read-drop-area .cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore(this);
                                i = 1;  
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo($(event.target).find(".cs-read-drop-area"));
                        }
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csWriteAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                    excelReadDroppable();

            }
            dynaIdCheckBox();
        }
    });
}
var radID=0;
function mainDroppable() {
    $(".cs-apptest-main .cs-pb-create-board .cs-pb-ly-droparea").droppable({
        activeClass: "ui-state-default",
        hoverClass: "ui-drop-hover",
        accept: ":not(.ui-sortable-helper)",
        greedy: "greedy",
        over: function(event, ui) {
            var $this = $(this);
        },
        drop: function(event, ui) {
            if ($(ui.draggable).hasClass('cs-at-imagelayout-main')) {
                    var imgurl = $(ui.draggable).find('img').attr('src')
                    // console.log($(ui.draggable).find('.cs-ab-secondhalf').text());
                    
                     let imagelayout = 
                     `<div class="cs-at-layoutcontroweach cs-ab-complete-img-block dropAcrive dropElement clearfix cs-image-element cs-pr cs-copy-high-hoverimgparent" data-eletype="projectimage">
                        <div class="cs-pull-left">
                            <div class="cs-at-elemntTypeicon cs-ab-list-leftimage cs-inline">
                                <i class="icon-cs-file-image-o"></i>
                            </div>
                            <div class="cs-ab-dragimg cs-inline cs-pad-sm cs-4x-radius cs-cur" id="imgpopup">
                                <img src="${imgurl}" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                            </div>
                            <div class="cs-inline cs-cur  cs-circle cs-line cs-ts-12 cs-hpad cs-at-eleacttyp-clk cs-bg-white"  data-cs-dropdown="#cs-at-elementactiontype">
                                <span class="cs-inline cs-ts-11 cs-unamepwd-type">Select action</span>
                                <span class="cs-inline cs-lsmar">
                                    <i class="icon-cs-caret-down cs-ts-8"></i>
                                </span>
                            </div>
                        </div>

                        <div class="cs-at-ele-val-block cs-pull-left cs-hide">

                            <div class="cs-pull-left cs-cur cs-tspad cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist">
                                <span class="cs-label cs-ts-10 cs-label-warning">Exp</span>
                                <span class="cs-inline cs-lsmar">
                                    <i class="icon-cs-caret-down cs-ts-8"></i>
                                </span>
                            </div>

                            <div class="cs-at-ele-inp-typ cs-inline">
                                <div class="cs-cur  cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Imgs">
                                    <div class="cs-pb-img-drp">
                                        <img src=""/>
                                    </div>
                                </div>
                                <div class="cs-cur  cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Con">
                                    <input type="text" name="constantValue" placeholder="Enter The Constant">
                                </div>
                                <div class="cs-cur  cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Att">
                                    <input type="text" name="AttributeValue" placeholder="Enter The Attribute">
                                </div>
                                <div class="cs-cur  cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Aut">
                                    <input type="number" name="AutonumberingValue" placeholder="Enter The Number">
                                </div>
                                <div class="cs-cur  cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Var" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">
                                    <input type="text" name="variableValue" class="cs-pe-none cs-cur" placeholder="Select The Variable" disabled>
                                </div>
                                <div class="cs-cur  cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Ele" data-cs-dropdown="#cs-at-leftexp" data-dd-type="ele">
                                    <input type="text" name="ElementValue"  class="cs-pe-none cs-cur"placeholder="Select The Element" disabled>
                                </div>
                                <div class=" cs-ts-12 cs-hspad cs-at-contentEntryinput" data-contentValue="Exp">
                                    <span class="cs-inline">
                                        <input type="text" name="expressionValue" class="cs-inline cs-cur cs-pe-none" placeholder="Enter Expression Loader Template Dataset Fusion Map" />
                                    </span>
                                    <a class="cs-inline cs-cur cs-hpad">{ }</a>
                                    <span class="cs-exprbuilder cs-pr cs-cur" title="Edit Expression">
                                        <i class="icon-cs-expression-edit"></i>
                                    </span>
                                </div>
                                <div class="cs-cur  cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Pix">
                                    <label>X</label>
                                    <input type="number" class="cs-xposition" name="xValue">
                                    <label>Y</label>
                                    <input type="number" class="cs-yposition" name="yValue">
                                </div>
                                <div class="cs-cur  cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Ind">
                                    <input type="number" name="index" placeholder="Ender the index">
                                </div>
                            </div>

                        </div>

                        <div class="cs-pull-left cs-elem-timeout cs-lmar cs-hide">
                            <div class="cs-inline cs-rmar"><i class="icon icon-cs-clock-o cs-orangec cs-valignm cs-ts-16"></i></div>
                            <span class="cs-elem-timeout-sec cs-inline cs-pr">
                                <input type="number" placeholder="sec">
                                <span class="cs-sec-text cs-hide cs-pa">s</span>
                            </span>
                        </div>
                        <div class="cs-copy-high-hoverimg cs-inline cs-tsmar">
                            <a class="cs-at-layouteachelementmainactions cs-copy-element cs-inline cs-cur cs-hpad" title="Copy Element">
                                <i class="icon-cs-files-o cs-ts-16"></i>
                            </a>
                            <a class="cs-at-layouteachelementmainactions cs-highlight-element cs-inline cs-cur cs-hpad cs-tooltip-top" title="Highlight">
                                <i class="icon-cs-data-enrichment cs-ts-16"></i>
                            </a>
                            <a class="cs-at-layouteachelementmainactions cs-ab-resetclk cs-inline cs-cur cs-hpad cs-tooltip-top" title="Reset">
                                <i class="icon-cs-reset cs-ts-16"></i>
                            </a>
                        </div>
                    </div>`;
                    console.log($(this));
                    
                    
                    // $(".cs-pb-ly-droparea").append(imagelayout);
                    $(".cs-pb-ly-droparea").append(imagelayout);

                    // $(this).children('.cs-at-layoutcontroweach').each(function () {
                    //     if ($(this).offset().top >= ui.offset.top){ //compare
                    //         alert(1);
                    //         $(imagelayout).insertBefore($(this));
                    //         i = 1;
                    //         return false; //break loop
                    //     }
                    // });
                    //     if (i != 1){ //if element dropped at the end of cart
                    //         alert(2);

                    //         $(imagelayout).appendTo(this);
                    //     }


                    $(".dropElement").data("eachActivityVO", {
                          "elementActivityId": "",
                          "copyElement": "",
                          "jqueryWait": "",
                          "actionValue": "",
                          "dropXOffset": "",
                          "lastModifiedBy": "",
                          "layoutElementId": "",
                          "elementTimeout": "",
                          "createdOn": "",
                          "lastModifiedOn": "",
                          "createdBy": "",
                          "elementAction": "",
                          "dynamicIdValue": "",
                          "layoutElementName": "",
                          "dropYOffset": "",
                          "playbackActivityId": "",
                          "actionValueType": ""
                    });

                    $(".dropElement").removeClass("dropElement");

                    $(".cs-ab-complete-img-block.dropAcrive").data("eachLayoutData", $(ui.draggable).data("eachLayoutListData"));

                    
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Image" , imgurl);

                    $(".dropAcrive").removeClass("dropAcrive");
                    acrivitiesDropable();
                    contMainSortable();
                    imgDroppable();
                    // setElementCount();
                    // recallTooltip();
            }
            if ($(ui.draggable).hasClass("cs-at-layout-main")) {
                if ($("body").attr("basicAssignments")) {

                    if ($("body").attr("basicAssignments") == "true") {
                        // alert("basic--asignement s truw")
                        var displayName = $(ui.draggable).data("eachLayoutListData").displayName;
                        var layoutId = $(ui.draggable).data("eachLayoutListData").layoutId;
                        var getElementHtml = '<div class="clearfix cs-at-layouteachmain cs-layout-container cs-at-layoutcontroweach dropAcrive cs-aparent cs-pr cs-pb-blk cs-pad">' +
                            '<h3 class="clearfix cs-nomar">' +
                            '<span class="cs-remove-activity cs-pa cs-cur">' +
                            '<i class="icon-cs-delete"></i>' +
                            '</span>' +
                            '<span class="cs-at-layouttitle cs-valignm cs-inline cs-ts-14 cs-tw-600">' + displayName + '</span>' +
                            '<span class="cs-valignm cs-inline cs-ts-14 cs-tw-600 cs-hpad cs-rline">' +
                            '<span class="cs-valignm cs-inline"><i class="icon-cs-element-count cs-ts-18"></i></span>' +
                            '<span class="cs-badge cs-badge-info cs-lmar cs-valignm cs-inline">40</span>' +
                            '</span>' +
                            '</h3>' +
                            '<div class="clearfix cs-at-layouttogglecontentmain cs-non-html-layout cs-pr">' +
                            '</div>' +
                            '</div>';
                        $(this).children('.cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                             $(getElementHtml).insertBefore($(this));
                             i = 1;
                             return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo(this);
                        }
                        $(".cs-at-layouteachmain.dropAcrive").data("eachLayoutData", $(ui.draggable).data("eachLayoutListData"));
                        droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Layout", displayName, layoutId);
                        $(".dropAcrive").removeClass("dropAcrive");
                        acrivitiesDropable();
                        contMainSortable();
                    }
                    else if ($("body").attr("basicAssignments") == "false") {
                        // alert("basic-assignment--false")
                        var displayName = $(ui.draggable).data("eachLayoutListData").displayName;
                        var layoutId = $(ui.draggable).data("eachLayoutListData").layoutId;
                        var layoutElementsList = $(ui.draggable).data("eachLayoutListData").layoutElementsList;
                        // Empty Body
                        var getElementHtml = '<div class="clearfix cs-at-layouteachmain cs-layout-container cs-at-layoutcontroweach dropAcrive cs-aparent cs-pr cs-pb-blk">' +
                            '<h3 class="clearfix cs-nomar cs-bline">' +
                            '<span class="cs-remove-activity cs-pa cs-cur">' +
                            '<i class="icon-cs-delete"></i>' +
                            '</span>' +
                            '<a class="cs-at-layouttoggletrigger cs-cur cs-inline cs-pad"><i class="icon-cs-down-arrow"></i></a>' +
                            '<span class="cs-at-layouttitle cs-inline cs-ts-14 cs-tw-600">' + displayName + '</span>' +
                            '<span class="cs-inline cs-ts-14 cs-tw-600 cs-hpad cs-rline">' +
                            '<span><i class="icon-cs-element-count cs-ts-18"></i></span>' +
                            '<span class="cs-badge cs-badge-info cs-lmar">40</span>' +
                            '</span>' +
                            '<span class="cs-inline cs-hpad">' +
                            '<span><i class="icon-cs-element-action-defined cs-ts-18"></i></span>' +
                            '<span class="cs-badge cs-badge-info cs-b-white cs-line cs-blackc cs-lsmar cs-assigned-elem">04</span>' +
                            '<span class="cs-hsmar"><i class="icon-cs-element-action-undefined cs-ts-18"></i></span>' +
                            '<span class="cs-badge cs-badge-info cs-b-white cs-line cs-blackc cs-non-aggigned-elem">02</span>' +
                            '</span>' +
                            '<a class="cs-inline cs-cur" data-cs-dropdown="#cs-at-eachTemplateFilter"><i class="icon-cs-filter-o cs-ts-14"></i></a>' +
                            '<div class="cs-hmar cs-lline cs-inline cs-valignm cs-layout-description-container">' +
                            '<input type="text" class="cs-inline cs-lmar cs-layout-description-input" placeholder="Enter Description">' +
                            '</div>' +
                            '<div class="cs-inline cs-lsmar cs-layout-setasheader"><input type="radio" id="rad_' + radID + '" name="layoutheadselect"><label for="rad_' + radID + '">Set Header</label></div>' +
                            '</h3>' +
                            '<div class="clearfix cs-at-layouttogglecontentmain cs-pr">' +
                            '</div>' +
                            '</div>';
                        radID++;

                        if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                            $(this).children('.cs-at-layoutcontroweach').each(function () {
                                if ($(this).offset().top >= ui.offset.top) //compare
                                {     
                                    if($(this).hasClass("cs-closebrowserActivity"))  {
                                    $(getElementHtml).insertBefore($(this));
                                    }   
                                    else{  
                                    $(getElementHtml).insertBefore($(this));                 
                                }
                                i = 1;
                                    return false; //break loop
                                }
                            });
                            if (i != 1) //if element dropped at the end of cart
                            {
                                $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
                            }
                        }
                        else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                            $(this).children('.cs-at-layoutcontroweach').each(function () {
                                if ($(this).offset().top >= ui.offset.top) //compare
                                {     
                                    if($(this).hasClass("cs-openbrowserActivity"))  {
                                    $(getElementHtml).insertAfter($(this));
                                    }   
                                    else{   
                                    $(getElementHtml).insertBefore($(this));                 
                                }
                                i = 1;
                                    return false; //break loop
                                }
                            });
                            if (i != 1) //if element dropped at the end of cart
                            {
                                $(getElementHtml).appendTo(this);
                            }
                        }
                        
                        else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                            $(this).children('.cs-at-layoutcontroweach').each(function () {
                                if ($(this).offset().top >= ui.offset.top) //compare
                                {                                 
                                    $(getElementHtml).insertBefore($(this));
                                    i = 1;
                                    return false; //break loop
                                }
                            });
                            if (i != 1) //if element dropped at the end of cart
                            {
                                $(getElementHtml).appendTo(this);
                            }
                        }

                        $(layoutElementsList).each(function (index, val) {
                            var layoutElementId = val.layoutElementId;
                            var getElementName = val.elementName;
                            var getMandatory = val.isMandatory;
                            var getDyna = val.isDynamic;
                            var mandClass = "";
                            if (getMandatory == "Y") {
                                mandClass = " cs-ly-mandatory";
                            }
                            var getElementtyp = val.elementType.toLowerCase().replace(/\s/g, '');
                            var actionValueType = "";
                            var dynaEditHtml = "";
                            if (getDyna == "Y") {
                                dynaEditHtml = '<a class="cs-at-layouteachelementmainactions cs-edit-element cs-inline cs-cur cs-hpad cs-tooltip-top" title="Edit">' +
                                    '<i class="icon-cs-edit cs-ts-16"></i>' +
                                    '</a>';
                            }
                            if ("draganddrop" == getElementtyp) {
                                actionValueType = "Element";
                            } else {
                                actionValueType = "Constant";
                            }
                            // child block inside empty body
                            $(".dropAcrive > .cs-at-layouttogglecontentmain").append(
                                '<div class="cs-at-layoutcontroweach clearfix dropElement cs-each-element' + mandClass + ' cs-pr" data-eletype="' + getElementtyp + '">' +
                                '<div class="cs-pull-left">' +

                                '<div class="cs-copy-elemtype cs-tooltip-right" title="Copy Element Name">' +
                                '<div class="cs-at-elemntTypeicon sprite cs-cf-' + getElementtyp + ' cs-inline"></div>' +
                                '<div class="cs-hide cs-copy-et"><i class="icon-cs-duplicate"></i></div>' +
                                '</div>' +

                                '<div class="cs-inline cs-vt-align cs-at-elementname cs-hpad cs-lsmar  cs-tooltip-top" title="' + getElementName + '">' + getElementName + '</div>' +
                                '<div class="cs-inline cs-cur cs-vt-align cs-circle cs-line cs-ts-12 cs-hpad cs-at-eleacttyp-clk" data-cs-dropdown="#cs-at-elementactiontype">' +
                                '<span class="cs-inline cs-ts-11 cs-unamepwd-type">Select action</span>' +
                                '<span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span>' +
                                '</div>' +
                                '</div>' +
                                '<div class="cs-at-ele-val-block cs-pull-left cs-hide">' +
                                '<div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist">' +
                                '<span class="cs-label cs-ts-10 cs-label-warning">Exp</span>' +
                                '<span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span>' +
                                '</div>' +
                                '<div class="cs-at-ele-inp-typ cs-inline">' +
                                '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Con">' +
                                '<input type="text" name="constantValue" placeholder="Enter The Constant">' +
                                '</div>' +
                                '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Att">' +
                                '<input type="text" name="AttributeValue" placeholder="Enter The Attribute">' +
                                '</div>' +
                                '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Aut">' +
                                '<input type="number" name="AutonumberingValue" placeholder="Enter The Number">' +
                                '</div>' +
                                '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Var"  data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">' +
                                '<input type="text" name="variableValue" placeholder="Select The Variable" class="cs-pe-none cs-cur" disabled>' +
                                '</div>' +
                                '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Ele"  data-cs-dropdown="#cs-at-leftexp" data-dd-type="ele">' +
                                '<input type="text" name="ElementValue" class="cs-pe-none" placeholder="Select The Element" disabled>' +
                                '</div>' +
                                '<div class="cs-vt-align cs-ts-12 cs-hspad cs-at-contentEntryinput" data-contentValue="Exp">' +
                                '<span class="cs-inline">' +
                                '<input type="text" name="expressionValue" class="cs-inline cs-pe-none" placeholder="Enter Expression Loader Template Dataset Fusion Map"/>' +
                                '</span>' +
                                '<a class="cs-inline cs-cur cs-hpad">{ }</a>' +
                                '<span class="cs-exprbuilder cs-pr cs-cur" title="Edit Expression"><i class="icon-cs-expression-edit"></i></span>' +
                                '</div>' +
                                '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Pix">' +
                                '<label>X</label>' +
                                '<input type="number" class="cs-xposition "  name="xValue">' +
                                '<label>Y</label>' +
                                '<input type="number" class="cs-yposition" name="yValue">' +
                                '</div>' +
                                '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Ind">' +
                                '<input type="number" name="index" placeholder="Ender the index">' +
                                '</div>' +
                                '</div>' +
                                '</div>' +
                                '<div class="cs-pull-left cs-elem-timeout cs-lmar cs-hide">' +
                                '<div class="cs-inline cs-rmar"><i class="icon icon-cs-clock-o cs-orangec cs-valignm cs-ts-16"></i></div>' +
                                '<span class="cs-elem-timeout-sec cs-inline cs-pr">' +
                                '<input type="number" placeholder="sec">' +
                                '<span class="cs-sec-text cs-hide cs-pa">s</span>' +
                                '</span>' +
                                '</div>' +
                                '<a class="cs-at-layouteachelementmainactions cs-copy-element cs-inline cs-cur cs-hpad" title="Copy Element"><i class="icon-cs-files-o cs-ts-16"></i></a>' +
                                '<a class="cs-at-layouteachelementmainactions cs-highlight-element cs-inline cs-cur cs-hpad cs-tooltip-top" title="Highlight">' +
                                '<i class="icon-cs-data-enrichment cs-ts-16"></i>' +
                                '</a>' +
                                '<a class="cs-at-layouteachelementmainactions cs-reset-element cs-inline cs-cur cs-hpad cs-tooltip-top" title="Reset">' +
                                '<i class="icon-cs-reset cs-ts-16"></i>' +
                                '</a>' +
                                dynaEditHtml +
                                '</div>');

                            $(".dropElement").data("eachActivityVO", {
                                "playbackId": "",
                                "createdBy": "",
                                "elementActivityVO": {
                                    "elementActivityId": "",
                                    "actionValue": "",
                                    "dropXOffset": "",
                                    "lastModifiedBy": "",
                                    "isDynamic": getDyna,
                                    "dynamicValue": [],
                                    "layoutElementId": layoutElementId,
                                    "createdOn": "",
                                    "lastModifiedOn": "",
                                    "createdBy": "",
                                    "elementAction": "",
                                    "layoutElementName": getElementName,
                                    "dropYOffset": "",
                                    "playbackActivityId": "",
                                    "timeoutSec": "",
                                    "actionValueType": actionValueType,
                                    "layoutElementsVO": val
                                },
                                "activityIndex": "",
                                "lastModifiedBy": "",
                                "parentActivityId": "",
                                "activityType": "Element",
                                "createdOn": "",
                                "playbackName": "",
                                "playbackActivityId": "",
                                "lastModifiedOn": ""
                            });
                            if (getElementtyp == "draganddrop") {
                                $(".dropElement").find(".cs-cdx-exp-click").find(".cs-label-warning").text("Pix");
                                $(".dropElement").find(".cs-at-contentEntryinput").addClass("cs-hide");
                                $('.dropElement').find(".cs-at-ele-inp-typ").find(".cs-at-contentEntryinput").each(function () {
                                    var inpexptext = $(this).attr("data-contentvalue");
                                    if (inpexptext == "Pix") {
                                        $(this).removeClass("cs-hide");
                                    }
                                });
                            }
                            $(".dropElement").removeClass("dropElement");

                        });
                        $(".cs-at-layouteachmain.dropAcrive").data("eachLayoutData", $(ui.draggable).data("eachLayoutListData"));
                        droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Layout", displayName, layoutId);
                        $(".dropAcrive").removeClass("dropAcrive");
                        acrivitiesDropable();
                        contMainSortable();
                        setElementCount();
                        recallTooltip();
                        allTooltipMain()
                    }
                    else {
                        alert("basicAssignments attribute's value is wrong... Assign true or false to it");
                    }
                } else {
                    alert("Set basicAssignments attribute in body tag and assign true or false value for it");
                }
            } else if ($(ui.draggable).hasClass("cs-iteraionActivity")) {
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-aparent dropAcrive cs-at-layoutcontroweach cs-activityBlock cs-iterationActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Iteration Activity</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-iteration-activity"></i>' +
                        '</div>' +
                        '<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>' +
                        '<div class="clearfix cs-pad cs-rmar cs-bmar">' +
                        '<div class="cs-inline cs-cur cs-vt-align cs-ts-12 cs-cdx-exp-click cs-ite-dd-clk" data-cs-dropdown="#cs-at-condexpresselectndroplist">' +
                        '<span class="cs-label cs-ts-10 cs-label-warning">Con</span>' +
                        '<span class="cs-inline"><i class="icon-cs-caret-down cs-ts-8"></i></span>' +
                        '</div>' +
                        '<div class="cs-at-inp-typ cs-inline">' +
                        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput" data-contentValue="Con">' +
                        '<input type="Number" name="constantValue" placeholder="Enter The Constant">' +
                        '</div>' +
                        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Var"  data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">' +
                        '<input type="text" name="VariableValue" class="cs-pe-none" placeholder="Select The Variable" disabled>' +
                        '</div>' +
                        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Lar">' +
                        '<input type="text" name="layoutarrayValue" placeholder="Enter The Layoutarray">' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>';
                        if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                            $(this).children('.cs-at-layoutcontroweach').each(function () {
                                if ($(this).offset().top >= ui.offset.top) //compare
                                {     
                                    if($(this).hasClass("cs-closebrowserActivity"))  {
                                    $(getElementHtml).insertBefore($(this));
                                    }   
                                    else{    
                                    $(getElementHtml).insertBefore($(this));                 
                                }
                                i = 1;
                                    return false; //break loop
                                }
                            });
                            if (i != 1) //if element dropped at the end of cart
                            {
                                $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
                            }
                        }
                        else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                            $(this).children('.cs-at-layoutcontroweach').each(function () {
                                if ($(this).offset().top >= ui.offset.top) //compare
                                {     
                                    if($(this).hasClass("cs-openbrowserActivity"))  {
                                    $(getElementHtml).insertAfter($(this));
                                    }   
                                    else{                       
                                    $(getElementHtml).insertBefore($(this));                 
                                }
                                i = 1;
                                    return false; //break loop
                                }
                            });
                            if (i != 1) //if element dropped at the end of cart
                            {
                                $(getElementHtml).appendTo(this);
                            }
                        }
                        
                        else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore($(this));
                            i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Iteration");
                    $(".dropAcrive").removeClass("dropAcrive");
                    iterationActivityDropable();
                    acrivitiesDropable();
                }
            }
            else if ($(ui.draggable).hasClass("cs-openurl")) {
                var getElementHtml =
                    `<div class="clearfix cs-at-layoutcontroweach dropAcrive cs-activityBlock cs-openurlActivity cs-pr cs-pb-blk">
                    <div class="cs-pa cs-activity-title cs-ts-10">Open Url</div>
                    <div class="cs-activity-icon cs-pa">
                        <i class="icon-cs-link"></i>
                    </div>
                    <span class="cs-remove-activity cs-pa cs-cur">
                        <i class="icon-cs-delete"></i>
                    </span>
                    <div class="clearfix cs-pad cs-rmar cs-bmar">
                        <div class="cs-inline">
                            <div class="cs-inline cs-cur cs-vt-align cs-ts-12 cs-cdx-exp-click cs-openurl-dd-clk" data-cs-dropdown="#cs-at-condexpresselectndroplist">
                                <span class="cs-label cs-ts-10 cs-label-warning">Con</span>
                                <span class="cs-inline"><i class="icon-cs-caret-down cs-ts-8"></i></span>
                            </div>
                            <div class="cs-at-inp-typ cs-inline">
                                <div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput" data-contentValue="Con">
                                    <input type="text" name="constantValue"  placeholder="Enter The Constant">
                                </div>
                                <div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Var" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">
                                    <input type="text" name="VariableValue" class="cs-pe-none cs-cur" placeholder="Select The Variable" disabled>
                                </div>
                                <div class="cs-cur cs-ts-12 cs-hpad cs-at-contentEntryinput cs-ab-imgclick-append cs-var-el-dd-click cs-hide" data-contentValue="Imgs" data-cs-dropdown="#cs-ab-imgsdropdown">
                                    <div class="cs-ab-insideimg2 cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput">
                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div> 
                    <div class="clearfix">
                        <div class="cs-cell-12">
                            <div class="cs-input">
                                <label>Function</label>
                                <input type="text" placeholder="Select Function" class="cs-ou-fun-inp">
                                <a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a> 
                            </div>
                        </div>
                        <div class="cs-cell-12">
                            <div class="cs-input">
                                <label>Responsbility</label>
                                <input type="text" placeholder="Select Responsbility" class="cs-ou-res-inp">
                                <a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a> 
                            </div>
                        </div>
                        <div class="cs-cell-12">
                            <div class="cs-input">
                                <label>Application</label>
                                <input type="text" placeholder="Select Application" class="cs-ou-app-inp">
                                <a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a> 
                            </div>
                        </div>
                        <div class="cs-cell-12">
                            <div class="cs-input">
                                <label>Security Group</label>
                                <input type="text" placeholder="Security Group" class="cs-ou-sg-inp">
                                <a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a> 
                            </div>
                        </div>
                        <div class="cs-cell-12">
                            <div class="cs-input">
                                <label>Language</label>
                                <input type="text" placeholder="Select Language" class="cs-ou-lang-inp">
                                <a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a> 
                            </div>
                        </div>
                        <div class="cs-cell-12">
                            <div class="cs-input">
                                <label>Param</label>
                                <input type="text" placeholder="Enter Param Value" class="cs-ou-param-inp">
                            </div>
                        </div>
                    </div>
                </div>
                `;
                if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {     
                            if($(this).hasClass("cs-closebrowserActivity"))  {
                            $(getElementHtml).insertBefore($(this));
                            }   
                            else{    
                            $(getElementHtml).insertBefore($(this));                 
                        }
                        i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
                    }
                }

                else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {     
                            if($(this).hasClass("cs-openbrowserActivity"))  {
                            $(getElementHtml).insertAfter($(this));
                            }   
                            else{                       
                            $(getElementHtml).insertBefore($(this));                 
                        }
                        i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
                
                else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                $(this).children('.cs-at-layoutcontroweach').each(function () {
                    if ($(this).offset().top >= ui.offset.top) //compare
                    {
                        $(getElementHtml).insertBefore($(this));
                        i = 1;
                        return false; //break loop
                    }
                });
                if (i != 1) //if element dropped at the end of cart
                {
                    $(getElementHtml).appendTo(this);
                }
            }
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "OpenURL");
                $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            else if ($(ui.draggable).hasClass("cs-conditionActivity")) {
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml =
                        `<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-conditionnActivity dropAcrive cs-aparent cs-pr cs-pb-blk">
                        <div class="cs-pa cs-activity-title cs-ts-10">Condition Activity</div>
                        <div class="cs-activity-icon cs-pa">
                            <i class="icon-cs-sql-report-creation"></i>
                        </div>
                        <span class="cs-remove-activity cs-pa cs-cur">
                            <i class="icon-cs-delete"></i>
                        </span>
                        <div class="clearfix cs-pad cs-rmar cs-bmar cs-at-con-if-else">
                            <div class="cs-at-con-if cs-aparent cs-at-layoutcontroweach dropIf cs-at-con-elsifcom">
                                <div class="cs-at-con-actions">
                                    <span class="cs-elseif-add cs-elseif-add-edit">
                                        <i class="icon-cs-new cs-ts-12"></i>
                                    </span>
                                    <span class="cs-at-con-add cs-bluec cs-lmar">
                                        <span class="cs-ts-18">{</span><i class="icon-cs-new cs-ts-12"></i><span class="cs-ts-18">}</span>
                                    </span>
                                    <div class="cs-at-apend-exp cs-inline cs-lmar">
                                        <div class="cs-edit-condition-value cs-truncate">
                                            <span> condition =  </span>
                                            <span class=" cs-ts-10 cs-at-apend-condition-text"></span>
                                            <div class="cs-edit-condition-value-child">
                                                <span> condition =  </span>
                                                <span class=" cs-ts-10  cs-pa cs-at-apend-condition-text"></span>
                                            </div>
                                        </div>
                                        <span class="cs-right-apend-exp cs-lmar"></span>
                                        <span class="cs-at-apend-exp-edit cs-at-apend-exp-edit-condition cs-lmar cs-cur">
                                            <span class="cs-ts-18">{</span><i class="icon-cs-edit cs-ts-12"></i>
                                            <span class="cs-ts-18">}</span>
                                        </span>
                                    </div>
                                    <div class="cs-at-apend-custom-exp-main">
                                        <div class="cs-at-apend-custom-exp cs-inline cs-lmar">
                                            <span class="cs-cur cs-ts-14 cs-textb cs-at-apend-custom-hover">{ }</span>
                                            <div class="cs-at-apend-custom-exp-cont-main">
                                                <div class="cs-at-apend-custom-exp-cont cs-pr"></div>
                                            </div>
                                        </div>
                                        <span class="cs-at-apend-cus-exp-edit cs-cur">
                                            <span class="cs-ts-18">{</span><i class="icon-cs-edit cs-ts-12"></i>
                                            <span class="cs-ts-18">}</span>
                                        </span>
                                    </div>


                                </div>
                                <div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white cs-add-exp-blk">
                                    <div class="clearfix cs-tr">
                                        <span class="cs-cur cs-ts-14 cs-textb">{ }</i></span>
                                        <div class="clearfix cs-inline">
                                            <span class="cs-graylightc cs-rsmar">Custom Expression</span>
                                            <label class="switch-toggle cs-lsmar">
                                                <input type="checkbox" class="cs-cus-exp-tog">
                                                <div class="slider-toggle round-toggle"></div>
                                            </label>
                                        </div>
                                        <span class="cs-cur cs-con-exp-sav"> <i class="icon-cs-save"></i></span>
                                    </div>
                                    <div class="cs-textarea cs-pr cs-at-dd-expr-txtar">
                                        <div class="clearfix cs-tmar">
                                            <span class="cs-rmar cs-exprbuilder cs-pr cs-cur cs-pull-right cs-tsmar" title="Edit Expression">
                                                <i class="icon-cs-expression-edit"></i>
                                            </span>
                                        </div>
                                        <label for="expression">Expression</label>
                                        <textarea placeholder="Enter Expression..."></textarea>
                                    </div>
                                    <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
                                        <div class="cs-cell-7">
                                            <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                                <label>Left Expression</label>
                                                <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                                <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur" />
                                                <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                    <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="cs-cell-7">
                                            <div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                                <label>Operators</label>
                                                <input type="text" placeholder="Select Operators" class="cs-cond-opr cs-pe-none cs-cur" />
                                            </div>
                                        </div>
                                        <div class="cs-cell-7">
                                            <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                                <label>Right Expression</label>
                                                <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                                <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur" />
                                                <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                    <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="cs-cell-3f">
                                        <span class="cs-remove-activity-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                                         <i class="icon-cs-delete"></i>
                                        </span>
                                        <span class="cs-remove-activity-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                        <i class="icon-cs-new"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="cs-at-con-drop-area"></div>
                            </div>
                            <div class="cs-at-con-endif cs-aparent cs-at-layoutcontroweach dropElse">
                                <div class="cs-at-con-drop-area"></div>
                            </div>
                        </div>
                    </div>
                    `;
                    if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                        $(this).children('.cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {     
                                if($(this).hasClass("cs-closebrowserActivity"))  {
                                $(getElementHtml).insertBefore($(this));
                                }   
                                else{    
                                $(getElementHtml).insertBefore($(this));                 
                            }
                            i = 1;
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
                        }
                    }

                    else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                        $(this).children('.cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {     
                                if($(this).hasClass("cs-openbrowserActivity"))  {
                                $(getElementHtml).insertAfter($(this));
                                }   
                                else{                       
                                $(getElementHtml).insertBefore($(this));                 
                            }
                            i = 1;
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo(this);
                        }
                    }
                    
                    else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore($(this));
                            i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Condition");
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropIf", "If");
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropElse", "Else");
                    $(".dropAcrive").removeClass("dropAcrive");
                    $(".dropIf").removeClass("dropIf");
                    $(".dropElse").removeClass("dropElse");
                    conditnActivityDropable();
                    $(".cs-at-apend-custom-exp-cont").perfectScrollbar();
                }
            }
            else if ($(ui.draggable).hasClass("cs-playback-drag")) {
                if ($("body").attr("basicAssignments") == "false") {
                    var getName = $(ui.draggable).text().trim();
                    var displayName = $("#display-name-inpt").val();
                    var getElementHtml = '<div class="cs-at-layoutcontroweach cs-playback-drop dropAcrive cs-pad cs-pb-blk">' +
                        '<div class="cs-at-droppedActivities">' +
                        '<div class="cs-at-droppedActivitiesHeading cs-hpad cs-tspad cs-bspad cs-inline cs-line cs-pr">' +
                        '<span class="cs-inline"><i class="icon-cs-caret-right cs-ts-12 cs-greenc"></i></span>' +
                        '<span class="cs-at-droppedActivitiesName">' + getName + '</span>' +
                        '<span class="cs-at-droppedActivitiesActions cs-pull-right cs-rsmar">' +
                        '<a class="cs-cur cs-hpad-sm cs-tooltip-top cs-expand-colapse-playback" title="Mapping">' +
                        '<i class="icon-cs-sync cs-ts-14"></i>' +
                        '</a>' +
                        '<a class="cs-cur cs-hpad-sm cs-tooltip-top" title="Expand">' +
                        '<i class="icon-cs-export cs-ts-14"></i>' +
                        '</a>' +
                        '</span>' +
                        '<a class="cs-cur cs-tc cs-inline cs-at-droppedActivitiesDelete cs-line cs-circle cs-pa">' +
                        '<i class="icon-cs-delete cs-ts-12 cs-whitec cs-vm-align"></i>' +
                        '</a>' +
                        '</div>' +
                        '<div class="clearfix cs-at-droppedActivitiesContent cs-hide cs-vpad cs-line">' +
                        '<a href="#" class="cs-drpd-playback-clos cs-cur">' +
                        '<i class="icon-cs-reject-o cs-ts-10"></i>' +
                        '</a>' +
                        '<div class="cs-cell-12 cs-hmar cs-mapping-container">' +
                        '<div class="cs-cell-12 cs-mapping-list-left cs-at-pb-map">' +
                        '<div class="cs-at-playbackDisplayName cs-disable" data-cs-dropdown="#playbacklist-dd">' + displayName + '</div>' +
                        '<div class="cs-at-topActions cs-tpad cs-bsmar cs-at-top-act-var-elem">' +
                        '<a class="cs-cur cs-hpad-sm cs-ts-12 cs-circle active">Variable</a>' +
                        '<a class="cs-cur cs-hpad-sm cs-ts-12 cs-circle cs-at-top-act-ele-clik">Element</a>' +
                        '</div>' +
                        '<div class="cs-at-varmappinglistmain">' +
                        '<ul class="cs-vartabul cs-tmar">' +
                        '<li><a href="#var-in">IN</a></li>' +
                        '<li><a href="#var-out">OUT</a></li>' +
                        '<li><a href="#var-inout">INOUT</a></li>' +
                        '</ul>' +
                        '<div id="var-in" class="cs-at-pb-map">' +
                        '<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
                        '<input type="text" name="Sprint Name" placeholder="Search in Variable">' +
                        '<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
                        '</div>' +
                        '<div class="cs-at-mappinglistmain">' +
                        '<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-left-list"></ul>' +
                        '</div>' +
                        '</div>' +
                        '<div id="var-out" class="cs-at-pb-map">' +
                        '<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
                        '<input type="text" name="Sprint Name" placeholder="Search out Variable">' +
                        '<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
                        '</div>' +
                        '<div class="cs-at-mappinglistmain">' +
                        '<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-left-list"></ul>' +
                        '</div>' +
                        '</div>' +
                        '<div id="var-inout" class="cs-at-pb-map">' +
                        '<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
                        '<input type="text" name="Sprint Name" placeholder="Search inout Variable">' +
                        '<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
                        '</div>' +
                        '<div class="cs-at-mappinglistmain">' +
                        '<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-left-list"></ul>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-at-elemappinglistmain">' +
                        '<div class="cs-at-eachsearchpart cs-pr cs-tsmar">' +
                        '<input type="text" name="Sprint Name" placeholder="Search Element">' +
                        '<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
                        '</div>' +
                        '<div class="cs-at-mappinglistmain">' +
                        '<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-ele-list"></ul>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-12 cs-mapping-list-right cs-at-pb-map">' +
                        '<div class="cs-at-playbackName">' + getName + '</div>' +
                        '<div class="cs-at-topActions cs-tpad">' +
                        '<a class="cs-cur cs-hpad-sm cs-ts-12 cs-circle">In Parameter</a>' +
                        '</div>' +
                        '<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
                        '<input type="text" name="Sprint Name" placeholder="Search Element">' +
                        '<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
                        '</div>' +
                        '<div class="cs-at-mappinglistmain">' +
                        '<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-right-list"></ul>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-2 cs-hmar cs-tc cs-at-mappedactionmain cs-pr">' +
                        '<a class="cs-tc cs-cur cs-pa cs-circle cs-at-mappedmovingicn">' +
                        '<i class="icon-cs-angle-double-right cs-ts-12"></i>' +
                        '</a>' +
                        '</div>' +
                        '<div class="cs-cell-10 cs-hmar cs-pull-right cs-at-mappedcontmain  cs-at-pb-map">' +
                        '<div class="cs-at-playbackName">' + getName + '</div>' +
                        '<div class="cs-at-topActions cs-tpad">' +
                        '<a class="cs-cur cs-hpad-sm cs-ts-12 cs-circle">Mapped In Parameter</a>' +
                        '</div>' +
                        '<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
                        '<input type="text" name="Sprint Name" placeholder="Search Mapped In Parameter">' +
                        '<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
                        '</div>' +
                        '<div class="clearfix cs-at-mappedListmain">' +
                        '<div class="clearfix cs-at-mappedpart">' +
                        '<ul class="clearfix cs-scroll cs-pr cs-rpad"></ul>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>';
                        if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                            $(this).children('.cs-at-layoutcontroweach').each(function () {
                                if ($(this).offset().top >= ui.offset.top) //compare
                                {     
                                    if($(this).hasClass("cs-closebrowserActivity"))  {
                                    $(getElementHtml).insertBefore($(this));
                                    }   
                                    else{    
                                    $(getElementHtml).insertBefore($(this));                 
                                }
                                i = 1;
                                    return false; //break loop
                                }
                            });
                            if (i != 1) //if element dropped at the end of cart
                            {
                                $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
                            }
                        }

                        else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                            $(this).children('.cs-at-layoutcontroweach').each(function () {
                                if ($(this).offset().top >= ui.offset.top) //compare
                                {     
                                    if($(this).hasClass("cs-openbrowserActivity"))  {
                                    $(getElementHtml).insertAfter($(this));
                                    }   
                                    else{                       
                                    $(getElementHtml).insertBefore($(this));                 
                                }
                                i = 1;
                                    return false; //break loop
                                }
                            });
                            if (i != 1) //if element dropped at the end of cart
                            {
                                $(getElementHtml).appendTo(this);
                            }
                        }
                        
                        else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore($(this));
                            i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Entail");
                    $(".cs-scroll-2,.cs-scroll").perfectScrollbar();
                    $(".dropAcrive").find(".cs-at-mappedpart").find("ul").find("li").each(function () {
                        var valname = $(this).find(".cs-mapped-left").find(".cs-mapper-name").text();
                        var varibname = $(this).find(".cs-mapped-right").find(".cs-mapper-name").text();
                        $(".dropAcrive").data("eachActivityVO").entailPlaybackVO.entailPlaybackParamsVOs.push({
                            "entailPlaybackParamId": "",
                            "createdBy": "",
                            "valueType": "Variable",
                            "lastModifiedBy": "",
                            "entailPlaybackId": "",
                            "isActive": "",
                            "variableId": "",
                            "variableName": varibname,
                            "value": valname,
                            "createdOn": "",
                            "lastModifiedOn": ""
                        });
                    });
                    if ($(ui.draggable).data("playBackEachData").variableVOs != undefined) {
                        var f = $(ui.draggable).data("playBackEachData").variableVOs;
                        for (var i = 0; i < f.length; i++) {
                            var inparamlilisthtml = '<li class="clearfix cs-tspad cs-bspad cs-cur cs-pr">' +
                                '<span class="clearfix cs-ts-14 cs-tw-600 cs-cell-20 cs-truncate cs-mapper-name">' + f[i].variableName + '</span>' +
                                '<span class="clearfix cs-ts-10 cs-cell-20 cs-truncate cs-mapper-type">' + f[i].dataType + '</span>' +
                                '<span class="cs-pa cs-ts-11 cs-tw-600 cs-at-mappingeach">' +
                                '<i class="icon-cs-succeed-o cs-greenc"></i>' +
                                '</span>' +
                                '</li>';
                            inparamlilisthtml = $(inparamlilisthtml).data("inparamVo", f[i]);
                            $(".dropAcrive .cs-plbk-right-list").append(inparamlilisthtml);
                        }
                    }
                    $(".dropAcrive").data("eachActivityVO").entailPlaybackVO.playbackId = $(ui.draggable).data("playBackEachData").playbackId;
                    $(".dropAcrive").data("eachActivityVO").playbackName = $(ui.draggable).data("playBackEachData").displayName;
                    $(".dropAcrive").data("eachActivityVO").entailPlaybackVO.variablesVOs = f;
                    $(".cs-variable-list-block li").each(function () {
                        var getData = $(this).data("VariableEachData");
                        var varnam = $(this).data("VariableEachData").variableName;
                        var datyp = $(this).data("VariableEachData").dataType;
                        var parmtyp = $(this).data("VariableEachData").paramType;
                        var leftlisteachhtml = '<li class="clearfix cs-tspad cs-bspad cs-cur cs-pr">' +
                            '<span class="clearfix cs-ts-14 cs-tw-600 cs-cell-20 cs-truncate cs-mapper-name">' + varnam + '</span>' +
                            '<span class="clearfix cs-ts-10 cs-cell-20 cs-truncate cs-mapper-type">' + datyp + '</span>' +
                            '<span class="cs-pa cs-ts-11 cs-tw-600 cs-at-mappingeach">' +
                            '<i class="icon-cs-succeed-o cs-greenc"></i>' +
                            '</span>' +
                            '</li>';
                        leftlisteachhtml = $(leftlisteachhtml).data("VariableEachData", getData);
                        if (parmtyp == "IN") {
                            $(".dropAcrive #var-in .cs-plbk-left-list").append(leftlisteachhtml);
                        } else if (parmtyp == "OUT") {
                            $(".dropAcrive #var-out .cs-plbk-left-list").append(leftlisteachhtml);
                        } else if (parmtyp == "INOUT") {
                            $(".dropAcrive #var-inout .cs-plbk-left-list").append(leftlisteachhtml);
                        }
                    });
                    $(this).closest(".cs-at-layouteachmain").find(".cs-each-element").each(function () {
                        var plElementName = $(this).find(".cs-at-elementname").text();
                        var plElementtyp = $(this).attr("data-eletype");
                        var elelisteachhtml = '<li class="clearfix cs-tspad cs-bspad cs-cur cs-pr">' +
                            '<span class="clearfix cs-ts-14 cs-tw-600 cs-cell-20 cs-truncate cs-mapper-name">' + plElementName + '</span>' +
                            '<span class="clearfix cs-ts-10 cs-cell-20 cs-truncate cs-mapper-type">' + plElementtyp + '</span>' +
                            '<span class="cs-pa cs-ts-11 cs-tw-600 cs-at-mappingeach">' +
                            '<i class="icon-cs-succeed-o cs-greenc"></i>' +
                            '</span>' +
                            '</li>';
                        $(".dropAcrive .cs-plbk-ele-list").append(elelisteachhtml);
                    });
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
                playbknameappendinlist();
                $(".cs-at-varmappinglistmain").tabs();
            }
            else if ($(ui.draggable).hasClass("cs-assignmentActivity")) {
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml =
                        `<div class="clearfix cs-at-layoutcontroweach dropAcrive cs-activityBlock cs-assignmentActivity cs-pr cs-pb-blk">
                        <div class="cs-pa cs-activity-title cs-ts-10">Assignment Activity</div>
                        <div class="cs-activity-icon cs-pa">
                            <i class="icon-cs-assignment-activity"></i>
                        </div>
                        <span class="cs-remove-activity cs-pa cs-cur">
                            <i class="icon-cs-delete"></i>
                        </span>
                        <div class="clearfix cs-at-dd-exprs">
                            <div class="cs-inline cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-asgnm-exp" data-cs-dropdown="#cs-at-condexpresselectndroplist">
                                <span class="cs-label cs-ts-10 cs-label-warning">Ele</span>
                                <span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span>
                            </div>
                            <div class="cs-cell-8">
                                <div class="cs-ex-ele-main">
                                    <div class="cs-input cs-var-el-dd-click cs-asgn-elem cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="ele">
                                        <label>Element Name</label>
                                        <input type="text" placeholder="Select Element" class="cs-pe-none cs-cur" disabled />
                                    </div>
                                    <div class="cs-input cs-asgnm-cus-exp">
                                        <label>Expression</label>
                                        <input type="text" class="cs-pe-none cs-cur" placeholder="Enter Expression" />
                                    </div>
                                    <div class="cs-input cs-var-el-dd-click cs-asgn-var cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">
                                        <label>Variable Name</label>
                                        <input type="text" placeholder="Select Variable" class="cs-pe-none cs-cur" disabled />
                                    </div>
                                    <div class="cs-input cs-asgn-image cs-rad-none cs-ab-imgclick-append" data-dd-type="img" data-cs-dropdown="#cs-ab-imgsdropdown">
                                        <div class="cs-ab-insideimg2 cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput">
                                            <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="cs-pad cs-pull-left cs-ts-18">
                                <i class="icon-cs-angle-double-right"></i>
                            </div>
                            <div class="cs-cell-8">
                                <div class="cs-input cs-var-el-dd-click cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">
                                    <label>Variable Name</label>
                                    <input type="text" placeholder="Select Variable" class="cs-pe-none cs-cur " disabled />
                                </div>
                            </div>
                            <div class="cs-pad cs-pull-left cs-ts-18 cs-pramtr-trg-blk-tog cs-cur">
                                <i class="icon-cs-new"></i>
                            </div>
                        </div>
                        <div class="clearfix cs-prameter-trig-block cs-pad cs-rmar cs-bmar cs-bg-white cs-hide">
                            <div class="cs-cell-12">
                                <div class="cs-input cs-layoutname cs-layout-name-cus">
                                    <div class="clearfix">
                                        <label for="layoutname">Variable Name</label>
                                        <input id="layoutname" type="text" name="layoutname" class="cs-pe-none cs-cur" placeholder="Enter text here">
                                    </div>
                                </div>
                                <div class="clearfix">
                                    <span class="cs-graylightc cs-rsmar">Prameter</span>
                                    <label class="switch-toggle cs-lsmar">
                                        <input type="checkbox" class="cs-prameter-enable">
                                        <div class="slider-toggle round-toggle"></div>
                                    </label>
                                </div>
                            </div>
                            <div class="cs-cell-12">
                                <div class="cs-input">
                                    <label>Data Type</label>
                                    <select>
                                        <option>Field Type1</option>
                                        <option>Field Type2</option>
                                        <option>Field Type3</option>
                                        <option>Field Type4</option>
                                    </select>
                                </div>
                                <div class="cs-input cs-hide cs-ps-pram-val">
                                    <label>Parameter Type</label>
                                    <select>
                                        <option>Field Type1</option>
                                        <option>Field Type2</option>
                                        <option>Field Type3</option>
                                        <option>Field Type4</option>
                                    </select>
                                </div>
                            </div>
                            <div class="clearfix">
                                <div class="cs-tr">
                                    <a href="#" class="cs-btn cs-btn-sm cs-btn-info cs-save-assign">Save</a>
                                </div>
                            </div>
                        </div>
                    </div> 
                    `
                    if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                        $(this).children('.cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {     
                                if($(this).hasClass("cs-closebrowserActivity"))  {
                                $(getElementHtml).insertBefore($(this));
                                }   
                                else{    
                                $(getElementHtml).insertBefore($(this));                 
                            }
                            i = 1;
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
                        }
                    }

                    else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                        $(this).children('.cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {     
                                if($(this).hasClass("cs-openbrowserActivity"))  {
                                $(getElementHtml).insertAfter($(this));
                                }   
                                else{                       
                                $(getElementHtml).insertBefore($(this));                 
                            }
                            i = 1;
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo(this);
                        }
                    }
                    
                    else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore($(this));
                            i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Assignment");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            else if ($(ui.draggable).hasClass("cs-verificationActivity")) {
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = `
                    <div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-verificationActivity cs-pr cs-pb-blk">
                        <div class="cs-pa cs-activity-title cs-ts-10">Verification Activity</div>
                        <div class="cs-activity-icon cs-pa">
                            <i class="icon-cs-verification-activity"></i>
                        </div>
                        <span class="cs-remove-activity cs-pa cs-cur">
                            <i class="icon-cs-delete"></i>
                        </span>
                        <div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">
                            <div class="clearfix cs-tr">
                                <span class="cs-rmar cs-snapshot cs-pr cs-cur"><i class="icon-cs-camera"></i></span>
                                <span class="cs-rmar cs-status cs-pr cs-cur"><i class="fa fa-line-chart"></i></span>
                                <span class="cs-cur cs-ts-14 cs-textb">{ }</i></span>
                                <div class="clearfix cs-inline">
                                    <span class="cs-graylightc cs-rsmar">Custom Expression</span>
                                    <label class="switch-toggle cs-lsmar">
                                        <input type="checkbox" class="cs-cus-exp-tog">
                                        <div class="slider-toggle round-toggle"></div>
                                    </label>
                                </div>
                            </div>
                            <div class="cs-textarea cs-pr cs-at-dd-expr-txtar">
                                <div class="clearfix cs-tmar">
                                    <span class="cs-rmar cs-exprbuilder cs-pr cs-cur cs-pull-right cs-tsmar" title="Edit Expression">
                                        <i class="icon-cs-expression-edit"></i></span>
                                </div>
                                <label for="expression">Expression</label>
                                <textarea placeholder="Enter Expression..."></textarea>
                            </div>
                            <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
                                <div class="cs-cell-8">
                                    <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                        <label>Left Expression</label><span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                        <input type="text" placeholder="Select Expression"/ disabled class="cs-ab-textinput cs-cur cs-pe-none">
                                        <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                            <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                        </div>
                                    </div>
                                </div>
                                <div class="cs-cell-8">
                                    <div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                        <label>Operators</label>
                                        <input type="text"class="cs-cur cs-pe-none" placeholder="Select Operators"/ disabled>
                                    </div>
                                </div>
                                <div class="cs-cell-8">
                                    <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                        <label>Right Expression</label>
                                        <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                        <input type="text" placeholder="Select Expression"/ disabled class="cs-ab-textinput cs-cur cs-pe-none"">
                                        <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                            <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            </div>
                            <div class="cs-textarea cs-pr cs-error-message">
                                <label for="Message">Message</label>
                                <textarea placeholder="Enter Error Message..."></textarea>
                            </div>
                        </div>
                    </div> 
                    `;
                    if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                        $(this).children('.cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {     
                                if($(this).hasClass("cs-closebrowserActivity"))  {
                                $(getElementHtml).insertBefore($(this));
                                }   
                                else{    
                                $(getElementHtml).insertBefore($(this));                 
                            }
                            i = 1;
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
                        }
                    }

                    else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                        $(this).children('.cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {     
                                if($(this).hasClass("cs-openbrowserActivity"))  {
                                $(getElementHtml).insertAfter($(this));
                                }   
                                else{                       
                                $(getElementHtml).insertBefore($(this));                 
                            }
                            i = 1;
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo(this);
                        }
                    }
                    
                    else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) && (!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {                          
                            $(getElementHtml).insertBefore($(this));
                            i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Verification");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            else if ($(ui.draggable).hasClass("cs-assertionActivity")) {
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = `
                    <div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-assertionActivity cs-pr cs-pb-blk">
                        <div class="cs-pa cs-activity-title cs-ts-10">Assertion Activity</div>
                        <div class="cs-activity-icon cs-pa">
                            <i class="icon-cs-assertion-activity"></i>
                        </div>
                        <span class="cs-remove-activity cs-pa cs-cur">
                            <i class="icon-cs-delete"></i>
                        </span>
                    
                    
                        <div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">
                            <div class="clearfix cs-tr">
                                <span class="cs-cur cs-ts-14 cs-textb">{ }</i></span>
                                <div class="clearfix cs-inline">
                                    <span class="cs-graylightc cs-rsmar">Custom Expression</span>
                                    <label class="switch-toggle cs-lsmar">
                                        <input type="checkbox" class="cs-cus-exp-tog">
                                        <div class="slider-toggle round-toggle"></div>
                                    </label>
                                </div>
                            </div>
                            <div class="cs-textarea cs-pr cs-at-dd-expr-txtar">
                                <div class="clearfix cs-tmar">
                                    <span class="cs-rmar cs-exprbuilder cs-pr cs-cur cs-pull-right cs-tsmar" title="Edit Expression">
                                        <i class="icon-cs-expression-edit"></i>
                                    </span>
                                </div>
                                <label for="expression">Expression</label>
                                <textarea placeholder="Enter Expression..."></textarea>
                            </div>
                            <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
                                <div class="cs-cell-8">
                                    <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                        <label>Left Expression</label>
                                        <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                        <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-cur cs-pe-none" / disabled>
                                        <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                            <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                        </div>
                                    </div>
                                </div>
                                <div class="cs-cell-8">
                                    <div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                        <label>Operators</label>
                                        <input type="text" placeholder="Select Operators " class="cs-cur cs-pe-none" disabled>
                                    </div>
                                </div>
                                <div class="cs-cell-8">
                                    <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                        <label>Right Expression</label><span
                                            class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                        <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-cur cs-pe-none"/ disabled>
                                        <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                            <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="cs-textarea cs-pr cs-error-message">
                                <label for="Message">Message</label>
                                <textarea placeholder="Enter Error Message..."></textarea>
                            </div>
                        </div>
                    </div> `;
                    if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                        $(this).children('.cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {     
                                if($(this).hasClass("cs-closebrowserActivity"))  {
                                $(getElementHtml).insertBefore($(this));
                                }   
                                else{    
                                $(getElementHtml).insertBefore($(this));                 
                            }
                            i = 1;
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
                        }
                    }

                    else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                        $(this).children('.cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {     
                                if($(this).hasClass("cs-openbrowserActivity"))  {
                                $(getElementHtml).insertAfter($(this));
                                }   
                                else{                       
                                $(getElementHtml).insertBefore($(this));                 
                            }
                            i = 1;
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo(this);
                        }
                    }
                    
                    else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore($(this));
                            i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Assertion");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            else if ($(ui.draggable).hasClass("cs-login")) {
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-loginActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Login</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-logs-import"></i>' +
                        '</div>' +
                        '<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>' +
                        '<div class="clearfix cs-rmar cs-bmar">' +
                        '<div class="clearfix">' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-login-inp cs-login-username">' +
                        '<label>User Name</label>' +
                        '<input type="text" placeholder="Username">' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-login-inp cs-login-password">' +
                        '<label>Password</label>' +
                        '<input type="password" placeholder="Password">' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>';
                        if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                            $(this).children('.cs-at-layoutcontroweach').each(function () {
                if ($(this).offset().top >= ui.offset.top) //compare
                {     
                    if($(this).hasClass("cs-closebrowserActivity"))  {
                    $(getElementHtml).insertBefore($(this));
                    }   
                    else{    
                    $(getElementHtml).insertBefore($(this));                 
                }
                i = 1;
                    return false; //break loop
                }
            });
            if (i != 1) //if element dropped at the end of cart
            {
                $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
            }
                        }

                        else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                             $(this).children('.cs-at-layoutcontroweach').each(function () {
                if ($(this).offset().top >= ui.offset.top) //compare
                {     
                    if($(this).hasClass("cs-openbrowserActivity"))  {
                    $(getElementHtml).insertAfter($(this));
                    }   
                    else{                       
                    $(getElementHtml).insertBefore($(this));                 
                }
                i = 1;
                    return false; //break loop
                }
            });
            if (i != 1) //if element dropped at the end of cart
            {
                $(getElementHtml).appendTo(this);
            }
                        }
                        
                        else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore($(this));
                            i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Login");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            else if ($(ui.draggable).hasClass("cs-fileactivity")) {
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-fileActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">File Activity</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-file-text-o"></i>' +
                        '</div>' +
                        '<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>' +
                        '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
                        '<div class="clearfix">' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-fileactivity-inp cs-fileactivity-filetype">' +
                        '<label>File Type</label>' +
                        '<select>'+
                        '<option value="Read">Read</option>'+
                        '<option value="Write">Write</option>'+
                        '</select>'+
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-fileactivity-inp cs-fileactivity-source">' +
                        '<label>Source</label>' +
                        '<input type="text">' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-pr cs-fileactivity-inp cs-fileactivity-target">' +
                        '<label>Target (Data Table)</label>' +
                        '<input type="text">' +
                        '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>';
                        if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                            $(this).children('.cs-at-layoutcontroweach').each(function () {
                if ($(this).offset().top >= ui.offset.top) //compare
                {     
                    if($(this).hasClass("cs-closebrowserActivity"))  {
                    $(getElementHtml).insertBefore($(this));
                    }   
                    else{    
                    $(getElementHtml).insertBefore($(this));                 
                }
                i = 1;
                    return false; //break loop
                }
            });
            if (i != 1) //if element dropped at the end of cart
            {
                $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
            }
                        }

                        else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                             $(this).children('.cs-at-layoutcontroweach').each(function () {
                if ($(this).offset().top >= ui.offset.top) //compare
                {     
                    if($(this).hasClass("cs-openbrowserActivity"))  {
                    $(getElementHtml).insertAfter($(this));
                    }   
                    else{                       
                    $(getElementHtml).insertBefore($(this));                 
                }
                i = 1;
                    return false; //break loop
                }
            });
            if (i != 1) //if element dropped at the end of cart
            {
                $(getElementHtml).appendTo(this);
            }
                        }
                        
                        else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore($(this));
                            i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csFileAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            else if ($(ui.draggable).hasClass("cs-logout")) {
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-logoutActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Logout</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-logout"></i>' +
                        '</div>' +
                        '<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>' +
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
                        '</div>';
                    '</div>';
                    if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                        $(this).children('.cs-at-layoutcontroweach').each(function () {
                if ($(this).offset().top >= ui.offset.top) //compare
                {     
                    if($(this).hasClass("cs-closebrowserActivity"))  {
                    $(getElementHtml).insertBefore($(this));
                    }   
                    else{    
                    $(getElementHtml).insertBefore($(this));                 
                }
                i = 1;
                    return false; //break loop
                }
            });
            if (i != 1) //if element dropped at the end of cart
            {
                $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
            }
                    }

                    else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                         $(this).children('.cs-at-layoutcontroweach').each(function () {
                if ($(this).offset().top >= ui.offset.top) //compare
                {     
                    if($(this).hasClass("cs-openbrowserActivity"))  {
                    $(getElementHtml).insertAfter($(this));
                    }   
                    else{                       
                    $(getElementHtml).insertBefore($(this));                 
                }
                i = 1;
                    return false; //break loop
                }
            });
            if (i != 1) //if element dropped at the end of cart
            {
                $(getElementHtml).appendTo(this);
            }
                    }
                    
                    else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore($(this));
                            i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Logout");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            else if ($(ui.draggable).hasClass("cs-screenshot")) {
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-screenshotActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Screenshot</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-screenshot"></i>' +
                        '</div>' +
                        '<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>' +
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
                        '<div class="clearfix">' +
                        '<div class="cs-cell-4">' +
                        '<label>File Name</label>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<input type="text" class="cs-scshot-fname"/>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>';
                        if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                            $(this).children('.cs-at-layoutcontroweach').each(function () {
                                if ($(this).offset().top >= ui.offset.top) //compare
                                {     
                                    if($(this).hasClass("cs-closebrowserActivity"))  {
                                    $(getElementHtml).insertBefore($(this));
                                    }   
                                    else{    
                                    $(getElementHtml).insertBefore($(this));                 
                                }
                                i = 1;
                                    return false; //break loop
                                }
                            });
                            if (i != 1) //if element dropped at the end of cart
                            {
                                $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
                            }
                        }

                        else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                            $(this).children('.cs-at-layoutcontroweach').each(function () {
                                if ($(this).offset().top >= ui.offset.top) //compare
                                {     
                                    if($(this).hasClass("cs-openbrowserActivity"))  {
                                    $(getElementHtml).insertAfter($(this));
                                    }   
                                    else{                       
                                    $(getElementHtml).insertBefore($(this));                 
                                }
                                i = 1;
                                    return false; //break loop
                                }
                            });
                            if (i != 1) //if element dropped at the end of cart
                            {
                                $(getElementHtml).appendTo(this);
                            }
                        }
                        
                        else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore($(this));
                            i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "ScreenShot");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            // Launch Browser start 
            else if ($(ui.draggable).hasClass("cs-launch-browser")) {
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-LaunchBrowser cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Launch Browser</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-launch-browser"></i>' +
                        '</div>' +
                        '<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>' +
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
                        '</div>';
                    '</div>';
                    if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                        $(this).children('.cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {     
                                if($(this).hasClass("cs-closebrowserActivity"))  {
                         $(getElementHtml).insertBefore($(this));
                                }   
                                else{    
                                $(getElementHtml).insertBefore($(this));                 
                            }
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                            $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
                        }
                    }

                    else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                        $(this).children('.cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {     
                                if($(this).hasClass("cs-openbrowserActivity"))  {
                                $(getElementHtml).insertAfter($(this));
                                }   
                                else{                       
                                $(getElementHtml).insertBefore($(this));                 
                            }
                            i = 1;
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                        $(getElementHtml).appendTo(this);
                    }
                    }
                    
                    else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore($(this));
                            i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
					droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Launchbrowser");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            // close Browser start 
            else if($(ui.draggable).hasClass("cs-close-browser")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-CloseBrowser cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Close Browser</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-close-browser"></i>' +
                        '</div>' +
						'<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
						'</div>';
                        '</div>';
                    if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                                if($(this).hasClass("cs-closebrowserActivity"))  {
                         $(getElementHtml).insertBefore($(this));
                                }   
                                else{    
                                $(getElementHtml).insertBefore($(this));                 
                            }
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                            $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
                        }
                    }

                    else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                        $(this).children('.cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {     
                                if($(this).hasClass("cs-openbrowserActivity"))  {
                                $(getElementHtml).insertAfter($(this));
                                }   
                                else{                       
                                $(getElementHtml).insertBefore($(this));                 
                            }
                            i = 1;
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                        $(getElementHtml).appendTo(this);
                    }
                    }
                    
                    else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore($(this));
                            i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
					droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Closebrowser");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            else if($(ui.draggable).hasClass("cs-data-table")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-aparent cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-DataTable cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-12">Data Table Activity</div>' +
                        '<div class="cs-vpad cs-drg-txt-box-par"><div class="cs-center cs-graylightc cs-drg-txt-box">Drag and drop your data table function only...</div></div>'+
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-data-table-activity"></i>' +
                        '</div>' +
						'<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '</div>';
                    if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                                if($(this).hasClass("cs-closebrowserActivity"))  {
                         $(getElementHtml).insertBefore($(this));
                                }   
                                else{    
                                $(getElementHtml).insertBefore($(this));                 
                            }
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                            $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
                        }
                    }

                    else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                        $(this).children('.cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {     
                                if($(this).hasClass("cs-openbrowserActivity"))  {
                                $(getElementHtml).insertAfter($(this));
                                }   
                                else{                       
                                $(getElementHtml).insertBefore($(this));                 
                            }
                            i = 1;
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                        $(getElementHtml).appendTo(this);
                    }
                    }
                    
                    else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore($(this));
                            i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
					droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "DataTableActivity");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
                $(".cs-at-box-head-field").removeClass("active");
                $(".cs-data-table-title").addClass("active");
                $(".cs-playbackhead-title").addClass("cs-bline active");
                $(".cs-at-box-head-field").addClass("cs-cur");
                $(".cs-at-box-head-field.cs-data-table-title").removeClass("cs-hide");
                $(".cs-pb-activities-par").toggleClass("cs-hide");
                $(".cs-pb-data-table-par").toggleClass("cs-hide");
                datatableDroppable()
            }
            else if($(ui.draggable).hasClass("cs-excel-auto-act")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-aparent cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-excel-auto-act-child cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-12">Excel Activity</div>' +
                        '<div class="cs-vpad cs-drg-txt-box-par"><div class="cs-center cs-graylightc cs-drg-txt-box">Drag and drop your excel function only...</div></div>'+
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-file-excel-o"></i>' +
                        '</div>' +
						'<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '</div>';
                    if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                                if($(this).hasClass("cs-closebrowserActivity"))  {
                         $(getElementHtml).insertBefore($(this));
                                }   
                                else{    
                                $(getElementHtml).insertBefore($(this));                 
                            }
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                            $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
                        }
                    }

                    else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                        $(this).children('.cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {     
                                if($(this).hasClass("cs-openbrowserActivity"))  {
                                $(getElementHtml).insertAfter($(this));
                                }   
                                else{                       
                                $(getElementHtml).insertBefore($(this));                 
                            }
                            i = 1;
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                        $(getElementHtml).appendTo(this);
                    }
                    }
                    
                    else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore($(this));
                            i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
					droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "ExcelAutomationAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
                $(".cs-at-box-head-field").removeClass("active");
                $(".cs-excelauto-title").addClass("active");
                $(".cs-playbackhead-title").addClass("cs-bline active");
                $(".cs-at-box-head-field").addClass("cs-cur");
                $(".cs-at-box-head-field.cs-excelauto-title").removeClass("cs-hide");
                $(".cs-pb-activities-par").toggleClass("cs-hide");
                $(".cs-pb-excelauto-par").toggleClass("cs-hide");
                excelAutomationDroppable();
                excelReadDroppable();
            }
            else if($(ui.draggable).hasClass("cs-shortcut-activity")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-ShortcutActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Hotkey</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-short-cut"></i>' +
                        '</div>' +
                        '<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
                            '<div class="clearfix">' +
                                '<input type="text" class="cs-shortcutkeyentry" placeholder="Enter Hotkey"/>' +
                            '</div>' +
                        '</div>';
                        '</div>';
                    if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                                if($(this).hasClass("cs-closebrowserActivity"))  {
                         $(getElementHtml).insertBefore($(this));
                                }   
                                else{    
                                $(getElementHtml).insertBefore($(this));                 
                            }
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                            $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
                        }
                    }

                    else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                        $(this).children('.cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {     
                                if($(this).hasClass("cs-openbrowserActivity"))  {
                                $(getElementHtml).insertAfter($(this));
                                }   
                                else{                       
                                $(getElementHtml).insertBefore($(this));                 
                            }
                            i = 1;
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                        $(getElementHtml).appendTo(this);
                    }
                    }
                    
                    else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore($(this));
                            i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Hotkey");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            else if ($(ui.draggable).hasClass("cs-explicit-time_out")) {
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-explicit-time_out cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Explicit-Timeout</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-time-zone"></i>' +
                        '</div>' +
                        '<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>' +
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
                        '<div class="clearfix cs-tr">           ' +
                        '<span class="cs-rmar cs-snapshot cs-pr cs-cur"><i class="icon-cs-camera"></i></span>' +
                        '<span class="cs-rmar cs-status cs-pr cs-cur"><i class="fa fa-line-chart"></i></span>' +
						 '<span class="cs-cur cs-ts-14 cs-rmar cs-textb">{ }</i></span>' +
                        '<div class="clearfix cs-inline">' +
                        '<span class="cs-graylightc cs-rsmar">Custom Expression</span>' +
                        '<label class="switch-toggle cs-lsmar">' +
                        '<input type="checkbox" class="cs-cus-exp-tog">' +
                        '<div class="slider-toggle round-toggle"></div>' +
                        '</label>' +
                        '</div>' +
                        '</div> ' +
                        '<div class="cs-textarea cs-pr cs-at-dd-expr-txtar">' +
						 '<div class="clearfix cs-tmar">' +
						'<span class="cs-rmar cs-exprbuilder cs-pr cs-cur cs-pull-right cs-tsmar" title="Edit Expression"><i class="icon-cs-expression-edit"></i></span>' +
						 '</div> ' +
                         '<div class="cs-cell-12f">'+
                         '<label for="expression">Expression</label>' +
                        '<textarea placeholder="Enter Expression..."></textarea>' +
                         '</div>'+
                         '<div class=" cs-lmar cs-cell-11f">'+
                     '<div class="cs-input cs-var-el-dd-click cs-operator explct-wait-section cs-rad-none">'+
                    
                    '<label for="wait_tym">Wait time</label> '+   // datepicker
                    '<input type="text" class="wait_tym cs-custom-explct-exprs"value="" autocomplete="off">'+
                    '</div>'+
                     '</div>'+
                        
                        '</div>' +
                        '<div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-var-el-dd-click cs-left-expr explct-hide-var" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">' +
                        '<label>Left Expression</label><span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Ele</span>' +
                        '<input type="text" placeholder="Select Expression" class= "cs-cur cs-ab-textinput cs-pe-none" disabled/>' +
                        '<div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">'+
                        '<img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">'+
                    '</div>'+
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-var-el-dd-click cs-operator  cs-explct-opertr cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">' +
                        '<label>Operators</label>' +
                        '<span class="cs-show">'+
                        '<span class="cs-hide cs cs-apnd-oprts"></span>'+
                        '<input type="text" class="cs-slct-oprts cs-cur cs-pe-none" placeholder="Select Operators" disabled/>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        // '<div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">' +
                        // '<label>Right Expression</label><span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>' +
                        // '<input type="text" placeholder="Select Expression" disabled/>' +
                        // '</div>' +
                        // '</div>' +
                        // '</div>' +
                        // '<div class="cs-textarea cs-pr cs-error-message">' +
                        // '<label for="Message">Message</label>' +
                        // '<textarea placeholder="Enter Error Message..."></textarea>' +
                        // '</div>' +
                        // '</div>' +
                        '<div class="cs-input cs-var-el-dd-click explct-wait-section cs-operator cs-rad-none">'+
                        
                        '<label for="wait_tym">Wait time</label> '+   // datepicker
                        '<input type="text" class="wait_tym cs-cur  explct-right-expr" value="" autocomplete="off">'+
                        '</div>';
                        
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "explcit-wait-time");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            layoutempty();
            contMainSortable();
            allTooltipMain();
            datatableDroppable();
            eachrowDroppable(); 
            excelAutomationDroppable();
            excelReadDroppable();
            $('.wait_tym').timepicker({
                showSecond: true,
                timeFormat: 'hh:mm:ss:'
            }); 
        }
    });
}

function acrivitiesDropable() {
    $(".cs-pb-create-board .cs-at-layouteachmain .cs-at-layouttogglecontentmain").droppable({
        activeClass: "ui-state-default",
        hoverClass: "ui-drop-hover",
        accept: ":not(.ui-sortable-helper)",
        greedy: "greedy",
        over: function(event, ui) {
            var $this = $(this);
            $(".cs-apptest-main .cs-pb-create-board .cs-pb-ly-droparea").droppable("option", "disabled", true);
            $(this).closest('.cs-layout-container').addClass('cs-layouthighlight')
        },
        out: function() {
            $(".cs-apptest-main .cs-pb-create-board .cs-pb-ly-droparea").droppable("option", "disabled", false);
            $('.cs-layouthighlight').removeClass('cs-layouthighlight')
        },
        drop: function(event, ui) {
          if ($("body").attr("basicAssignments") == "false") {
            if ($(ui.draggable).hasClass("cs-assignmentActivity")) {
                var getElementHtml = 
                    '<div class="clearfix cs-at-layoutcontroweach dropAcrive cs-activityBlock cs-assignmentActivity cs-pr cs-pb-blk">' +
                    '<div class="cs-pa cs-activity-title cs-ts-10">Assignment Activity</div>' +
                    '<div class="cs-activity-icon cs-pa">' +
                    '<i class="icon-cs-assignment-activity"></i>' +
                    '</div>' +
                    '<span class="cs-remove-activity cs-pa cs-cur">' +
                    '<i class="icon-cs-delete"></i>' +
                    '</span>' +
                    '<div class="clearfix cs-at-dd-exprs">' +
                    '<div class="cs-inline cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-asgnm-exp" data-cs-dropdown="#cs-at-condexpresselectndroplist">' +
                    '<span class="cs-label cs-ts-10 cs-label-warning">Ele</span>' +
                    '<span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-ex-ele-main">' +
                    '<div class="cs-input cs-var-el-dd-click cs-asgn-elem cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="ele">' +
                    '<label>Element Name</label>' +
                    '<input type="text" class="cs-cur cs-pe-none" placeholder="Select Element" disabled/>' +
                    '</div>' +
                    '<div class="cs-input cs-asgnm-cus-exp">' +
                    '<label>Expression</label>' +
                    '<input type="text" placeholder="Enter Expression"/>' +
                    '</div>' +
                    '<div class="cs-input cs-var-el-dd-click cs-asgn-var cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">' +
                    '<label>Variable Name</label>' +
                    '<input type="text"class="cs-cur cs-pe-none" placeholder="Select Variable" disabled/>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-pad cs-pull-left cs-ts-18">' +
                    '<i class="icon-cs-angle-double-right"></i>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-var-el-dd-click cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">' +
                    '<label>Variable Name</label>' +
                    '<input type="text" class="cs-cur cs-pe-none" placeholder="Select Variable" disabled/>' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-pad cs-pull-left cs-ts-18 cs-pramtr-trg-blk-tog cs-cur">' +
                    '<i class="icon-cs-new"></i>' +
                    '</div>' +
                    '</div>' +
                    '<div class="clearfix cs-prameter-trig-block cs-pad cs-rmar cs-bmar cs-bg-white cs-hide">' +
                    '<div class="cs-cell-12">' +
                    '<div class="cs-input cs-layoutname cs-layout-name-cus">' +
                    '<div class="clearfix">' +
                    '<label for="layoutname">Variable Name</label>' +
                    '<input id="layoutname" type="text" name="layoutname" placeholder="Enter text here">' +
                    '</div>' +
                    '</div>' +
                    '<div class="clearfix">' +
                    '<span class="cs-graylightc cs-rsmar">Prameter</span>' +
                    '<label class="switch-toggle cs-lsmar">' +
                    '<input type="checkbox" class="cs-prameter-enable">' +
                    '<div class="slider-toggle round-toggle"></div>' +
                    '</label>' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-12">' +
                    '<div class="cs-input">' +
                    '<label>Data Type</label>' +
                    '<select>' +
                    '<option>Field Type1</option>' +
                    '<option>Field Type2</option>' +
                    '<option>Field Type3</option>' +
                    '<option>Field Type4</option>' +
                    '</select>' +
                    '</div>' +
                    '<div class="cs-input cs-hide cs-ps-pram-val">' +
                    '<label>Parameter Type</label>' +
                    '<select>' +
                    '<option>Field Type1</option>' +
                    '<option>Field Type2</option>' +
                    '<option>Field Type3</option>' +
                    '<option>Field Type4</option>' +
                    '</select>' +
                    '</div>' +
                    '</div>' +
                    '<div class="clearfix">' +
                    '<div class="cs-tr">' +
                    '<a href="#" class="cs-btn cs-btn-sm cs-btn-info cs-save-assign">Save</a>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '</div>';
                $(this).children('.cs-at-layoutcontroweach').each(function () {
                    if ($(this).offset().top >= ui.offset.top) //compare
                    {
                     $(getElementHtml).insertBefore($(this));
                     i = 1;
                     return false; //break loop
                    }
                });
                if (i != 1) //if element dropped at the end of cart
                {
                    $(getElementHtml).appendTo(this);
                }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Assignment");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            else if ($(ui.draggable).hasClass("cs-at-layout-main")) {   
                var displayName = $(ui.draggable).data("eachLayoutListData").displayName;
                var layoutId = $(ui.draggable).data("eachLayoutListData").layoutId;
                var layoutElementsList = $(ui.draggable).data("eachLayoutListData").layoutElementsList;
                var getElementHtml = 
                    '<div class="clearfix cs-at-layouteachmain cs-aparent cs-at-layoutcontroweach cs-layout-container dropAcrive cs-pr cs-pb-blk">' +
                    '<h3 class="clearfix cs-nomar cs-bline">' +
                    '<span class="cs-remove-activity cs-pa cs-cur">' +
                    '<i class="icon-cs-delete"></i>' +
                    '</span>' +
                    '<a class="cs-at-layouttoggletrigger cs-cur cs-inline cs-pad"><i class="icon-cs-down-arrow"></i></a>' +
                    '<span class="cs-at-layouttitle cs-inline cs-ts-14 cs-tw-600">' + displayName + '</span>' +
                    '<span class="cs-inline cs-ts-14 cs-tw-600 cs-hpad cs-rline">' +
                    '<span><i class="icon-cs-element-count cs-ts-18"></i></span>' +
                    '<span class="cs-badge cs-badge-info cs-lmar">40</span>' +
                    '</span>' +
                    '<span class="cs-inline cs-hpad">' +
                    '<span><i class="icon-cs-element-action-defined cs-ts-18"></i></span>' +
                    '<span class="cs-badge cs-badge-info cs-b-white cs-line cs-blackc cs-lsmar cs-assigned-elem">04</span>' +
                    '<span class="cs-hsmar"><i class="icon-cs-element-action-undefined cs-ts-18"></i></span>' +
                    '<span class="cs-badge cs-badge-info cs-b-white cs-line cs-blackc cs-non-aggigned-elem">02</span>' +
                    '</span>' +
                    '<a class="cs-inline cs-cur" data-cs-dropdown="#cs-at-eachTemplateFilter"><i class="icon-cs-filter-o cs-ts-14"></i></a>' +
                    '<div class="cs-hmar cs-lline cs-inline cs-valignm cs-layout-description-container">' +
                    '<input type="text" class="cs-inline cs-lmar cs-layout-description-input" placeholder="Enter Description">' +
                    '</div>' +
					'<div class="cs-inline cs-lsmar cs-layout-setasheader"><input type="radio" id="rad_'+radID+'" name="layoutheadselect"><label for="rad_'+radID+'">Set Header</label></div>'+
                    '</h3>' +
                    '<div class="clearfix cs-at-layouttogglecontentmain cs-pr">' +
                    '</div>' +
                    '</div>';
					radID++;
                $(this).children('.cs-at-layoutcontroweach').each(function () {
                    if ($(this).offset().top >= ui.offset.top) //compare
                    {
                     $(getElementHtml).insertBefore($(this));
                     i = 1;
                     return false; //break loop
                    }
                });
                if (i != 1) //if element dropped at the end of cart
                {
                    $(getElementHtml).appendTo(this);
                }
                $(layoutElementsList).each(function(index, val) {
                    var layoutElementId = val.layoutElementId;
                    var getElementName = val.elementName;
                    var getMandatory = val.isMandatory;
                    var getDyna = val.isDynamic;
                    var mandClass = "";
                    if(getMandatory == "Y") {
                        mandClass = " cs-ly-mandatory";
                    }
                    var getElementtyp = val.elementType.toLowerCase().replace(/\s/g, '');
                    var actionValueType="";
                    var dynaEditHtml="";
                    if(getDyna == "Y") {
                        dynaEditHtml = '<a class="cs-at-layouteachelementmainactions cs-edit-element cs-inline cs-cur cs-hpad cs-tooltip-top" title="Edit">' +
                        '<i class="icon-cs-edit cs-ts-16"></i>' +
                        '</a>';
                    }
                    if("draganddrop"==getElementtyp){
                    	actionValueType="Element";
                    }else{
                    	actionValueType="Constant";
                    }
                    $(".dropAcrive > .cs-at-layouttogglecontentmain").append('<div class="cs-at-layoutcontroweach clearfix dropElement cs-each-element'+mandClass+' cs-pr" data-eletype="' + getElementtyp + '">' +
                        '<div class="cs-pull-left">' +
                            '<div class="cs-copy-elemtype cs-tooltip-right" title="Copy Element Name">' +
                                '<div class="cs-at-elemntTypeicon sprite cs-cf-' + getElementtyp + ' cs-inline"></div>' +
                                '<div class="cs-hide cs-copy-et"><i class="icon-cs-duplicate"></i></div>' +
                            '</div>'+
                        '<div class="cs-inline cs-vt-align cs-at-elementname cs-hpad cs-lsmar  cs-tooltip-top" title="'+ getElementName +'">' + getElementName + '</div>' +
                        '<div class="cs-inline cs-cur cs-vt-align cs-circle cs-line cs-ts-12 cs-hpad cs-at-eleacttyp-clk" data-cs-dropdown="#cs-at-elementactiontype">' +
                        '<span class="cs-inline cs-ts-11 cs-unamepwd-type">Select action</span>' +
                        '<span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-at-ele-val-block cs-pull-left cs-hide">' +
                        '<div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist">' +
                        '<span class="cs-label cs-ts-10 cs-label-warning">Exp</span>' +
                        '<span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span>' +
                        '</div>' +
                        '<div class="cs-at-ele-inp-typ cs-inline">' +
                        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Con">' +
                        '<input type="text" name="constantValue" placeholder="Enter The Constant">' +
                        '</div>' +
                        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Att">' +
                        '<input type="text" name="AttributeValue" placeholder="Enter The Attribute">' +
                        '</div>' +
                        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Aut">' +
                        '<input type="number" name="AutonumberingValue" placeholder="Enter The Number">' +
                        '</div>' +
                        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Var"  data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">' +
                        '<input type="text" name="variableValue" placeholder="Select The Variable" disabled>' +
                        '</div>' +
                        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Ele"  data-cs-dropdown="#cs-at-leftexp" data-dd-type="ele">' +
                        '<input type="text" name="ElementValue" placeholder="Select The Element" disabled>' +
                        '</div>' +
                        '<div class="cs-vt-align cs-ts-12 cs-hspad cs-at-contentEntryinput" data-contentValue="Exp">' +
                        '<span class="cs-inline">' +
                        '<input type="text" name="expressionValue" class="cs-inline" placeholder="Enter Expression Loader Template Dataset Fusion Map"/>' +
                        '</span>' +
                        '<a class="cs-inline cs-cur cs-hpad">{ }</a>' +
						'<span class="cs-exprbuilder cs-pr cs-cur" title="Edit Expression"><i class="icon-cs-expression-edit"></i></span>' +
                        '</div>' +
                        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Pix">' +
                        '<label>X</label>' +
                        '<input type="number" class="cs-xposition" name="xValue">' +
                        '<label>Y</label>' +
                        '<input type="number" class="cs-yposition" name="yValue">' +
                        '</div>' +
						'<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Ind">' +
						'<input type="number" name="index" placeholder="Ender the index">' +
						'</div>' +
                        '</div>' +
                        '</div>' +
						'<div class="cs-pull-left cs-elem-timeout cs-lmar cs-hide">' +
                        '<div class="cs-inline cs-rmar"><i class="icon icon-cs-clock-o cs-orangec cs-valignm cs-ts-16"></i></div>' +
                        '<span class="cs-elem-timeout-sec cs-inline cs-pr">' +
                        '<input type="number" placeholder="sec">' +
                        '<span class="cs-sec-text cs-hide cs-pa">s</span>' +
                        '</span>' +
                        '</div>' +
                        '<a class="cs-at-layouteachelementmainactions cs-copy-element cs-inline cs-cur cs-hpad" title="Copy Element"><i class="icon-cs-files-o cs-ts-16"></i></a>' +
                        '<a class="cs-at-layouteachelementmainactions cs-highlight-element cs-inline cs-cur cs-hpad cs-tooltip-top" title="Highlight">' +
                        '<i class="icon-cs-data-enrichment cs-ts-16"></i>' +
                        '</a>' +
                        '<a class="cs-at-layouteachelementmainactions cs-reset-element cs-inline cs-cur cs-hpad cs-tooltip-top" title="Reset">' +
                        '<i class="icon-cs-reset cs-ts-16"></i>' +
                        '</a>' +
                        dynaEditHtml +
                        '</div>');
                    $(".dropElement").data("eachActivityVO", {
                        "playbackId": "",
                        "createdBy": "",
                        "elementActivityVO": {
                            "elementActivityId": "",
                            "actionValue": "",
                            "dropXOffset": "",
                            "lastModifiedBy": "",
                            "isDynamic": getDyna,
                            "dynamicValue":[],
                            "layoutElementId": layoutElementId,
                            "createdOn": "",
                            "lastModifiedOn": "",
                            "createdBy": "",
                            "elementAction": "",
                            "layoutElementName": getElementName,
                            "dropYOffset": "",
                            "playbackActivityId": "",
                            "timeoutSec": "",
                            "actionValueType": actionValueType,
                            "layoutElementsVO": val
                        },
                        "activityIndex": "",
                        "lastModifiedBy": "",
                        "parentActivityId": "",
                        "activityType": "Element",
                        "createdOn": "",
                        "playbackName": "",
                        "playbackActivityId": "",
                        "lastModifiedOn": ""
                    });
                    if (getElementtyp == "draganddrop") {
                        $(".dropElement").find(".cs-cdx-exp-click").find(".cs-label-warning").text("Pix");
                        $(".dropElement").find(".cs-at-contentEntryinput").addClass("cs-hide");
                        $('.dropElement').find(".cs-at-ele-inp-typ").find(".cs-at-contentEntryinput").each(function() {
                            var inpexptext = $(this).attr("data-contentvalue");
                            if (inpexptext == "Pix") {
                                $(this).removeClass("cs-hide");
                            }
                        });
                    }
                    $(".dropElement").removeClass("dropElement");
                });
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Layout", displayName, layoutId);
                $(".dropAcrive").removeClass("dropAcrive");
                setElementCount();
                if($(this).parents('.cs-at-layouteachmain').length <= 1){
                    var parDiv = $(this).closest('.cs-at-layouteachmain');
                    parDiv.addClass("cond-layout-active");
                    $(this).find(".cs-conditionnActivity").nextAll().addClass("cond-layout-sibling-active");
                    $(this).find(".cs-at-layouttogglecontentmain").addClass("layout-active");
                }
                else {
                    $(this).find(".cs-at-layouttogglecontentmain").addClass("layout-active");
                }
            } 
            else if ($(ui.draggable).hasClass("cs-verificationActivity")) {
                var getElementHtml = `
                <div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-verificationActivity cs-pr cs-pb-blk">
                    <div class="cs-pa cs-activity-title cs-ts-10">Verification Activity</div>
                    <div class="cs-activity-icon cs-pa">
                        <i class="icon-cs-verification-activity"></i>
                    </div>
                    <span class="cs-remove-activity cs-pa cs-cur">
                        <i class="icon-cs-delete"></i>
                    </span>
                    <div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">
                        <div class="clearfix cs-tr">
                            <span class="cs-rmar cs-snapshot cs-pr cs-cur"><i class="icon-cs-camera"></i></span>
                            <span class="cs-rmar cs-status cs-pr cs-cur"><i class="fa fa-line-chart"></i></span>
                            <span class="cs-cur cs-ts-14 cs-textb">{ }</i></span>
                            <div class="clearfix cs-inline">
                                <span class="cs-graylightc cs-rsmar">Custom Expression</span>
                                <label class="switch-toggle cs-lsmar">
                                    <input type="checkbox" class="cs-cus-exp-tog">
                                    <div class="slider-toggle round-toggle"></div>
                                </label>
                            </div>
                        </div>
                        <div class="cs-textarea cs-pr cs-at-dd-expr-txtar">
                            <div class="clearfix cs-tmar">
                                <span class="cs-rmar cs-exprbuilder cs-pr cs-cur cs-pull-right cs-tsmar" title="Edit Expression"><i
                                        class="icon-cs-expression-edit"></i></span>
                            </div>
                            <label for="expression">Expression</label>
                            <textarea placeholder="Enter Expression..."></textarea>
                        </div>
                        <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
                            <div class="cs-cell-8">
                                <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp"
                                    data-dd-type="var-ele">
                                    <label>Left Expression</label><span
                                        class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                    <input type="text" class="cs-cur cs-pe-none" placeholder="Select Expression" disabled />
                                </div>
                            </div>
                            <div class="cs-cell-8">
                                <div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp"
                                    data-dd-type="opr">
                                    <label>Operators</label>
                                    <input type="text" class="cs-cur cs-pe-none" placeholder="Select Operators" disabled />
                                </div>
                            </div>
                            <div class="cs-cell-8">
                                <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp"
                                    data-dd-type="var-ele-con">
                                    <label>Right Expression</label><span
                                        class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                    <input type="text" class="cs-cur cs-pe-none" placeholder="Select Expression" disabled />
                                </div>
                            </div>
                        </div>
                        <div class="cs-textarea cs-pr cs-error-message">
                            <label for="Message">Message</label>
                            <textarea placeholder="Enter Error Message..."></textarea>
                        </div>
                    </div>
                </div>
                `
                ;
                $(this).children('.cs-at-layoutcontroweach').each(function () {
                    if ($(this).offset().top >= ui.offset.top) //compare
                    {
                     $(getElementHtml).insertBefore($(this));
                     i = 1;
                     return false; //break loop
                    }
                });
                if (i != 1) //if element dropped at the end of cart
                {
                    $(getElementHtml).appendTo(this);
                }
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Verification");
                $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            } 
            else if ($(ui.draggable).hasClass("cs-assertionActivity")) {
                var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-assertionActivity cs-pr cs-pb-blk">' +
                    '<div class="cs-pa cs-activity-title cs-ts-10">Assertion Activity</div>' +
                    '<div class="cs-activity-icon cs-pa">' +
                    '<i class="icon-cs-assertion-activity"></i>' +
                    '</div>' +
                    '<span class="cs-remove-activity cs-pa cs-cur">' +
                    '<i class="icon-cs-delete"></i>' +
                    '</span>'

                    +
                    '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
                    '<div class="clearfix cs-tr">                               ' +
					'<span class="cs-cur cs-ts-14 cs-textb">{ }</i></span>' +
                    '<div class="clearfix cs-inline">' +
                    '<span class="cs-graylightc cs-rsmar">Custom Expression</span>' +
                    '<label class="switch-toggle cs-lsmar">' +
                    '<input type="checkbox" class="cs-cus-exp-tog">' +
                    '<div class="slider-toggle round-toggle"></div>' +
                    '</label>' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-textarea cs-pr cs-at-dd-expr-txtar">' +
					 '<div class="clearfix cs-tmar">' +
						'<span class="cs-rmar cs-exprbuilder cs-pr cs-cur cs-pull-right cs-tsmar" title="Edit Expression"><i class="icon-cs-expression-edit"></i></span>' +
						 '</div> ' +
                    '<label for="expression">Expression</label>' +
                    '<textarea placeholder="Enter Expression..."></textarea>' +
                    '</div>' +
                    '<div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">' +
                    '<label>Left Expression</label><span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>' +
                    '<input type="text" placeholder="Select Expression" class="cs-cur cs-pe-none" disabled/>' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">' +
                    '<label>Operators</label>' +
                    '<input type="text" placeholder="Select Operators" class="cs-cur cs-pe-none" disabled/>' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">' +
                    '<label>Right Expression</label><span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>' +
                    '<input type="text" placeholder="Select Expression" class="cs-cur cs-pe-none" disabled/>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-textarea cs-pr cs-error-message">' +
                    '<label for="Message">Message</label>' +
                    '<textarea placeholder="Enter Error Message..."></textarea>' +
                    '</div>' +
                    '</div>' +
                    '</div>';
                $(this).children('.cs-at-layoutcontroweach').each(function () {
                    if ($(this).offset().top >= ui.offset.top) //compare
                    {
                     $(getElementHtml).insertBefore($(this));
                     i = 1;
                     return false; //break loop
                    }
                });
                if (i != 1) //if element dropped at the end of cart
                {
                    $(getElementHtml).appendTo(this);
                }
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Assertion");
                $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            } else if ($(ui.draggable).hasClass("cs-iteraionActivity")) {
                var getElementHtml = '<div class="clearfix cs-aparent dropAcrive cs-at-layoutcontroweach cs-activityBlock cs-iterationActivity cs-pr cs-pb-blk">' +
                                
                    '<div class="cs-pa cs-activity-title cs-ts-10">Iteration Activity</div>' +
                    '<div class="cs-activity-icon cs-pa">' +
                    '<i class="icon-cs-iteration-activity"></i>' +
                    '</div>' +
                    '<span class="cs-remove-activity cs-pa cs-cur">' +
                    '<i class="icon-cs-delete"></i>' +
                    '</span>' +
                    '<div class="clearfix cs-pad cs-rmar cs-bmar">' +
                    '<div class="cs-inline cs-cur cs-vt-align cs-ts-12 cs-cdx-exp-click cs-ite-dd-clk" data-cs-dropdown="#cs-at-condexpresselectndroplist">' +
                    '<span class="cs-label cs-ts-10 cs-label-warning">Con</span>' +
                    '<span class="cs-inline"><i class="icon-cs-caret-down cs-ts-8"></i></span>' +
                    '</div>' +
                    '<div class="cs-at-inp-typ cs-inline">' +
                    '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput" data-contentValue="Con">' +
                    '<input type="Number" name="constantValue" placeholder="Enter The Constant">' +
                    '</div>' +
                    '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Var"  data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">' +
                    '<input type="text" name="VariableValue" placeholder="Select The Variable" disabled>' +
                    '</div>' +
                    '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Lar">' +
                    '<input type="text" name="layoutarrayValue" placeholder="Enter The Layoutarray">' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '</div>';
                $(this).children('.cs-at-layoutcontroweach').each(function () {
                    if ($(this).offset().top >= ui.offset.top) //compare
                    {
                     $(getElementHtml).insertBefore($(this));
                     i = 1;
                     return false; //break loop
                    }
                });
                if (i != 1) //if element dropped at the end of cart
                {
                    $(getElementHtml).appendTo(this);
                }
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Iteration");
                $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                iterationActivityDropable();
            } 
            else if ($(ui.draggable).hasClass("cs-openurl")) {
                var getElementHtml = '<div class="clearfix cs-at-layoutcontroweach cs-activityBlock dropAcrive cs-openurlActivity cs-pr cs-pb-blk">' +
                    '<div class="cs-pa cs-activity-title cs-ts-10">Open Url</div>' +
                    '<div class="cs-activity-icon cs-pa">' +
                    '<i class="icon-cs-link"></i>' +
                    '</div>' +
                    '<span class="cs-remove-activity cs-pa cs-cur">' +
                    '<i class="icon-cs-delete"></i>' +
                    '</span>' +
                    '<div class="clearfix cs-pad cs-rmar cs-bmar">' +
                    '<div class="cs-inline">' +
                    '<div class="cs-inline cs-cur cs-vt-align cs-ts-12 cs-cdx-exp-click cs-openurl-dd-clk" data-cs-dropdown="#cs-at-condexpresselectndroplist">' +
                    '<span class="cs-label cs-ts-10 cs-label-warning">Con</span>' +
                    '<span class="cs-inline"><i class="icon-cs-caret-down cs-ts-8"></i></span>' +
                    '</div>' +
                    '<div class="cs-at-inp-typ cs-inline">' +
                    '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput" data-contentValue="Con">' +
                    '<input type="text" name="constantValue" placeholder="Enter The Constant">' +
                    '</div>' +
                    '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Var"  data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">' +
                    '<input type="text" name="VariableValue" placeholder="Select The Variable" disabled>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '<div class="clearfix">' +
                        '<div class="cs-cell-12">' +
                            '<div class="cs-input">' +
                                '<label>Function</label>' +
                                '<input type="text" placeholder="Select Function" class="cs-ou-fun-inp">' +
                                '<a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a> ' +
                            '</div>' +
                        '</div>' +
                        '<div class="cs-cell-12">' +
                            '<div class="cs-input">' +
                                '<label>Responsbility</label>' +
                                '<input type="text" placeholder="Select Responsbility" class="cs-ou-res-inp">' +
                                '<a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a>' + 
                            '</div>' +
                        '</div>' +
                        '<div class="cs-cell-12">' +
                            '<div class="cs-input">' +
                                '<label>Application</label>' +
                                '<input type="text" placeholder="Select Application" class="cs-ou-app-inp">' +
                                '<a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a>' + 
                            '</div>' +
                        '</div>' +
                        '<div class="cs-cell-12">' +
                            '<div class="cs-input">' +
                                '<label>Security Group</label>' +
                                '<input type="text" placeholder="Security Group" class="cs-ou-sg-inp">' +
                                '<a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a>' + 
                            '</div>' +
                        '</div>' +
                        '<div class="cs-cell-12">' +
                            '<div class="cs-input">' +
                               ' <label>Language</label>' +
                               ' <input type="text" placeholder="Select Language" class="cs-ou-lang-inp">' +
                                '<a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a> ' +
                           ' </div>' +
                        '</div>' +
                        '<div class="cs-cell-12">' +
                           ' <div class="cs-input">' +
                                '<label>Param</label>' +
                                '<input type="text" placeholder="Enter Param Value" class="cs-ou-param-inp">' +
                           ' </div>' +
                       ' </div>' +
                    '</div>' +
                    '</div>';
                $(this).children('.cs-at-layoutcontroweach').each(function () {
                    if ($(this).offset().top >= ui.offset.top) //compare
                    {
                     $(getElementHtml).insertBefore($(this));
                     i = 1;
                     return false; //break loop
                    }
                });
                if (i != 1) //if element dropped at the end of cart
                {
                    $(getElementHtml).appendTo(this);
                }
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "OpenURL");
                $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            } 
            else if ($(ui.draggable).hasClass("cs-conditionActivity")) {
                var getElementHtml =
                `<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-conditionnActivity dropAcrive cs-aparent cs-pr cs-pb-blk">
                        <div class="cs-pa cs-activity-title cs-ts-10">Condition Activity</div>
                        <div class="cs-activity-icon cs-pa">
                            <i class="icon-cs-sql-report-creation"></i>
                        </div>
                        <span class="cs-remove-activity cs-pa cs-cur">
                            <i class="icon-cs-delete"></i>
                        </span>
                        <div class="clearfix cs-pad cs-rmar cs-bmar cs-at-con-if-else">
                            <div class="cs-at-con-if cs-aparent cs-at-layoutcontroweach dropIf cs-at-con-elsifcom">
                                <div class="cs-at-con-actions">
                                    <span class="cs-elseif-add cs-elseif-add-edit">
                                        <i class="icon-cs-new cs-ts-12"></i>
                                    </span>
                                    <span class="cs-at-con-add cs-bluec cs-lmar">
                                        <span class="cs-ts-18">{</span><i class="icon-cs-new cs-ts-12"></i><span class="cs-ts-18">}</span>
                                    </span>
                                    <div class="cs-at-apend-exp cs-inline cs-lmar">
                                        <div class="cs-edit-condition-value cs-truncate">
                                            <span> condition =  </span>
                                            <span class=" cs-ts-10 cs-at-apend-condition-text"></span>
                                            <div class="cs-edit-condition-value-child">
                                                <span> condition =  </span>
                                                <span class=" cs-ts-10  cs-pa cs-at-apend-condition-text"></span>
                                            </div>
                                        </div>
                                        <span class="cs-right-apend-exp cs-lmar"></span>
                                        <span class="cs-at-apend-exp-edit cs-at-apend-exp-edit-condition cs-lmar cs-cur">
                                            <span class="cs-ts-18">{</span><i class="icon-cs-edit cs-ts-12"></i>
                                            <span class="cs-ts-18">}</span>
                                        </span>
                                    </div>
                                    <div class="cs-at-apend-custom-exp-main">
                                        <div class="cs-at-apend-custom-exp cs-inline cs-lmar">
                                            <span class="cs-cur cs-ts-14 cs-textb cs-at-apend-custom-hover">{ }</span>
                                            <div class="cs-at-apend-custom-exp-cont-main">
                                                <div class="cs-at-apend-custom-exp-cont cs-pr"></div>
                                            </div>
                                        </div>
                                        <span class="cs-at-apend-cus-exp-edit cs-cur">
                                            <span class="cs-ts-18">{</span><i class="icon-cs-edit cs-ts-12"></i>
                                            <span class="cs-ts-18">}</span>
                                        </span>
                                    </div>


                                </div>
                                <div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white cs-add-exp-blk">
                                    <div class="clearfix cs-tr">
                                        <span class="cs-cur cs-ts-14 cs-textb">{ }</i></span>
                                        <div class="clearfix cs-inline">
                                            <span class="cs-graylightc cs-rsmar">Custom Expression</span>
                                            <label class="switch-toggle cs-lsmar">
                                                <input type="checkbox" class="cs-cus-exp-tog">
                                                <div class="slider-toggle round-toggle"></div>
                                            </label>
                                        </div>
                                        <span class="cs-cur cs-con-exp-sav"> <i class="icon-cs-save"></i></span>
                                    </div>
                                    <div class="cs-textarea cs-pr cs-at-dd-expr-txtar">
                                        <div class="clearfix cs-tmar">
                                            <span class="cs-rmar cs-exprbuilder cs-pr cs-cur cs-pull-right cs-tsmar" title="Edit Expression">
                                                <i class="icon-cs-expression-edit"></i>
                                            </span>
                                        </div>
                                        <label for="expression">Expression</label>
                                        <textarea placeholder="Enter Expression..."></textarea>
                                    </div>
                                    <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
                                        <div class="cs-cell-7">
                                            <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                                <label>Left Expression</label>
                                                <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                                <input type="text" class="cs-cur cs-pe-none" placeholder="Select Expression" class="cs-ab-textinput" />
                                                <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                    <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="cs-cell-7">
                                            <div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                                <label>Operators</label>
                                                <input type="text" class="cs-cur cs-pe-none" placeholder="Select Operators" class="cs-cond-opr" />
                                            </div>
                                        </div>
                                        <div class="cs-cell-7">
                                            <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                                <label>Right Expression</label>
                                                <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                                <input type="text" class="cs-cur cs-pe-none" placeholder="Select Expression" class="cs-ab-textinput" />
                                                <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                    <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="cs-cell-3f">
                                        <span class="cs-remove-activity-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                                         <i class="icon-cs-delete"></i>
                                        </span>
                                        <span class="cs-remove-activity-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                        <i class="icon-cs-new"></i>
                                        </div>
                                    </div>
                                </div>
                                <div class="cs-at-con-drop-area"></div>
                            </div>
                            <div class="cs-at-con-endif cs-aparent cs-at-layoutcontroweach dropElse">
                                <div class="cs-at-con-drop-area"></div>
                            </div>
                        </div>
                    </div>
                    `;
                $(this).children('.cs-at-layoutcontroweach').each(function () {
                    if ($(this).offset().top >= ui.offset.top) //compare
                    {
                     $(getElementHtml).insertBefore($(this));
                     i = 1;
                     return false; //break loop
                    }
                });
                if (i != 1) //if element dropped at the end of cart
                {
                    $(getElementHtml).appendTo(this);
                }
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Condition");
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropIf", "If");
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropElse", "Else");
                $(".dropAcrive").removeClass("dropAcrive");
                $(".dropIf").removeClass("dropIf");
                $(".dropElse").removeClass("dropElse");
                conditnActivityDropable();
                $(".cs-at-apend-custom-exp-cont").perfectScrollbar();
            } 
            else if ($(ui.draggable).hasClass("cs-playback-drag")) {
                var getName = $(ui.draggable).text().trim();
                var displayName = $("#display-name-inpt").val();
                var getElementHtml = '<div class="cs-at-layoutcontroweach cs-playback-drop dropAcrive cs-pad cs-pb-blk">' +
                    '<div class="cs-at-droppedActivities">' +
                    '<div class="cs-at-droppedActivitiesHeading cs-hpad cs-tspad cs-bspad cs-inline cs-line cs-pr">' +
                    '<span class="cs-inline"><i class="icon-cs-caret-right cs-ts-12 cs-greenc"></i></span>' +
                    '<span class="cs-at-droppedActivitiesName">'+getName+'</span>' +
                    '<span class="cs-at-droppedActivitiesActions cs-pull-right cs-rsmar">' +
                    '<a class="cs-cur cs-hpad-sm cs-tooltip-top cs-expand-colapse-playback" title="Mapping">' +
                    '<i class="icon-cs-sync cs-ts-14"></i>' +
                    '</a>' +
                    '<a class="cs-cur cs-hpad-sm cs-tooltip-top" title="Expand">' +
                    '<i class="icon-cs-export cs-ts-14"></i>' +
                    '</a>' +
                    '</span>' +
                    '<a class="cs-cur cs-tc cs-inline cs-at-droppedActivitiesDelete cs-line cs-circle cs-pa">' +
                    '<i class="icon-cs-delete cs-ts-12 cs-whitec cs-vm-align"></i>' +
                    '</a>' +
                    '</div>' +
                    '<div class="clearfix cs-at-droppedActivitiesContent cs-hide cs-vpad cs-line">' +
                    '<a href="#" class="cs-drpd-playback-clos cs-cur">' +
                    '<i class="icon-cs-reject-o cs-ts-10"></i>' +
                    '</a>' +
                    '<div class="cs-cell-12 cs-hmar cs-mapping-container">' +
                    '<div class="cs-cell-12 cs-mapping-list-left cs-at-pb-map">' +
                    '<div class="cs-at-playbackDisplayName cs-disable" data-cs-dropdown="#playbacklist-dd">'+displayName+'</div>' +
                    '<div class="cs-at-topActions cs-tpad cs-bsmar cs-at-top-act-var-elem">' +
                    '<a class="cs-cur cs-hpad-sm cs-ts-12 cs-circle active">Variable</a>' +
                    '<a class="cs-cur cs-hpad-sm cs-ts-12 cs-circle cs-at-top-act-ele-clik">Element</a>' +
                    '</div>' +
                     '<div class="cs-at-varmappinglistmain">' +
							'<ul class="cs-vartabul cs-tmar">' +
								'<li><a href="#var-in">IN</a></li>' +
								'<li><a href="#var-out">OUT</a></li>' +
								'<li><a href="#var-inout">INOUT</a></li>' +
							'</ul>' +
							'<div id="var-in" class="cs-at-pb-map">' +
								'<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
								'<input type="text" name="Sprint Name" placeholder="Search in Variable">' +
								'<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
								'</div>' +
								'<div class="cs-at-mappinglistmain">' +
								'<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-left-list"></ul>' +
								'</div>' +
							'</div>' +
							'<div id="var-out" class="cs-at-pb-map">' +
								'<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
								'<input type="text" name="Sprint Name" placeholder="Search out Variable">' +
								'<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
								'</div>' +
								'<div class="cs-at-mappinglistmain">' +
								'<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-left-list"></ul>' +
								'</div>' +
							'</div>' +
							'<div id="var-inout" class="cs-at-pb-map">' +
								'<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
								'<input type="text" name="Sprint Name" placeholder="Search inout Variable">' +
								'<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
								'</div>' +
								'<div class="cs-at-mappinglistmain">' +
								'<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-left-list"></ul>' +
								'</div>' +
							'</div>' +
                        '</div>' +
                    '<div class="cs-at-elemappinglistmain">' +
                    '<div class="cs-at-eachsearchpart cs-pr cs-tsmar">' +
                    '<input type="text" name="Sprint Name" placeholder="Search Element">' +
                    '<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
                    '</div>' +
                    '<div class="cs-at-mappinglistmain">' +
                    '<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-ele-list"></ul>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-12 cs-mapping-list-right cs-at-pb-map">' +
                    '<div class="cs-at-playbackName">'+getName+'</div>' +
                    '<div class="cs-at-topActions cs-tpad">' +
                    '<a class="cs-cur cs-hpad-sm cs-ts-12 cs-circle">In Parameter</a>' +
                    '</div>' +
                    '<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
                    '<input type="text" name="Sprint Name" placeholder="Search Element">' +
                    '<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
                    '</div>' +
                    '<div class="cs-at-mappinglistmain">' +
                    '<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-right-list"></ul>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-2 cs-hmar cs-tc cs-at-mappedactionmain cs-pr">' +
                    '<a class="cs-tc cs-cur cs-pa cs-circle cs-at-mappedmovingicn">' +
                    '<i class="icon-cs-angle-double-right cs-ts-12"></i>' +
                    '</a>' +
                    '</div>' +
                    '<div class="cs-cell-10 cs-hmar cs-pull-right cs-at-mappedcontmain  cs-at-pb-map">' +
                    '<div class="cs-at-playbackName">'+getName+'</div>' +
                    '<div class="cs-at-topActions cs-tpad">' +
                    '<a class="cs-cur cs-hpad-sm cs-ts-12 cs-circle">Mapped In Parameter</a>' +
                    '</div>' +
                    '<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
                    '<input type="text" name="Sprint Name" placeholder="Search Mapped In Parameter">' +
                    '<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
                    '</div>' +
                    '<div class="clearfix cs-at-mappedListmain">' +
                    '<div class="clearfix cs-at-mappedpart">' +
                    '<ul class="clearfix cs-scroll cs-pr cs-rpad"></ul>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '</div>';
                $(this).children('.cs-at-layoutcontroweach').each(function () {
                    if ($(this).offset().top >= ui.offset.top) //compare
                    {
                     $(getElementHtml).insertBefore($(this));
                     i = 1;
                     return false; //break loop
                    }
                });
                if (i != 1) //if element dropped at the end of cart
                {
                    $(getElementHtml).appendTo(this);
                }
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Entail");
                $(".cs-scroll-2,.cs-scroll").perfectScrollbar();
                $(".dropAcrive").find(".cs-at-mappedpart").find("ul").find("li").each(function() {
                    var valname = $(this).find(".cs-mapped-left").find(".cs-mapper-name").text();
                    var varibname = $(this).find(".cs-mapped-right").find(".cs-mapper-name").text();
                    $(".dropAcrive").data("eachActivityVO").entailPlaybackVO.entailPlaybackParamsVOs.push({
                        "entailPlaybackParamId": "",
                        "createdBy": "",
                        "valueType": "Variable",
                        "lastModifiedBy": "",
                        "entailPlaybackId": "",
                        "isActive": "",
                        "variableId": "",
                        "variableName": varibname,
                        "value": valname,
                        "createdOn": "",
                        "lastModifiedOn": ""
                    });
                });
                if($(ui.draggable).data("playBackEachData").variableVOs != undefined) {
                    var f = $(ui.draggable).data("playBackEachData").variableVOs;
                    for (var i = 0; i < f.length; i++) {
                        var inparamlilisthtml = '<li class="clearfix cs-tspad cs-bspad cs-cur cs-pr">' +
                            '<span class="clearfix cs-ts-14 cs-tw-600 cs-cell-20 cs-truncate cs-mapper-name">' + f[i].variableName + '</span>' +
                            '<span class="clearfix cs-ts-10 cs-cell-20 cs-truncate cs-mapper-type">' + f[i].dataType + '</span>' +
                            '<span class="cs-pa cs-ts-11 cs-tw-600 cs-at-mappingeach">' +
                            '<i class="icon-cs-succeed-o cs-greenc"></i>' +
                            '</span>' +
                            '</li>';
                            inparamlilisthtml = $(inparamlilisthtml).data("inparamVo",f[i]);
                        $(".dropAcrive .cs-plbk-right-list").append(inparamlilisthtml);
                    }
                }
                $(".dropAcrive").data("eachActivityVO").entailPlaybackVO.playbackId = $(ui.draggable).data("playBackEachData").playbackId;
                $(".dropAcrive").data("eachActivityVO").playbackName = $(ui.draggable).data("playBackEachData").displayName;
                $(".dropAcrive").data("eachActivityVO").entailPlaybackVO.variablesVOs = f;
                $(".cs-variable-list-block li").each(function() {
                    var getData = $(this).data("VariableEachData");
                    var varnam = $(this).data("VariableEachData").variableName;
                    var datyp = $(this).data("VariableEachData").dataType;
					var parmtyp = $(this).data("VariableEachData").paramType;
                    var leftlisteachhtml = '<li class="clearfix cs-tspad cs-bspad cs-cur cs-pr">' +
                        '<span class="clearfix cs-ts-14 cs-tw-600 cs-cell-20 cs-truncate cs-mapper-name">' + varnam + '</span>' +
                        '<span class="clearfix cs-ts-10 cs-cell-20 cs-truncate cs-mapper-type">' + datyp + '</span>' +
                        '<span class="cs-pa cs-ts-11 cs-tw-600 cs-at-mappingeach">' +
                        '<i class="icon-cs-succeed-o cs-greenc"></i>' +
                        '</span>' +
                        '</li>';
                    leftlisteachhtml = $(leftlisteachhtml).data("VariableEachData",getData);
                    if(parmtyp == "IN"){
						$(".dropAcrive #var-in .cs-plbk-left-list").append(leftlisteachhtml);
					}else if(parmtyp == "OUT"){
						$(".dropAcrive #var-out .cs-plbk-left-list").append(leftlisteachhtml);
					}else if(parmtyp == "INOUT"){
						$(".dropAcrive #var-inout .cs-plbk-left-list").append(leftlisteachhtml);
					}
                });
                $(this).closest(".cs-at-layouteachmain").find(".cs-each-element").each(function() {
                    var plElementName = $(this).find(".cs-at-elementname").text();
                    var plElementtyp = $(this).attr("data-eletype");
                    var elelisteachhtml = '<li class="clearfix cs-tspad cs-bspad cs-cur cs-pr">' +
                        '<span class="clearfix cs-ts-14 cs-tw-600 cs-cell-20 cs-truncate cs-mapper-name">' + plElementName + '</span>' +
                        '<span class="clearfix cs-ts-10 cs-cell-20 cs-truncate cs-mapper-type">' + plElementtyp + '</span>' +
                        '<span class="cs-pa cs-ts-11 cs-tw-600 cs-at-mappingeach">' +
                        '<i class="icon-cs-succeed-o cs-greenc"></i>' +
                        '</span>' +
                        '</li>';
                    $(".dropAcrive .cs-plbk-ele-list").append(elelisteachhtml);
                });
                $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
				playbknameappendinlist();
            }
            else if($(ui.draggable).hasClass("cs-login")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-loginActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Login</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-logs-import"></i>' +
                        '</div>' +
                        '<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '<div class="clearfix cs-rmar cs-bmar">' +
                        '<div class="clearfix">' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input  cs-login-inp cs-login-username">' +
                        '<label>User Name</label>'+
                        '<input type="text" placeholder="Username">' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-login-inp cs-login-password">' +
                        '<label>Password</label>' +
                        '<input type="password" placeholder="Password">' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Login");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            else if ($(ui.draggable).hasClass("cs-fileactivity")) {
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-fileActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">File Activity</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-file-text-o"></i>' +
                        '</div>' +
                        '<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>' +
                        '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
                        '<div class="clearfix">' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-fileactivity-inp cs-fileactivity-filetype">' +
                        '<label>File Type</label>' +
                        '<select>'+
                        '<option value="Read">Read</option>'+
                        '<option value="Write">Write</option>'+
                        '</select>'+
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-fileactivity-inp cs-fileactivity-source">' +
                        '<label>Source</label>' +
                        '<input type="text">' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-pr cs-fileactivity-inp cs-fileactivity-target">' +
                        '<label>Target (Data Table)</label>' +
                        '<input type="text">' +
                        '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>';
                        if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                            $(this).children('.cs-at-layoutcontroweach').each(function () {
                if ($(this).offset().top >= ui.offset.top) //compare
                {     
                    if($(this).hasClass("cs-closebrowserActivity"))  {
                    $(getElementHtml).insertBefore($(this));
                    }   
                    else{    
                    $(getElementHtml).insertBefore($(this));                 
                }
                i = 1;
                    return false; //break loop
                }
            });
            if (i != 1) //if element dropped at the end of cart
            {
                $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
            }
                        }

                        else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                             $(this).children('.cs-at-layoutcontroweach').each(function () {
                if ($(this).offset().top >= ui.offset.top) //compare
                {     
                    if($(this).hasClass("cs-openbrowserActivity"))  {
                    $(getElementHtml).insertAfter($(this));
                    }   
                    else{                       
                    $(getElementHtml).insertBefore($(this));                 
                }
                i = 1;
                    return false; //break loop
                }
            });
            if (i != 1) //if element dropped at the end of cart
            {
                $(getElementHtml).appendTo(this);
            }
                        }
                        
                        else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore($(this));
                            i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csFileAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            else if($(ui.draggable).hasClass("cs-logout")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-logoutActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Logout</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-logout"></i>' +
                        '</div>' +
						'<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
						'</div>';
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Logout");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            else if($(ui.draggable).hasClass("cs-screenshot")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-screenshotActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Screenshot</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-screenshot"></i>' +
                        '</div>' +
						'<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
						'<div class="clearfix">' +
							'<div class="cs-cell-4">' +
								'<label>File Name</label>' +
							'</div>' +
							'<div class="cs-cell-8">' +
								'<input type="text" class="cs-scshot-fname"/>' +
							'</div>' +
						'</div>' +
						'</div>';
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "ScreenShot");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            // Launch Browser start 
            else if($(ui.draggable).hasClass("cs-launch-browser")){
                console.log("layout-lb");
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-LaunchBrowser cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Launch Browser</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-launch-browser"></i>' +
                        '</div>' +
						'<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
						'</div>';
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
					droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "LaunchBrowser");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            else if($(ui.draggable).hasClass("cs-close-browser")){
                if ($("body").attr("basicAssignments") == "false") {
                    console.log("layout-lb");
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-CloseBrowser cs-pr cs-pb-blk">' +
                                            '<div class="cs-pa cs-activity-title cs-ts-10">Close Browser</div>' +
                                            '<div class="cs-activity-icon cs-pa">' +
                                            '<i class="icon-cs-close-browser"></i>' +
                                            '</div>' +
                                            '<span class="cs-remove-activity cs-pa cs-cur">' +
                                            '<i class="icon-cs-delete"></i>' +
                                            '</span>'+
                                            '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
                                            '</div>';
                                            '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
					droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "CloseBrowser");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            else if($(ui.draggable).hasClass("cs-data-table")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-aparent cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-DataTable cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-12">Data Table Activity</div>' +
                        '<div class="cs-vpad cs-drg-txt-box-par"><div class="cs-center cs-graylightc cs-drg-txt-box">Drag and drop your data table function only...</div></div>'+
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-data-table-activity"></i>' +
                        '</div>' +
						'<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '</div>';
                    if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                                if($(this).hasClass("cs-closebrowserActivity"))  {
                         $(getElementHtml).insertBefore($(this));
                                }   
                                else{    
                                $(getElementHtml).insertBefore($(this));                 
                            }
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                            $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
                        }
                    }

                    else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                        $(this).children('.cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {     
                                if($(this).hasClass("cs-openbrowserActivity"))  {
                                $(getElementHtml).insertAfter($(this));
                                }   
                                else{                       
                                $(getElementHtml).insertBefore($(this));                 
                            }
                            i = 1;
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                        $(getElementHtml).appendTo(this);
                    }
                    }
                    
                    else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore($(this));
                            i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
					droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "DataTableActivity");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
                $(".cs-at-box-head-field").removeClass("active");
                $(".cs-data-table-title").addClass("active");
                $(".cs-playbackhead-title").addClass("cs-bline active");
                $(".cs-at-box-head-field").addClass("cs-cur");
                $(".cs-at-box-head-field.cs-data-table-title").removeClass("cs-hide");
                $(".cs-pb-activities-par").toggleClass("cs-hide");
                $(".cs-pb-data-table-par").toggleClass("cs-hide");
                datatableDroppable()
            }
            else if($(ui.draggable).hasClass("cs-excel-auto-act")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-aparent cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-excel-auto-act-child cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-12">Excel Activity</div>' +
                        '<div class="cs-vpad cs-drg-txt-box-par"><div class="cs-center cs-graylightc cs-drg-txt-box">Drag and drop your excel function only...</div></div>'+
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-file-excel-o"></i>' +
                        '</div>' +
						'<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '</div>';
                    if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                                if($(this).hasClass("cs-closebrowserActivity"))  {
                         $(getElementHtml).insertBefore($(this));
                                }   
                                else{    
                                $(getElementHtml).insertBefore($(this));                 
                            }
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                            $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
                        }
                    }

                    else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                        $(this).children('.cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {     
                                if($(this).hasClass("cs-openbrowserActivity"))  {
                                $(getElementHtml).insertAfter($(this));
                                }   
                                else{                       
                                $(getElementHtml).insertBefore($(this));                 
                            }
                            i = 1;
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                        $(getElementHtml).appendTo(this);
                    }
                    }
                    
                    else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore($(this));
                            i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
					droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "ExcelAutomationAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
                $(".cs-at-box-head-field").removeClass("active");
                $(".cs-excelauto-title").addClass("active");
                $(".cs-playbackhead-title").addClass("cs-bline active");
                $(".cs-at-box-head-field").addClass("cs-cur");
                $(".cs-at-box-head-field.cs-excelauto-title").removeClass("cs-hide");
                $(".cs-pb-activities-par").toggleClass("cs-hide");
                $(".cs-pb-excelauto-par").toggleClass("cs-hide");
                excelAutomationDroppable();
                excelReadDroppable();
            }
            else if($(ui.draggable).hasClass("cs-shortcut-activity")){
                if ($("body").attr("basicAssignments") == "false") {
                    console.log("layout-lb");
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-ShortcutActivity cs-pr cs-pb-blk">' +
                                            '<div class="cs-pa cs-activity-title cs-ts-10">Hotkey</div>' +
                                            '<div class="cs-activity-icon cs-pa">' +
                                            '<i class="icon-cs-short-cut"></i>' +
                                            '</div>' +
                                            '<span class="cs-remove-activity cs-pa cs-cur">' +
                                            '<i class="icon-cs-delete"></i>' +
                                            '</span>'+
                                            '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
                                            '<div class="clearfix">' +
                                                '<input type="text" class="cs-shortcutkeyentry" placeholder="Enter Hotkey"/>' +
                                            '</div>' +
                                            '</div>';
                                            '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
          }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Hotkey");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            else if ($(ui.draggable).hasClass("cs-explicit-time_out")) {
                
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-explicit-time_out cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Explicit-Timeout</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-time-zone"></i>' +
                        '</div>' +
                        '<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>' +
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
                        '<div class="clearfix cs-tr">           ' +
                        '<span class="cs-rmar cs-snapshot cs-pr cs-cur"><i class="icon-cs-camera"></i></span>' +
                        '<span class="cs-rmar cs-status cs-pr cs-cur"><i class="fa fa-line-chart"></i></span>' +
						 '<span class="cs-cur cs-ts-14 cs-rmar cs-textb">{ }</i></span>' +
                        '<div class="clearfix cs-inline">' +
                        '<span class="cs-graylightc cs-rsmar">Custom Expression</span>' +
                        '<label class="switch-toggle cs-lsmar">' +
                        '<input type="checkbox" class="cs-cus-exp-tog">' +
                        '<div class="slider-toggle round-toggle"></div>' +
                        '</label>' +
                        '</div>' +
                        '</div> ' +
                        '<div class="cs-textarea cs-pr cs-at-dd-expr-txtar">' +
						 '<div class="clearfix cs-tmar">' +
						'<span class="cs-rmar cs-exprbuilder cs-pr cs-cur cs-pull-right cs-tsmar" title="Edit Expression"><i class="icon-cs-expression-edit"></i></span>' +
						 '</div> ' +
                         '<div class="cs-cell-12f">'+
                         '<label for="expression">Expression</label>' +
                        '<textarea placeholder="Enter Expression..."></textarea>' +
                         '</div>'+
                         '<div class=" cs-lmar cs-cell-11f">'+
                         '<div class="cs-input cs-var-el-dd-click explct-wait-section cs-operator cs-rad-none">'+
                        
                        '<label for="wait_tym">Wait time</label> '+   // datepicker
                        '<input type="text" class="wait_tym" value="" autocomplete="off">'+
                        '</div>'+
                         '</div>'+
                        
                        '</div>' +
                        '<div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-var-el-dd-click cs-left-expr explct-hide-var" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">' +
                        '<label>Left Expression</label><span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>' +
                        '<input type="text" class="cs-cur cs-pe-none" placeholder="Select Expression" disabled/>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-var-el-dd-click cs-operator cs-explct-opertr cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">' +
                        '<label>Operators</label>' +
                        '<span class="cs-show">'+
                        '<span class="cs-hide cs cs-apnd-oprts"></span>'+
                        '<input type="text" class="cs-slct-oprts cs-cur cs-pe-none" placeholder="Select Operators" disabled/>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-var-el-dd-click explct-wait-section cs-operator cs-rad-none">'+
                        
                        '<label for="wait_tym">Wait time</label> '+   // datepicker
                        '<input type="text" class="wait_tym" value="" autocomplete="off">'+
                        '</div>';
                        
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "explcit-wait-time");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
                $('.wait_tym').timepicker({
                    showSecond: true,
                    timeFormat: 'hh:mm:ss:'
                }); 
            }

          }
          else if ($("body").attr("basicAssignments") == "true") {
            if ($(ui.draggable).hasClass("cs-at-layout-main")) {
              var displayName = $(ui.draggable).data("eachLayoutListData").displayName;
              var layoutId = $(ui.draggable).data("eachLayoutListData").layoutId;
                var getElementHtml = 
                  '<div class="clearfix cs-at-layouteachmain cs-layout-container cs-at-layoutcontroweach dropAcrive cs-aparent cs-pr cs-pb-blk cs-pad">' +
                  '<h3 class="clearfix cs-nomar">' +
                  '<span class="cs-remove-activity cs-pa cs-cur">' +
                  '<i class="icon-cs-delete"></i>' +
                  '</span>' +
                  '<span class="cs-at-layouttitle cs-valignm cs-inline cs-ts-14 cs-tw-600">' + displayName + '</span>' +
                  '<span class="cs-valignm cs-inline cs-ts-14 cs-tw-600 cs-hpad cs-rline">' +
                  '<span class="cs-valignm cs-inline"><i class="icon-cs-element-count cs-ts-18"></i></span>' +
                  '<span class="cs-badge cs-badge-info cs-lmar cs-valignm cs-inline">40</span>' +
                  '</span>' +
                  '</h3>' +
                  '<div class="clearfix cs-at-layouttogglecontentmain cs-non-html-layout cs-pr">' +
                  '</div>' +
                  '</div>';
                $(this).children('.cs-at-layoutcontroweach').each(function () {
                    if ($(this).offset().top >= ui.offset.top) //compare
                    {
                     $(getElementHtml).insertBefore($(this));
                     i = 1;
                     return false; //break loop
                    }
                });
                if (i != 1) //if element dropped at the end of cart
                {
                    $(getElementHtml).appendTo(this);
                }
              $(".cs-at-layouteachmain.dropAcrive").data("eachLayoutData", $(ui.draggable).data("eachLayoutListData"));
              droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Layout", displayName, layoutId);
              $(".dropAcrive").removeClass("dropAcrive");
            }
          }
          $('.cs-layouthighlight').removeClass('cs-layouthighlight')
          recallTooltip();
          acrivitiesDropable();
          contMainSortable();
          datatableDroppable();
          eachrowDroppable();
          excelAutomationDroppable();
          excelReadDroppable();
        }
    });
}

function repushplaybkdata(getThis) {
    $(".dtpushactive").data("eachActivityVO").entailPlaybackVO.entailPlaybackParamsVOs = [];
    $(".dtpushactive").find(".cs-at-mappedpart").find("ul").find("li").each(function() {
        var getData = $(this).data("mappedData");
        $(".dtpushactive").data("eachActivityVO").entailPlaybackVO.entailPlaybackParamsVOs.push(getData);
    });

}

function repushRightInParamdata(getThis) {
    $(".dtpushactive").data("eachActivityVO").entailPlaybackVO.variablesVOs = [];
    $(".dtpushactive").find(".cs-plbk-right-list").find("li").each(function() {
        var getData = $(this).data("inparamVo");
        $(".dtpushactive").data("eachActivityVO").entailPlaybackVO.variablesVOs.push(getData);
    });
}

function iterationActivityDropable() {
    $(".cs-pb-create-board").find(".cs-iterationActivity").droppable({
        activeClass: "ui-state-default",
        hoverClass: "ui-drop-hover",
        accept: ":not(.ui-sortable-helper)",
        greedy: "greedy",
        over: function(event, ui) {
            var $this = $(this);
        },
        out: function() {},
        drop: function(event, ui) {
            if ($(ui.draggable).hasClass("cs-at-layout-main")) {
                var displayName = $(ui.draggable).data("eachLayoutListData").displayName;
                var layoutId = $(ui.draggable).data("eachLayoutListData").layoutId;
                var layoutElementsList = $(ui.draggable).data("eachLayoutListData").layoutElementsList;
                var getElementHtml = '<div class="clearfix cs-at-layouteachmain cs-aparent cs-at-layoutcontroweach cs-layout-container dropAcrive cs-pr cs-pb-blk">' +
                    '<h3 class="clearfix cs-nomar cs-bline">' +
                    '<span class="cs-remove-activity cs-pa cs-cur">' +
                    '<i class="icon-cs-delete"></i>' +
                    '</span>' +
                    '<a class="cs-at-layouttoggletrigger cs-cur cs-inline cs-pad"><i class="icon-cs-down-arrow"></i></a>' +
                    '<span class="cs-at-layouttitle cs-inline cs-ts-14 cs-tw-600">' + displayName + '</span>' +
                    '<span class="cs-inline cs-ts-14 cs-tw-600 cs-hpad cs-rline">' +
                    '<span><i class="icon-cs-element-count cs-ts-18"></i></span>' +
                    '<span class="cs-badge cs-badge-info cs-lmar">40</span>' +
                    '</span>' +
                    '<span class="cs-inline cs-hpad">' +
                    '<span><i class="icon-cs-element-action-defined cs-ts-18"></i></span>' +
                    '<span class="cs-badge cs-badge-info cs-b-white cs-line cs-blackc cs-lsmar cs-assigned-elem">04</span>' +
                    '<span class="cs-hsmar"><i class="icon-cs-element-action-undefined cs-ts-18"></i></span>' +
                    '<span class="cs-badge cs-badge-info cs-b-white cs-line cs-blackc cs-non-aggigned-elem">02</span>' +
                    '</span>' +
                    '<a class="cs-inline cs-cur" data-cs-dropdown="#cs-at-eachTemplateFilter"><i class="icon-cs-filter-o cs-ts-14"></i></a>' +
                    '<div class="cs-hmar cs-lline cs-inline cs-valignm cs-layout-description-container">' +
                    '<input type="text" class="cs-inline cs-lmar cs-layout-description-input" placeholder="Enter Description">' +
                    '</div>' +
					'<div class="cs-inline cs-lsmar cs-layout-setasheader"><input type="radio" id="rad_'+radID+'" name="layoutheadselect"><label for="rad_'+radID+'">Set Header</label></div>'+
                    '</h3>' +
                    '<div class="clearfix cs-at-layouttogglecontentmain cs-pr">' +
                    '</div>' +
                    '</div>';
					radID++;
                $(this).children('.cs-at-layoutcontroweach').each(function () {
                    if ($(this).offset().top >= ui.offset.top) //compare
                    {
                     $(getElementHtml).insertBefore($(this));
                     i = 1;
                     return false; //break loop
                    }
                });
                if (i != 1) //if element dropped at the end of cart
                {
                    $(getElementHtml).appendTo(this);
                }
                $(layoutElementsList).each(function(index, val) {
                    var layoutElementId = val.layoutElementId;
                    var getElementName = val.elementName;
                    var getMandatory = val.isMandatory;
                    var getDyna = val.isDynamic;
                    var mandClass = "";
                    if(getMandatory == "Y") {
                        mandClass = " cs-ly-mandatory";
                    }
                    var getElementtyp = val.elementType.toLowerCase().replace(/\s/g, '');
                    var actionValueType="";
                    var dynaEditHtml="";
                    if(getDyna == "Y") {
                        dynaEditHtml = '<a class="cs-at-layouteachelementmainactions cs-edit-element cs-inline cs-cur cs-hpad cs-tooltip-top" title="Edit">' +
                        '<i class="icon-cs-edit cs-ts-16"></i>' +
                        '</a>';
                    }
                    if("draganddrop"==getElementtyp){
                    	actionValueType="Element";
                    }else{
                    	actionValueType="Constant";
                    }
                    $(".dropAcrive > .cs-at-layouttogglecontentmain").append('<div class="cs-at-layoutcontroweach clearfix dropElement cs-each-element'+mandClass+' cs-pr" data-eletype="' + getElementtyp + '">' +
                        '<div class="cs-pull-left">' +
                        
                        '<div class="cs-copy-elemtype cs-tooltip-right" title="Copy Element Name">' +
                            '<div class="cs-at-elemntTypeicon sprite cs-cf-' + getElementtyp + ' cs-inline"></div>' +
                            '<div class="cs-hide cs-copy-et"><i class="icon-cs-duplicate"></i></div>' +
                        '</div>'+

                        '<div class="cs-inline cs-vt-align cs-at-elementname cs-hpad cs-lsmar  cs-tooltip-top" title="'+ getElementName +'">' + getElementName + '</div>' +
                        '<div class="cs-inline cs-cur cs-vt-align cs-circle cs-line cs-ts-12 cs-hpad cs-at-eleacttyp-clk" data-cs-dropdown="#cs-at-elementactiontype">' +
                        '<span class="cs-inline cs-ts-11 cs-unamepwd-type">Select action</span>' +
                        '<span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-at-ele-val-block cs-pull-left cs-hide">' +
                        '<div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist">' +
                        '<span class="cs-label cs-ts-10 cs-label-warning">Exp</span>' +
                        '<span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span>' +
                        '</div>' +
                        '<div class="cs-at-ele-inp-typ cs-inline">' +
                        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Con">' +
                        '<input type="text" name="constantValue" placeholder="Enter The Constant">' +
                        '</div>' +
                        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Att">' +
                        '<input type="text" name="AttributeValue" placeholder="Enter The Attribute">' +
                        '</div>' +
                        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Aut">' +
                        '<input type="number" name="AutonumberingValue" placeholder="Enter The Number">' +
                        '</div>' +
                        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Var"  data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">' +
                        '<input type="text" name="variableValue" placeholder="Select The Variable" disabled>' +
                        '</div>' +
                        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Ele"  data-cs-dropdown="#cs-at-leftexp" data-dd-type="ele">' +
                        '<input type="text" name="ElementValue" placeholder="Select The Element" disabled>' +
                        '</div>' +
                        '<div class="cs-vt-align cs-ts-12 cs-hspad cs-at-contentEntryinput" data-contentValue="Exp">' +
                        '<span class="cs-inline">' +
                        '<input type="text" name="expressionValue" class="cs-inline" placeholder="Enter Expression Loader Template Dataset Fusion Map"/>' +
                        '</span>' +
                        '<a class="cs-inline cs-cur cs-hpad">{ }</a>' +
						'<span class="cs-exprbuilder cs-pr cs-cur" title="Edit Expression"><i class="icon-cs-expression-edit"></i></span>' +
                        '</div>' +
                        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Pix">' +
                        '<label>X</label>' +
                        '<input type="number" class="cs-xposition" name="xValue">' +
                        '<label>Y</label>' +
                        '<input type="number" class="cs-yposition" name="yValue">' +
                        '</div>' +
						'<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Ind">' +
						'<input type="number" name="index" placeholder="Ender the index">' +
						'</div>' +
                        '</div>' +
                       '</div>' +
					    '<div class="cs-pull-left cs-elem-timeout cs-lmar cs-hide">' +
                        '<div class="cs-inline cs-rmar"><i class="icon icon-cs-clock-o cs-orangec cs-valignm cs-ts-16"></i></div>' +
                        '<span class="cs-elem-timeout-sec cs-inline cs-pr">' +
                        '<input type="number" placeholder="sec">' +
                        '<span class="cs-sec-text cs-hide cs-pa">s</span>' +
                        '</span>' +
                        '</div>' +
                        '<a class="cs-at-layouteachelementmainactions cs-copy-element cs-inline cs-cur cs-hpad" title="Copy Element"><i class="icon-cs-files-o cs-ts-16"></i></a>' +
                        '<a class="cs-at-layouteachelementmainactions cs-highlight-element cs-inline cs-cur cs-hpad cs-tooltip-top" title="Highlight">' +
                        '<i class="icon-cs-data-enrichment cs-ts-16"></i>' +
                        '</a>' +
                        '<a class="cs-at-layouteachelementmainactions cs-reset-element cs-inline cs-cur cs-hpad cs-tooltip-top" title="Reset">' +
                        '<i class="icon-cs-reset cs-ts-16"></i>' +
                        '</a>' +
                        dynaEditHtml +
                        '</div>');
                    $(".dropElement").data("eachActivityVO", {
                        "playbackId": "",
                        "createdBy": "",
                        "elementActivityVO": {
                            "elementActivityId": "",
                            "actionValue": "",
                            "dropXOffset": "",
                            "lastModifiedBy": "",
                            "isDynamic": getDyna,
                            "dynamicValue":[],
                            "layoutElementId": layoutElementId,
                            "createdOn": "",
                            "lastModifiedOn": "",
                            "createdBy": "",
                            "elementAction": "",
                            "layoutElementName": getElementName,
                            "dropYOffset": "",
                            "playbackActivityId": "",
                            "timeoutSec": "",
                            "actionValueType": actionValueType,
                            "layoutElementsVO": val
                        },
                        "activityIndex": "",
                        "lastModifiedBy": "",
                        "parentActivityId": "",
                        "activityType": "Element",
                        "createdOn": "",
                        "playbackName": "",
                        "playbackActivityId": "",
                        "lastModifiedOn": ""
                    });
                    if (getElementtyp == "draganddrop") {
                        $(".dropElement").find(".cs-cdx-exp-click").find(".cs-label-warning").text("Pix");
                        $(".dropElement").find(".cs-at-contentEntryinput").addClass("cs-hide");
                        $('.dropElement').find(".cs-at-ele-inp-typ").find(".cs-at-contentEntryinput").each(function() {
                            var inpexptext = $(this).attr("data-contentvalue");
                            if (inpexptext == "Pix") {
                                $(this).removeClass("cs-hide");
                            }
                        });
                    }
                    $(".dropElement").removeClass("dropElement");
                });
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Layout", displayName, layoutId);
                $(".dropAcrive").removeClass("dropAcrive");
            } 
            if ($(ui.draggable).hasClass('cs-at-imagelayout-main')) {
                var imgurl = $(ui.draggable).find('img').attr('src')
                    let imagelayout = 
                    `<div class="cs-at-layoutcontroweach cs-ab-complete-img-block dropAcrive dropElement clearfix cs-image-element mandClass cs-pr cs-copy-high-hoverimgparent" data-eletype="projectimage">
                    <div class="cs-pull-left">
                        <div class="cs-at-elemntTypeicon cs-ab-list-leftimage cs-inline">
                            <i class="icon-cs-file-image-o"></i>
                        </div>
                        <div class="cs-ab-dragimg cs-inline cs-pad-sm cs-4x-radius">
                            <img src="${imgurl}" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                        </div>
                        <div class="cs-inline cs-cur  cs-circle cs-line cs-ts-12 cs-hpad cs-bg-white cs-at-eleacttyp-clk" data-cs-dropdown="#cs-at-elementactiontype">
                            <span class="cs-inline cs-ts-11 cs-unamepwd-type">Select action</span>
                            <span class="cs-inline cs-lsmar">
                                <i class="icon-cs-caret-down cs-ts-8"></i>
                            </span>
                        </div>
                    </div>

                    <div class="cs-at-ele-val-block cs-pull-left cs-hide">

                        <div class="cs-pull-left cs-cur cs-tspad cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist">
                            <span class="cs-label cs-ts-10 cs-label-warning">Exp</span>
                            <span class="cs-inline cs-lsmar">
                                <i class="icon-cs-caret-down cs-ts-8"></i>
                            </span>
                        </div>

                        <div class="cs-at-ele-inp-typ cs-inline">
                            <div class="cs-cur  cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Con">
                                <input type="text" name="constantValue" placeholder="Enter The Constant">
                            </div>
                            <div class="cs-cur  cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Att">
                                <input type="text" name="AttributeValue" placeholder="Enter The Attribute">
                            </div>
                            <div class="cs-cur  cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Aut">
                                <input type="number" name="AutonumberingValue" placeholder="Enter The Number">
                            </div>
                            <div class="cs-cur  cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Var" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">
                                <input type="text" name="variableValue" placeholder="Select The Variable" disabled>
                            </div>
                            <div class="cs-cur  cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Ele" data-cs-dropdown="#cs-at-leftexp" data-dd-type="ele">
                                <input type="text" name="ElementValue" placeholder="Select The Element" disabled>
                            </div>
                            <div class=" cs-ts-12 cs-hspad cs-at-contentEntryinput" data-contentValue="Exp">
                                <span class="cs-inline">
                                    <input type="text" name="expressionValue" class="cs-inline" placeholder="Enter Expression Loader Template Dataset Fusion Map" />
                                </span>
                                <a class="cs-inline cs-cur cs-hpad">{ }</a>
                                <span class="cs-exprbuilder cs-pr cs-cur" title="Edit Expression">
                                    <i class="icon-cs-expression-edit"></i>
                                </span>
                            </div>
                            <div class="cs-cur  cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Pix">
                                <label>X</label>
                                <input type="number" class="cs-xposition" name="xValue">
                                <label>Y</label>
                                <input type="number" class="cs-yposition" name="yValue">
                            </div>
                            <div class="cs-cur  cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Ind">
                                <input type="number" name="index" placeholder="Ender the index">
                            </div>
                        </div>

                    </div>

                    <div class="cs-pull-left cs-elem-timeout cs-lmar cs-hide">
                        <div class="cs-inline cs-rmar"><i class="icon icon-cs-clock-o cs-orangec cs-valignm cs-ts-16"></i></div>
                        <span class="cs-elem-timeout-sec cs-inline cs-pr">
                            <input type="number" placeholder="sec">
                            <span class="cs-sec-text cs-hide cs-pa">s</span>
                        </span>
                    </div>
                    <div class="cs-copy-high-hoverimg cs-inline cs-tsmar">
                        <a class="cs-at-layouteachelementmainactions cs-copy-element cs-inline cs-cur cs-hpad" title="Copy Element">
                            <i class="icon-cs-files-o cs-ts-16"></i>
                        </a>
                        <a class="cs-at-layouteachelementmainactions cs-highlight-element cs-inline cs-cur cs-hpad cs-tooltip-top" title="Highlight">
                            <i class="icon-cs-data-enrichment cs-ts-16"></i>
                        </a>
                        <a class="cs-at-layouteachelementmainactions cs-ab-resetclk cs-inline cs-cur cs-hpad cs-tooltip-top" title="Reset">
                            <i class="icon-cs-reset cs-ts-16"></i>
                        </a>
                    </div>
                </div>`;
                
                $(this).children('.cs-at-layoutcontroweach').each(function () {
                    if ($(this).offset().top >= ui.offset.top){ //compare
                        $(imagelayout).insertBefore($(this));
                        i = 1;
                        return false; //break loop
                    }
                });
                    if (i != 1){ //if element dropped at the end of cart
                        $(imagelayout).appendTo(this);
                    }


                $(".dropElement").data("eachActivityVO", {
                        "elementActivityId": "",
                        "copyElement": "",
                        "jqueryWait": "",
                        "actionValue": "",
                        "dropXOffset": "",
                        "lastModifiedBy": "",
                        "layoutElementId": "",
                        "elementTimeout": "",
                        "createdOn": "",
                        "lastModifiedOn": "",
                        "createdBy": "",
                        "elementAction": "",
                        "dynamicIdValue": "",
                        "layoutElementName": "",
                        "dropYOffset": "",
                        "playbackActivityId": "",
                        "actionValueType": ""
                });

                $(".dropElement").removeClass("dropElement");

                $(".cs-ab-complete-img-block.dropAcrive").data("eachLayoutData", $(ui.draggable).data("eachLayoutListData"));

                
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Image" , imgurl);

                $(".dropAcrive").removeClass("dropAcrive");
                acrivitiesDropable();
                contMainSortable();

                // setElementCount();
                // recallTooltip();
            }
            else if ($(ui.draggable).hasClass("cs-conditionActivity")) {
                var getElementHtml = `<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-conditionnActivity dropAcrive cs-aparent cs-pr cs-pb-blk">
                <div class="cs-pa cs-activity-title cs-ts-10">Condition Activity</div>
                <div class="cs-activity-icon cs-pa">
                    <i class="icon-cs-sql-report-creation"></i>
                </div>
                <span class="cs-remove-activity cs-pa cs-cur">
                    <i class="icon-cs-delete"></i>
                </span>
                <div class="clearfix cs-pad cs-rmar cs-bmar cs-at-con-if-else">
                    <div class="cs-at-con-if cs-aparent cs-at-layoutcontroweach dropIf cs-at-con-elsifcom">
                        <div class="cs-at-con-actions">
                            <span class="cs-elseif-add cs-elseif-add-edit">
                                <i class="icon-cs-new cs-ts-12"></i>
                            </span>
                            <span class="cs-at-con-add cs-bluec cs-lmar">
                                <span class="cs-ts-18">{</span><i class="icon-cs-new cs-ts-12"></i><span class="cs-ts-18">}</span>
                            </span>
                            <div class="cs-at-apend-exp cs-inline cs-lmar">
                                <div class="cs-edit-condition-value cs-truncate">
                                    <span> condition =  </span>
                                    <span class=" cs-ts-10 cs-at-apend-condition-text"></span>
                                    <div class="cs-edit-condition-value-child">
                                        <span> condition =  </span>
                                        <span class=" cs-ts-10  cs-pa cs-at-apend-condition-text"></span>
                                    </div>
                                </div>
                                <span class="cs-right-apend-exp cs-lmar"></span>
                                <span class="cs-at-apend-exp-edit cs-at-apend-exp-edit-condition cs-lmar cs-cur">
                                    <span class="cs-ts-18">{</span><i class="icon-cs-edit cs-ts-12"></i>
                                    <span class="cs-ts-18">}</span>
                                </span>
                            </div>
                            <div class="cs-at-apend-custom-exp-main">
                                <div class="cs-at-apend-custom-exp cs-inline cs-lmar">
                                    <span class="cs-cur cs-ts-14 cs-textb cs-at-apend-custom-hover">{ }</span>
                                    <div class="cs-at-apend-custom-exp-cont-main">
                                        <div class="cs-at-apend-custom-exp-cont cs-pr"></div>
                                    </div>
                                </div>
                                <span class="cs-at-apend-cus-exp-edit cs-cur">
                                    <span class="cs-ts-18">{</span><i class="icon-cs-edit cs-ts-12"></i>
                                    <span class="cs-ts-18">}</span>
                                </span>
                            </div>


                        </div>
                        <div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white cs-add-exp-blk">
                            <div class="clearfix cs-tr">
                                <span class="cs-cur cs-ts-14 cs-textb">{ }</i></span>
                                <div class="clearfix cs-inline">
                                    <span class="cs-graylightc cs-rsmar">Custom Expression</span>
                                    <label class="switch-toggle cs-lsmar">
                                        <input type="checkbox" class="cs-cus-exp-tog">
                                        <div class="slider-toggle round-toggle"></div>
                                    </label>
                                </div>
                                <span class="cs-cur cs-con-exp-sav"> <i class="icon-cs-save"></i></span>
                            </div>
                            <div class="cs-textarea cs-pr cs-at-dd-expr-txtar">
                                <div class="clearfix cs-tmar">
                                    <span class="cs-rmar cs-exprbuilder cs-pr cs-cur cs-pull-right cs-tsmar" title="Edit Expression">
                                        <i class="icon-cs-expression-edit"></i>
                                    </span>
                                </div>
                                <label for="expression">Expression</label>
                                <textarea placeholder="Enter Expression..."></textarea>
                            </div>
                            <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
                                <div class="cs-cell-7">
                                    <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                        <label>Left Expression</label>
                                        <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                        <input type="text" placeholder="Select Expression" class="cs-ab-textinput" />
                                        <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                            <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                        </div>
                                    </div>
                                </div>
                                <div class="cs-cell-7">
                                    <div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                        <label>Operators</label>
                                        <input type="text" placeholder="Select Operators" class="cs-cond-opr" />
                                    </div>
                                </div>
                                <div class="cs-cell-7">
                                    <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                        <label>Right Expression</label>
                                        <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                        <input type="text" placeholder="Select Expression" class="cs-ab-textinput" />
                                        <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                            <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                        </div>
                                    </div>
                                </div>
                                <div class="cs-cell-3f">
                                <span class="cs-remove-activity-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                                 <i class="icon-cs-delete"></i>
                                </span>
                                <span class="cs-remove-activity-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                <i class="icon-cs-new"></i>
                                </div>
                            </div>
                        </div>
                        <div class="cs-at-con-drop-area"></div>
                    </div>
                    <div class="cs-at-con-endif cs-aparent cs-at-layoutcontroweach dropElse">
                        <div class="cs-at-con-drop-area"></div>
                    </div>
                </div>
            </div>
            `;
                $(this).children('.cs-at-layoutcontroweach').each(function () {
                    if ($(this).offset().top >= ui.offset.top) //compare
                    {
                     $(getElementHtml).insertBefore($(this));
                     i = 1;
                     return false; //break loop
                    }
                });
                if (i != 1) //if element dropped at the end of cart
                {
                    $(getElementHtml).appendTo(this);
                }
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Condition");
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropIf", "If");
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropElse", "Else");
                $(".dropAcrive").removeClass("dropAcrive");
                $(".dropIf").removeClass("dropIf");
                $(".dropElse").removeClass("dropElse");
                conditnActivityDropable();
                $(".cs-at-apend-custom-exp-cont").perfectScrollbar();
            } else if ($(ui.draggable).hasClass("cs-playback-drag")) {
                    var getName = $(ui.draggable).text().trim();
                    var displayName = $("#display-name-inpt").val();
                    var getElementHtml = '<div class="cs-at-layoutcontroweach cs-playback-drop dropAcrive cs-pad cs-pb-blk">' +
                        '<div class="cs-at-droppedActivities">' +
                        '<div class="cs-at-droppedActivitiesHeading cs-hpad cs-tspad cs-bspad cs-inline cs-line cs-pr">' +
                        '<span class="cs-inline"><i class="icon-cs-caret-right cs-ts-12 cs-greenc"></i></span>' +
                        '<span class="cs-at-droppedActivitiesName">'+getName+'</span>' +
                        '<span class="cs-at-droppedActivitiesActions cs-pull-right cs-rsmar">' +
                        '<a class="cs-cur cs-hpad-sm cs-tooltip-top cs-expand-colapse-playback" title="Mapping">' +
                        '<i class="icon-cs-sync cs-ts-14"></i>' +
                        '</a>' +
                        '<a class="cs-cur cs-hpad-sm cs-tooltip-top" title="Expand">' +
                        '<i class="icon-cs-export cs-ts-14"></i>' +
                        '</a>' +
                        '</span>' +
                        '<a class="cs-cur cs-tc cs-inline cs-at-droppedActivitiesDelete cs-line cs-circle cs-pa">' +
                        '<i class="icon-cs-delete cs-ts-12 cs-whitec cs-vm-align"></i>' +
                        '</a>' +
                        '</div>' +
                        '<div class="clearfix cs-at-droppedActivitiesContent cs-hide cs-vpad cs-line">' +
                        '<a href="#" class="cs-drpd-playback-clos cs-cur">' +
                        '<i class="icon-cs-reject-o cs-ts-10"></i>' +
                        '</a>' +
                        '<div class="cs-cell-12 cs-hmar cs-mapping-container">' +
                        '<div class="cs-cell-12 cs-mapping-list-left cs-at-pb-map">' +
                        '<div class="cs-at-playbackDisplayName cs-disable" data-cs-dropdown="#playbacklist-dd">'+displayName+'</div>' +
                        '<div class="cs-at-topActions cs-tpad cs-bsmar cs-at-top-act-var-elem">' +
                        '<a class="cs-cur cs-hpad-sm cs-ts-12 cs-circle active">Variable</a>' +
                        '<a class="cs-cur cs-hpad-sm cs-ts-12 cs-circle cs-at-top-act-ele-clik">Element</a>' +
                        '</div>' +
                         '<div class="cs-at-varmappinglistmain">' +
							'<ul class="cs-vartabul cs-tmar">' +
								'<li><a href="#var-in">IN</a></li>' +
								'<li><a href="#var-out">OUT</a></li>' +
								'<li><a href="#var-inout">INOUT</a></li>' +
							'</ul>' +
							'<div id="var-in" class="cs-at-pb-map">' +
								'<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
								'<input type="text" name="Sprint Name" placeholder="Search in Variable">' +
								'<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
								'</div>' +
								'<div class="cs-at-mappinglistmain">' +
								'<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-left-list"></ul>' +
								'</div>' +
							'</div>' +
							'<div id="var-out" class="cs-at-pb-map">' +
								'<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
								'<input type="text" name="Sprint Name" placeholder="Search out Variable">' +
								'<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
								'</div>' +
								'<div class="cs-at-mappinglistmain">' +
								'<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-left-list"></ul>' +
								'</div>' +
							'</div>' +
							'<div id="var-inout" class="cs-at-pb-map">' +
								'<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
								'<input type="text" name="Sprint Name" placeholder="Search inout Variable">' +
								'<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
								'</div>' +
								'<div class="cs-at-mappinglistmain">' +
								'<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-left-list"></ul>' +
								'</div>' +
							'</div>' +
                        '</div>' +
                        '<div class="cs-at-elemappinglistmain">' +
                        '<div class="cs-at-eachsearchpart cs-pr cs-tsmar">' +
                        '<input type="text" name="Sprint Name" placeholder="Search Element">' +
                        '<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
                        '</div>' +
                        '<div class="cs-at-mappinglistmain">' +
                        '<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-ele-list"></ul>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-12 cs-mapping-list-right cs-at-pb-map">' +
                        '<div class="cs-at-playbackName">'+getName+'</div>' +
                        '<div class="cs-at-topActions cs-tpad">' +
                        '<a class="cs-cur cs-hpad-sm cs-ts-12 cs-circle">In Parameter</a>' +
                        '</div>' +
                        '<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
                        '<input type="text" name="Sprint Name" placeholder="Search Element">' +
                        '<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
                        '</div>' +
                        '<div class="cs-at-mappinglistmain">' +
                        '<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-right-list"></ul>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-2 cs-hmar cs-tc cs-at-mappedactionmain cs-pr">' +
                        '<a class="cs-tc cs-cur cs-pa cs-circle cs-at-mappedmovingicn">' +
                        '<i class="icon-cs-angle-double-right cs-ts-12"></i>' +
                        '</a>' +
                        '</div>' +
                        '<div class="cs-cell-10 cs-hmar cs-pull-right cs-at-mappedcontmain  cs-at-pb-map">' +
                        '<div class="cs-at-playbackName">'+getName+'</div>' +
                        '<div class="cs-at-topActions cs-tpad">' +
                        '<a class="cs-cur cs-hpad-sm cs-ts-12 cs-circle">Mapped In Parameter</a>' +
                        '</div>' +
                        '<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
                        '<input type="text" name="Sprint Name" placeholder="Search Mapped In Parameter">' +
                        '<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
                        '</div>' +
                        '<div class="clearfix cs-at-mappedListmain">' +
                        '<div class="clearfix cs-at-mappedpart">' +
                        '<ul class="clearfix cs-scroll cs-pr cs-rpad"></ul>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Entail");
                    $(".cs-scroll-2,.cs-scroll").perfectScrollbar();
                    $(".dropAcrive").find(".cs-at-mappedpart").find("ul").find("li").each(function() {
                        var valname = $(this).find(".cs-mapped-left").find(".cs-mapper-name").text();
                        var varibname = $(this).find(".cs-mapped-right").find(".cs-mapper-name").text();
                    var valtyp = $(this).find(".cs-mapped-left").attr("data-valtype");
                        $(".dropAcrive").data("eachActivityVO").entailPlaybackVO.entailPlaybackParamsVOs.push({
                            "entailPlaybackParamId": "",
                            "createdBy": "",
                        "valueType": valtyp,
                            "lastModifiedBy": "",
                            "entailPlaybackId": "",
                            "isActive": "",
                            "variableId": "",
                            "variableName": varibname,
                            "value": valname,
                            "createdOn": "",
                            "lastModifiedOn": ""
                        });
                    });
                    if($(ui.draggable).data("playBackEachData").variableVOs != undefined) {
                        var f = $(ui.draggable).data("playBackEachData").variableVOs;
                        for (var i = 0; i < f.length; i++) {
                            var inparamlilisthtml = '<li class="clearfix cs-tspad cs-bspad cs-cur cs-pr">' +
                                '<span class="clearfix cs-ts-14 cs-tw-600 cs-cell-20 cs-truncate cs-mapper-name">' + f[i].variableName + '</span>' +
                                '<span class="clearfix cs-ts-10 cs-cell-20 cs-truncate cs-mapper-type">' + f[i].dataType + '</span>' +
                                '<span class="cs-pa cs-ts-11 cs-tw-600 cs-at-mappingeach">' +
                                '<i class="icon-cs-succeed-o cs-greenc"></i>' +
                                '</span>' +
                                '</li>';
                                inparamlilisthtml = $(inparamlilisthtml).data("inparamVo",f[i]);
                            $(".dropAcrive .cs-plbk-right-list").append(inparamlilisthtml);
                        }
                    }
                    $(".dropAcrive").data("eachActivityVO").entailPlaybackVO.playbackId = $(ui.draggable).data("playBackEachData").playbackId;
                    $(".dropAcrive").data("eachActivityVO").playbackName = $(ui.draggable).data("playBackEachData").displayName;
                    $(".dropAcrive").data("eachActivityVO").entailPlaybackVO.variablesVOs = f;
                    $(".cs-variable-list-block li").each(function() {
                        var getData = $(this).data("VariableEachData");
                        var varnam = $(this).data("VariableEachData").variableName;
                        var datyp = $(this).data("VariableEachData").dataType;
						var parmtyp = $(this).data("VariableEachData").paramType;
						var leftlisteachhtml = '<li class="clearfix cs-tspad cs-bspad cs-cur cs-pr">' +
                        '<span class="clearfix cs-ts-14 cs-tw-600 cs-cell-20 cs-truncate cs-mapper-name">' + varnam + '</span>' +
                        '<span class="clearfix cs-ts-10 cs-cell-20 cs-truncate cs-mapper-type">' + datyp + '</span>' +
                        '<span class="cs-pa cs-ts-11 cs-tw-600 cs-at-mappingeach">' +
                        '<i class="icon-cs-succeed-o cs-greenc"></i>' +
                        '</span>' +
                        '</li>';
						leftlisteachhtml = $(leftlisteachhtml).data("VariableEachData",getData);
						if(parmtyp == "IN"){
							$(".dropAcrive #var-in .cs-plbk-left-list").append(leftlisteachhtml);
						}else if(parmtyp == "OUT"){
							$(".dropAcrive #var-out .cs-plbk-left-list").append(leftlisteachhtml);
						}else if(parmtyp == "INOUT"){
							$(".dropAcrive #var-inout .cs-plbk-left-list").append(leftlisteachhtml);
						}
                    });
                    $(this).closest(".cs-at-layouteachmain").find(".cs-each-element").each(function() {
                        var plElementName = $(this).find(".cs-at-elementname").text();
                        var plElementtyp = $(this).attr("data-eletype");
                        var elelisteachhtml = '<li class="clearfix cs-tspad cs-bspad cs-cur cs-pr">' +
                            '<span class="clearfix cs-ts-14 cs-tw-600 cs-cell-20 cs-truncate cs-mapper-name">' + plElementName + '</span>' +
                            '<span class="clearfix cs-ts-10 cs-cell-20 cs-truncate cs-mapper-type">' + plElementtyp + '</span>' +
                            '<span class="cs-pa cs-ts-11 cs-tw-600 cs-at-mappingeach">' +
                            '<i class="icon-cs-succeed-o cs-greenc"></i>' +
                            '</span>' +
                            '</li>';
                        $(".dropAcrive .cs-plbk-ele-list").append(elelisteachhtml);
                    });
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
					playbknameappendinlist();
            } else if ($(ui.draggable).hasClass("cs-iteraionActivity")) {
                var getElementHtml = '<div class="clearfix cs-aparent dropAcrive cs-at-layoutcontroweach cs-activityBlock cs-iterationActivity cs-pr cs-pb-blk">' +
                    '<div class="cs-pa cs-activity-title cs-ts-10">Iteration Activity</div>' +
                    '<div class="cs-activity-icon cs-pa">' +
                    '<i class="icon-cs-iteration-activity"></i>' +
                    '</div>' +
                    '<span class="cs-remove-activity cs-pa cs-cur">' +
                    '<i class="icon-cs-delete"></i>' +
                    '</span>' +
                    '<div class="clearfix cs-pad cs-rmar cs-bmar">' +
                    '<div class="cs-inline cs-cur cs-vt-align cs-ts-12 cs-cdx-exp-click cs-ite-dd-clk" data-cs-dropdown="#cs-at-condexpresselectndroplist">' +
                    '<span class="cs-label cs-ts-10 cs-label-warning">Con</span>' +
                    '<span class="cs-inline"><i class="icon-cs-caret-down cs-ts-8"></i></span>' +
                    '</div>' +
                    '<div class="cs-at-inp-typ cs-inline">' +
                    '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput" data-contentValue="Con">' +
                    '<input type="Number" name="constantValue" placeholder="Enter The Constant">' +
                    '</div>' +
                    '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Var"  data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">' +
                    '<input type="text" name="VariableValue" placeholder="Select The Variable" disabled>' +
                    '</div>' +
                    '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Lar">' +
                    '<input type="text" name="layoutarrayValue" placeholder="Enter The Layoutarray">' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '</div>';
                $(this).children('.cs-at-layoutcontroweach').each(function () {
                    if ($(this).offset().top >= ui.offset.top) //compare
                    {
                     $(getElementHtml).insertBefore($(this));
                     i = 1;
                     return false; //break loop
                    }
                });
                if (i != 1) //if element dropped at the end of cart
                {
                    $(getElementHtml).appendTo(this);
                }
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Iteration");
                $(".dropAcrive").removeClass("dropAcrive");
                iterationActivityDropable();
                acrivitiesDropable();
            } else if ($(ui.draggable).hasClass("cs-assignmentActivity")) {
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = 
                        '<div class="clearfix cs-at-layoutcontroweach dropAcrive cs-activityBlock cs-assignmentActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Assignment Activity</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-assignment-activity"></i>' +
                        '</div>' +
                        '<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>' +
                        '<div class="clearfix cs-at-dd-exprs">' +
                        '<div class="cs-inline cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-asgnm-exp" data-cs-dropdown="#cs-at-condexpresselectndroplist">' +
                        '<span class="cs-label cs-ts-10 cs-label-warning">Ele</span>' +
                        '<span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-ex-ele-main">' +
                        '<div class="cs-input cs-var-el-dd-click cs-asgn-elem cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="ele">' +
                        '<label>Element Name</label>' +
                        '<input type="text" class="cs-cur cs-pe-none" placeholder="Select Element" disabled/>' +
                        '</div>' +
                        '<div class="cs-input cs-asgnm-cus-exp">' +
                        '<label>Expression</label>' +
                        '<input type="text" placeholder="Enter Expression"/>' +
                        '</div>' +
                        '<div class="cs-input cs-var-el-dd-click cs-asgn-var cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">' +
                        '<label>Variable Name</label>' +
                        '<input type="text" class="cs-cur cs-pe-none" placeholder="Select Variable" disabled/>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-pad cs-pull-left cs-ts-18">' +
                        '<i class="icon-cs-angle-double-right"></i>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-var-el-dd-click cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">' +
                        '<label>Variable Name</label>' +
                        '<input type="text" class="cs-cur cs-pe-none" placeholder="Select Variable" disabled/>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-pad cs-pull-left cs-ts-18 cs-pramtr-trg-blk-tog cs-cur">' +
                        '<i class="icon-cs-new"></i>' +
                        '</div>' +
                        '</div>' +
                        '<div class="clearfix cs-prameter-trig-block cs-pad cs-rmar cs-bmar cs-bg-white cs-hide">' +
                        '<div class="cs-cell-12">' +
                        '<div class="cs-input cs-layoutname cs-layout-name-cus">' +
                        '<div class="clearfix">' +
                        '<label for="layoutname">Variable Name</label>' +
                        '<input id="layoutname" type="text" name="layoutname" placeholder="Enter text here">' +
                        '</div>' +
                        '</div>' +
                        '<div class="clearfix">' +
                        '<span class="cs-graylightc cs-rsmar">Prameter</span>' +
                        '<label class="switch-toggle cs-lsmar">' +
                        '<input type="checkbox" class="cs-prameter-enable">' +
                        '<div class="slider-toggle round-toggle"></div>' +
                        '</label>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-12">' +
                        '<div class="cs-input">' +
                        '<label>Data Type</label>' +
                        '<select>' +
                        '<option>Field Type1</option>' +
                        '<option>Field Type2</option>' +
                        '<option>Field Type3</option>' +
                        '<option>Field Type4</option>' +
                        '</select>' +
                        '</div>' +
                        '<div class="cs-input cs-hide cs-ps-pram-val">' +
                        '<label>Parameter Type</label>' +
                        '<select>' +
                        '<option>Field Type1</option>' +
                        '<option>Field Type2</option>' +
                        '<option>Field Type3</option>' +
                        '<option>Field Type4</option>' +
                        '</select>' +
                        '</div>' +
                        '</div>' +
                        '<div class="clearfix">' +
                        '<div class="cs-tr">' +
                        '<a href="#" class="cs-btn cs-btn-sm cs-btn-info cs-save-assign">Save</a>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Assignment");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            } else if ($(ui.draggable).hasClass("cs-verificationActivity")) {
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-verificationActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Verification Activity</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-verification-activity"></i>' +
                        '</div>' +
                        '<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>' +
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
                        '<div class="clearfix cs-tr">           ' +
                        '<span class="cs-rmar cs-snapshot cs-pr cs-cur"><i class="icon-cs-camera"></i></span>' +
                        '<span class="cs-rmar cs-status cs-pr cs-cur"><i class="fa fa-line-chart"></i></span>' +
                        '<span class="cs-cur cs-ts-14 cs-textb">{ }</i></span>' +
						 '<div class="clearfix cs-inline">' +
                        '<span class="cs-graylightc cs-rsmar">Custom Expression</span>' +
                        '<label class="switch-toggle cs-lsmar">' +
                        '<input type="checkbox" class="cs-cus-exp-tog">' +
                        '<div class="slider-toggle round-toggle"></div>' +
                        '</label>' +
                        '</div>' +
                        '</div> ' +
                        '<div class="cs-textarea cs-pr cs-at-dd-expr-txtar">' +
						 '<div class="clearfix cs-tmar">' +
						'<span class="cs-rmar cs-exprbuilder cs-pr cs-cur cs-pull-right cs-tsmar" title="Edit Expression"><i class="icon-cs-expression-edit"></i></span>' +
						 '</div> ' +
                        '<label for="expression">Expression</label>' +
                        '<textarea placeholder="Enter Expression..."></textarea>' +
                        '</div>' +
                        '<div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">' +
                        '<label>Left Expression</label><span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>' +
                        '<input type="text" class="cs-cur cs-pe-none" placeholder="Select Expression" disabled/>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">' +
                        '<label>Operators</label>' +
                        '<input type="text" class="cs-cur cs-pe-none" placeholder="Select Operators" disabled/>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">' +
                        '<label>Right Expression</label><span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>' +
                        '<input type="text"  class="cs-cur cs-pe-none" placeholder="Select Expression" disabled/>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-textarea cs-pr cs-error-message">' +
                        '<label for="Message">Message</label>' +
                        '<textarea placeholder="Enter Error Message..."></textarea>' +
                        '</div>' +
                        '</div>' +
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Verification");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            } else if ($(ui.draggable).hasClass("cs-assertionActivity")) {
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-assertionActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Assertion Activity</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-assertion-activity"></i>' +
                        '</div>' +
                        '<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'

                        +
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
                        '<div class="clearfix cs-tr">                               ' +
						 '<span class="cs-cur cs-ts-14 cs-textb">{ }</i></span>' +
                        '<div class="clearfix cs-inline">' +
                        '<span class="cs-graylightc cs-rsmar">Custom Expression</span>' +
                        '<label class="switch-toggle cs-lsmar">' +
                        '<input type="checkbox" class="cs-cus-exp-tog">' +
                        '<div class="slider-toggle round-toggle"></div>' +
                        '</label>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-textarea cs-pr cs-at-dd-expr-txtar">' +
						 '<div class="clearfix cs-tmar">' +
						'<span class="cs-rmar cs-exprbuilder cs-pr cs-cur cs-pull-right cs-tsmar" title="Edit Expression"><i class="icon-cs-expression-edit"></i></span>' +
						 '</div> ' +
                        '<label for="expression">Expression</label>' +
                        '<textarea placeholder="Enter Expression..."></textarea>' +
                        '</div>' +
                        '<div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">' +
                        '<label>Left Expression</label><span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>' +
                        '<input type="text" class="cs-cur cs-pe-none" placeholder="Select Expression" disabled/>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">' +
                        '<label>Operators</label>' +
                        '<input type="text" class="cs-cur cs-pe-none" placeholder="Select Operators" disabled/>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">' +
                        '<label>Right Expression</label><span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>' +
                        '<input type="text" class="cs-cur cs-pe-none" placeholder="Select Expression" disabled/>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-textarea cs-pr cs-error-message">' +
                        '<label for="Message">Message</label>' +
                        '<textarea placeholder="Enter Error Message..."></textarea>' +
                        '</div>' +
                        '</div>' +
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Assertion");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            } else if ($(ui.draggable).hasClass("cs-openurl")) {
                var getElementHtml = '<div class="clearfix cs-at-layoutcontroweach cs-activityBlock dropAcrive cs-openurlActivity cs-pr cs-pb-blk">' +
                    '<div class="cs-pa cs-activity-title cs-ts-10">Open Url</div>' +
                    '<div class="cs-activity-icon cs-pa">' +
                    '<i class="icon-cs-link"></i>' +
                    '</div>' +
                    '<span class="cs-remove-activity cs-pa cs-cur">' +
                    '<i class="icon-cs-delete"></i>' +
                    '</span>' +
                    '<div class="clearfix cs-pad cs-rmar cs-bmar">' +
                    '<div class="cs-inline">' +
                    '<div class="cs-inline cs-cur cs-vt-align cs-ts-12 cs-cdx-exp-click cs-openurl-dd-clk" data-cs-dropdown="#cs-at-condexpresselectndroplist">' +
                    '<span class="cs-label cs-ts-10 cs-label-warning">Con</span>' +
                    '<span class="cs-inline"><i class="icon-cs-caret-down cs-ts-8"></i></span>' +
                    '</div>' +
                    '<div class="cs-at-inp-typ cs-inline">' +
                    '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput" data-contentValue="Con">' +
                    '<input type="text" name="constantValue" placeholder="Enter The Constant">' +
                    '</div>' +
                    '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Var"  data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">' +
                    '<input type="text" name="VariableValue" placeholder="Select The Variable" disabled>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '<div class="clearfix">' +
                    '<div class="cs-cell-12">' +
                        '<div class="cs-input">' +
                            '<label>Function</label>' +
                            '<input type="text" placeholder="Select Function" class="cs-ou-fun-inp">' +
                            '<a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a> ' +
                        '</div>' +
                    '</div>' +
                    '<div class="cs-cell-12">' +
                        '<div class="cs-input">' +
                            '<label>Responsbility</label>' +
                            '<input type="text" placeholder="Select Responsbility" class="cs-ou-res-inp">' +
                            '<a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a>' + 
                        '</div>' +
                    '</div>' +
                    '<div class="cs-cell-12">' +
                        '<div class="cs-input">' +
                            '<label>Application</label>' +
                            '<input type="text" placeholder="Select Application" class="cs-ou-app-inp">' +
                            '<a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a>' + 
                        '</div>' +
                    '</div>' +
                    '<div class="cs-cell-12">' +
                        '<div class="cs-input">' +
                            '<label>Security Group</label>' +
                            '<input type="text" placeholder="Security Group" class="cs-ou-sg-inp">' +
                            '<a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a>' + 
                        '</div>' +
                    '</div>' +
                    '<div class="cs-cell-12">' +
                        '<div class="cs-input">' +
                           ' <label>Language</label>' +
                           ' <input type="text" placeholder="Select Language" class="cs-ou-lang-inp">' +
                            '<a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a> ' +
                       ' </div>' +
                    '</div>' +
                    '<div class="cs-cell-12">' +
                       ' <div class="cs-input">' +
                            '<label>Param</label>' +
                            '<input type="text" placeholder="Enter Param Value" class="cs-ou-param-inp">' +
                       ' </div>' +
                   ' </div>' +
                '</div>' +
                    '</div>';
                $(this).children('.cs-at-layoutcontroweach').each(function () {
                    if ($(this).offset().top >= ui.offset.top) //compare
                    {
                     $(getElementHtml).insertBefore($(this));
                     i = 1;
                     return false; //break loop
                    }
                });
                if (i != 1) //if element dropped at the end of cart
                {
                    $(getElementHtml).appendTo(this);
                }
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "OpenURL");
                $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            else if($(ui.draggable).hasClass("cs-login")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-loginActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Login</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-logs-import"></i>' +
                        '</div>' +
                        '<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '<div class="clearfix cs-rmar cs-bmar">' +
                        '<div class="clearfix">' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-login-inp cs-login-username">' +
                        '<label>User Name</label>'+
                        '<input type="text" placeholder="Username">' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-login-inp cs-login-password">' +
                        '<label>Password</label>' +
                        '<input type="password" placeholder="Password">' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Login");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            else if ($(ui.draggable).hasClass("cs-fileactivity")) {
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-fileActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">File Activity</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-file-text-o"></i>' +
                        '</div>' +
                        '<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>' +
                        '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
                        '<div class="clearfix">' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-fileactivity-inp cs-fileactivity-filetype">' +
                        '<label>File Type</label>' +
                        '<select>'+
                        '<option value="Read">Read</option>'+
                        '<option value="Write">Write</option>'+
                        '</select>'+
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-fileactivity-inp cs-fileactivity-source">' +
                        '<label>Source</label>' +
                        '<input type="text">' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-pr cs-fileactivity-inp cs-fileactivity-target">' +
                        '<label>Target (Data Table)</label>' +
                        '<input type="text">' +
                        '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>';
                        if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                            $(this).children('.cs-at-layoutcontroweach').each(function () {
                if ($(this).offset().top >= ui.offset.top) //compare
                {     
                    if($(this).hasClass("cs-closebrowserActivity"))  {
                    $(getElementHtml).insertBefore($(this));
                    }   
                    else{    
                    $(getElementHtml).insertBefore($(this));                 
                }
                i = 1;
                    return false; //break loop
                }
            });
            if (i != 1) //if element dropped at the end of cart
            {
                $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
            }
                        }

                        else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                             $(this).children('.cs-at-layoutcontroweach').each(function () {
                if ($(this).offset().top >= ui.offset.top) //compare
                {     
                    if($(this).hasClass("cs-openbrowserActivity"))  {
                    $(getElementHtml).insertAfter($(this));
                    }   
                    else{                       
                    $(getElementHtml).insertBefore($(this));                 
                }
                i = 1;
                    return false; //break loop
                }
            });
            if (i != 1) //if element dropped at the end of cart
            {
                $(getElementHtml).appendTo(this);
            }
                        }
                        
                    else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                        $(this).children('.cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {
                                $(getElementHtml).insertBefore($(this));
                                i = 1;
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                            $(getElementHtml).appendTo(this);
                        }
                        }
                        droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csFileAct");
                        $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                    }
            }
            else if($(ui.draggable).hasClass("cs-logout")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-logoutActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Logout</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-logout"></i>' +
                        '</div>' +
						'<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
						'</div>';
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Logout");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }else if($(ui.draggable).hasClass("cs-screenshot")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-screenshotActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Screenshot</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-screenshot"></i>' +
                        '</div>' +
						'<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
						'<div class="clearfix">' +
							'<div class="cs-cell-4">' +
								'<label>File Name</label>' +
							'</div>' +
							'<div class="cs-cell-8">' +
								'<input type="text" class="cs-scshot-fname"/>' +
							'</div>' +
						'</div>' +
						'</div>';
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "ScreenShot");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }// Launch Browser start 
            else if($(ui.draggable).hasClass("cs-launch-browser")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-LaunchBrowser cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Launch Browser</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-launch-browser"></i>' +
                        '</div>' +
						'<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
						'</div>';
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
					droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "LaunchBrowser");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            // close Browser start 
            else if($(ui.draggable).hasClass("cs-close-browser")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-CloseBrowser cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Close Browser</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-close-browser"></i>' +
                        '</div>' +
						'<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
						'</div>';
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
					droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "CloseBrowser");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            else if($(ui.draggable).hasClass("cs-data-table")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-aparent cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-DataTable cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-12">Data Table Activity</div>' +
                        '<div class="cs-vpad cs-drg-txt-box-par"><div class="cs-center cs-graylightc cs-drg-txt-box">Drag and drop your data table function only...</div></div>'+
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-data-table-activity"></i>' +
                        '</div>' +
						'<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '</div>';
                    if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                                if($(this).hasClass("cs-closebrowserActivity"))  {
                         $(getElementHtml).insertBefore($(this));
                                }   
                                else{    
                                $(getElementHtml).insertBefore($(this));                 
                            }
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                            $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
                        }
                    }

                    else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                        $(this).children('.cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {     
                                if($(this).hasClass("cs-openbrowserActivity"))  {
                                $(getElementHtml).insertAfter($(this));
                                }   
                                else{                       
                                $(getElementHtml).insertBefore($(this));                 
                            }
                            i = 1;
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                        $(getElementHtml).appendTo(this);
                    }
                    }
                    
                    else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore($(this));
                            i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
					droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "DataTableActivity");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
                $(".cs-at-box-head-field").removeClass("active");
                $(".cs-data-table-title").addClass("active");
                $(".cs-playbackhead-title").addClass("cs-bline active");
                $(".cs-at-box-head-field").addClass("cs-cur");
                $(".cs-at-box-head-field.cs-data-table-title").removeClass("cs-hide");
                $(".cs-pb-activities-par").toggleClass("cs-hide");
                $(".cs-pb-data-table-par").toggleClass("cs-hide");
            }
            else if($(ui.draggable).hasClass("cs-excel-auto-act")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-aparent cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-excel-auto-act-child cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-12">Excel Activity</div>' +
                        '<div class="cs-vpad cs-drg-txt-box-par"><div class="cs-center cs-graylightc cs-drg-txt-box">Drag and drop your excel function only...</div></div>'+
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-file-excel-o"></i>' +
                        '</div>' +
						'<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '</div>';
                    if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                                if($(this).hasClass("cs-closebrowserActivity"))  {
                         $(getElementHtml).insertBefore($(this));
                                }   
                                else{    
                                $(getElementHtml).insertBefore($(this));                 
                            }
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                            $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
                        }
                    }

                    else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                        $(this).children('.cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {     
                                if($(this).hasClass("cs-openbrowserActivity"))  {
                                $(getElementHtml).insertAfter($(this));
                                }   
                                else{                       
                                $(getElementHtml).insertBefore($(this));                 
                            }
                            i = 1;
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                        $(getElementHtml).appendTo(this);
                    }
                    }
                    
                    else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore($(this));
                            i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
					droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "ExcelAutomationAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
                $(".cs-at-box-head-field").removeClass("active");
                $(".cs-excelauto-title").addClass("active");
                $(".cs-playbackhead-title").addClass("cs-bline active");
                $(".cs-at-box-head-field").addClass("cs-cur");
                $(".cs-at-box-head-field.cs-excelauto-title").removeClass("cs-hide");
                $(".cs-pb-activities-par").toggleClass("cs-hide");
                $(".cs-pb-excelauto-par").toggleClass("cs-hide");
                excelAutomationDroppable();
                excelReadDroppable();
            }
            else if($(ui.draggable).hasClass("cs-shortcut-activity")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-ShortcutActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Hotkey</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-short-cut"></i>' +
                        '</div>' +
                        '<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
                        '<div class="clearfix">' +
                            '<input type="text" class="cs-shortcutkeyentry" placeholder="Enter Hotkey"/>' +
                        '</div>' +
                        '</div>';
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Hotkey");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            else if($(ui.draggable).hasClass("cs-explicit-time_out")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml='<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-explicit-time_out cs-pr cs-pb-blk">' +
                    '<div class="cs-pa cs-activity-title cs-ts-10">Explicit-Timeout</div>' +
                    '<div class="cs-activity-icon cs-pa">' +
                    '<i class="icon-cs-time-zone"></i>' +
                    '</div>' +
                    '<span class="cs-remove-activity cs-pa cs-cur">' +
                    '<i class="icon-cs-delete"></i>' +
                    '</span>' +
                    '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
                    '<div class="clearfix cs-tr">           ' +
                    '<span class="cs-rmar cs-snapshot cs-pr cs-cur"><i class="icon-cs-camera"></i></span>' +
                    '<span class="cs-rmar cs-status cs-pr cs-cur"><i class="fa fa-line-chart"></i></span>' +
                     '<span class="cs-cur cs-ts-14 cs-rmar cs-textb">{ }</i></span>' +
                    '<div class="clearfix cs-inline">' +
                    '<span class="cs-graylightc cs-rsmar">Custom Expression</span>' +
                    '<label class="switch-toggle cs-lsmar">' +
                    '<input type="checkbox" class="cs-cus-exp-tog">' +
                    '<div class="slider-toggle round-toggle"></div>' +
                    '</label>' +
                    '</div>' +
                    '</div> ' +
                    '<div class="cs-textarea cs-pr cs-at-dd-expr-txtar">' +
                     '<div class="clearfix cs-tmar">' +
                    '<span class="cs-rmar cs-exprbuilder cs-pr cs-cur cs-pull-right cs-tsmar" title="Edit Expression"><i class="icon-cs-expression-edit"></i></span>' +
                     '</div> ' +
                     '<div class="cs-cell-12f">'+
                     '<label for="expression">Expression</label>' +
                    '<textarea placeholder="Enter Expression..."></textarea>' +
                     '</div>'+
                     '<div class=" cs-lmar cs-cell-11f">'+
                     '<div class="cs-input cs-var-el-dd-click explct-wait-section cs-operator cs-rad-none">'+
                    
                    '<label for="wait_tym">Wait time</label> '+   // datepicker
                    '<input type="text" class="wait_tym cs-custom-explct-exprs" value="" autocomplete="off">'+
                    '</div>'+
                     '</div>'+
                    
                    '</div>' +
                    '<div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-var-el-dd-click cs-left-expr explct-hide-var" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">' +
                    '<label>Left Expression</label><span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Ele</span>' +
                    '<input type="text" class="cs-cur cs-pe-none cs-ab-textinput " placeholder="Select Expression" disabled/>' +
                    '<div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">'+
                        '<img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">'+
                    '</div>'+
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-var-el-dd-click cs-operator cs-explct-opertr cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">' +
                    '<label>Operators</label>' +
                    '<span class="cs-show">'+
                    '<span class="cs-hide cs cs-apnd-oprts"></span>'+
                    '<input type="text" class="cs-slct-oprts cs-cur cs-pe-none"  placeholder="Select Operators" disabled/>' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    // '<div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">' +
                    // '<label>Right Expression</label><span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>' +
                    // '<input type="text" placeholder="Select Expression" disabled/>' +
                    // '</div>' +
                    // '</div>' +
                    // '</div>' +
                    // '<div class="cs-textarea cs-pr cs-error-message">' +
                    // '<label for="Message">Message</label>' +
                    // '<textarea placeholder="Enter Error Message..."></textarea>' +
                    // '</div>' +
                    // '</div>' +
                    '<div class="cs-input cs-var-el-dd-click explct-wait-section cs-operator cs-rad-none">'+
                    
                    '<label for="wait_tym">Wait time</label> '+   // datepicker
                    '<input type="text" class="wait_tym explct-right-expr" value="" autocomplete="off">'+
                    '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                   
                
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "explcit-wait-time");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }}
                $('.wait_tym').timepicker({
                    showSecond: true,
                    timeFormat: 'hh:mm:ss:'
                })
            setElementCount();
            recallTooltip();
            acrivitiesDropable();
            iterationActivityDropable();
            contMainSortable();
            datatableDroppable();
            eachrowDroppable();
            excelAutomationDroppable();
            excelReadDroppable();
        }
    });
}

function conditnActivityDropable() {
    $(".cs-at-con-drop-area").droppable({
        activeClass: "ui-state-default",
        hoverClass: "ui-drop-hover",
        accept: ":not(.ui-sortable-helper)",
        greedy: "greedy",
        over: function(event, ui) {
            var $this = $(this);
        },
        drop: function(event, ui) {

            if ($(ui.draggable).hasClass("cs-at-layout-main")) {
                var displayName = $(ui.draggable).data("eachLayoutListData").displayName;
                var layoutId = $(ui.draggable).data("eachLayoutListData").layoutId;
                var layoutElementsList = $(ui.draggable).data("eachLayoutListData").layoutElementsList;
                var getElementHtml = '<div class="clearfix cs-at-layouteachmain cs-aparent cs-at-layoutcontroweach cs-layout-container dropAcrive cs-pr cs-pb-blk">' +
                    '<h3 class="clearfix cs-nomar cs-bline">' +
                    '<span class="cs-remove-activity cs-pa cs-cur">' +
                    '<i class="icon-cs-delete"></i>' +
                    '</span>' +
                    '<a class="cs-at-layouttoggletrigger cs-cur cs-inline cs-pad"><i class="icon-cs-down-arrow"></i></a>' +
                    '<span class="cs-at-layouttitle cs-inline cs-ts-14 cs-tw-600">' + displayName + '</span>' +
                    '<span class="cs-inline cs-ts-14 cs-tw-600 cs-hpad cs-rline">' +
                    '<span><i class="icon-cs-element-count cs-ts-18"></i></span>' +
                    '<span class="cs-badge cs-badge-info cs-lmar">40</span>' +
                    '</span>' +
                    '<span class="cs-inline cs-hpad">' +
                    '<span><i class="icon-cs-element-action-defined cs-ts-18"></i></span>' +
                    '<span class="cs-badge cs-badge-info cs-b-white cs-line cs-blackc cs-lsmar cs-assigned-elem">04</span>' +
                    '<span class="cs-hsmar"><i class="icon-cs-element-action-undefined cs-ts-18"></i></span>' +
                    '<span class="cs-badge cs-badge-info cs-b-white cs-line cs-blackc cs-non-aggigned-elem">02</span>' +
                    '</span>' +
                    '<a class="cs-inline cs-cur" data-cs-dropdown="#cs-at-eachTemplateFilter"><i class="icon-cs-filter-o cs-ts-14"></i></a>' +
                    '<div class="cs-hmar cs-lline cs-inline cs-valignm cs-layout-description-container">' +
                    '<input type="text" class="cs-inline cs-lmar cs-layout-description-input" placeholder="Enter Description">' +
                    '</div>' +
					'<div class="cs-inline cs-lsmar cs-layout-setasheader"><input type="radio" id="rad_'+radID+'" name="layoutheadselect"><label for="rad_'+radID+'">Set Header</label></div>'+
                    '</h3>' +
                    '<div class="clearfix cs-at-layouttogglecontentmain cs-pr">' +
                    '</div>' +
                    '</div>';
					radID++;
                $(this).children('.cs-at-layoutcontroweach').each(function () {
                    if ($(this).offset().top >= ui.offset.top) //compare
                    {
                     $(getElementHtml).insertBefore($(this));
                     i = 1;
                     return false; //break loop
                    }
                });
                if (i != 1) //if element dropped at the end of cart
                {
                    $(getElementHtml).appendTo(this);
                }
                $(layoutElementsList).each(function(index, val) {
                    var layoutElementId = val.layoutElementId;
                    var getElementName = val.elementName;
                    var getMandatory = val.isMandatory;
                    var getDyna = val.isDynamic;
                    var mandClass = "";
                    if(getMandatory == "Y") {
                        mandClass = " cs-ly-mandatory";
                    }
                    var getElementtyp = val.elementType.toLowerCase().replace(/\s/g, '');
                    var actionValueType="";
                    var dynaEditHtml="";
                    if(getDyna == "Y") {
                        dynaEditHtml = '<a class="cs-at-layouteachelementmainactions cs-edit-element cs-inline cs-cur cs-hpad cs-tooltip-top" title="Edit">' +
                        '<i class="icon-cs-edit cs-ts-16"></i>' +
                        '</a>';
                    }
                    if("draganddrop"==getElementtyp){
                    	actionValueType="Element";
                    }else{
                    	actionValueType="Constant";
                    }
                    $(".dropAcrive > .cs-at-layouttogglecontentmain").append(
                        '<div class="cs-at-layoutcontroweach clearfix dropElement cs-each-element'+mandClass+' cs-pr" data-eletype="' + getElementtyp + '">' +
                        '<div class="cs-pull-left">' +
                        
                        '<div class="cs-copy-elemtype cs-tooltip-right" title="Copy Element Name">' +
                            '<div class="cs-at-elemntTypeicon sprite cs-cf-' + getElementtyp + ' cs-inline"></div>' +
                            '<div class="cs-hide cs-copy-et"><i class="icon-cs-duplicate"></i></div>' +
                        '</div>' +
                        
                        '<div class="cs-inline cs-vt-align cs-at-elementname cs-hpad cs-lsmar  cs-tooltip-top" title="'+ getElementName +'">' + getElementName + '</div>' +
                        '<div class="cs-inline cs-cur cs-vt-align cs-circle cs-line cs-ts-12 cs-hpad cs-at-eleacttyp-clk" data-cs-dropdown="#cs-at-elementactiontype">' +
                        '<span class="cs-inline cs-ts-11 cs-unamepwd-type">Select action</span>' +
                        '<span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-at-ele-val-block cs-pull-left cs-hide">' +
                        '<div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist">' +
                        '<span class="cs-label cs-ts-10 cs-label-warning">Exp</span>' +
                        '<span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span>' +
                        '</div>' +
                        '<div class="cs-at-ele-inp-typ cs-inline">' +
                        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Con">' +
                        '<input type="text" name="constantValue" placeholder="Enter The Constant">' +
                        '</div>' +
                        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Att">' +
                        '<input type="text" name="AttributeValue" placeholder="Enter The Attribute">' +
                        '</div>' +
                        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Aut">' +
                        '<input type="number" name="AutonumberingValue" placeholder="Enter The Number">' +
                        '</div>' +
                        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Var"  data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">' +
                        '<input type="text" name="variableValue" placeholder="Select The Variable" disabled>' +
                        '</div>' +
                        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Ele"  data-cs-dropdown="#cs-at-leftexp" data-dd-type="ele">' +
                        '<input type="text" name="ElementValue" placeholder="Select The Element" disabled>' +
                        '</div>' +
                        '<div class="cs-vt-align cs-ts-12 cs-hspad cs-at-contentEntryinput" data-contentValue="Exp">' +
                        '<span class="cs-inline">' +
                        '<input type="text" name="expressionValue" class="cs-inline" placeholder="Enter Expression Loader Template Dataset Fusion Map"/>' +
                        '</span>' +
                        '<a class="cs-inline cs-cur cs-hpad">{ }</a>' +
						'<span class="cs-exprbuilder cs-pr cs-cur" title="Edit Expression"><i class="icon-cs-expression-edit"></i></span>' +
                        '</div>' +
                        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Pix">' +
                        '<label>X</label>' +
                        '<input type="number" class="cs-xposition" name="xValue">' +
                        '<label>Y</label>' +
                        '<input type="number" class="cs-yposition" name="yValue">' +
                        '</div>' +
						'<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Ind">' +
						'<input type="number" name="index" placeholder="Ender the index">' +
						'</div>' +
                        '</div>' +
                        '</div>' +
						 '<div class="cs-pull-left cs-elem-timeout cs-lmar cs-hide">' +
                        '<div class="cs-inline cs-rmar"><i class="icon icon-cs-clock-o cs-orangec cs-valignm cs-ts-16"></i></div>' +
                        '<span class="cs-elem-timeout-sec cs-inline cs-pr">' +
                        '<input type="number" placeholder="sec">' +
                        '<span class="cs-sec-text cs-hide cs-pa">s</span>' +
                        '</span>' +
                        '</div>' +
                        '<a class="cs-at-layouteachelementmainactions cs-copy-element cs-inline cs-cur cs-hpad" title="Copy Element"><i class="icon-cs-files-o cs-ts-16"></i></a>' +
                        '<a class="cs-at-layouteachelementmainactions cs-highlight-element cs-inline cs-cur cs-hpad cs-tooltip-top" title="Highlight">' +
                        '<i class="icon-cs-data-enrichment cs-ts-16"></i>' +
                        '</a>' +
                        '<a class="cs-at-layouteachelementmainactions cs-reset-element cs-inline cs-cur cs-hpad cs-tooltip-top" title="Reset">' +
                        '<i class="icon-cs-reset cs-ts-16"></i>' +
                        '</a>' +
                        dynaEditHtml +
                        '</div>');
                    $(".dropElement").data("eachActivityVO", {
                        "playbackId": "",
                        "createdBy": "",
                        "elementActivityVO": {
                            "elementActivityId": "",
                            "actionValue": "",
                            "dropXOffset": "",
                            "lastModifiedBy": "",
                            "isDynamic": getDyna,
                            "dynamicValue":[],
                            "layoutElementId": layoutElementId,
                            "createdOn": "",
                            "lastModifiedOn": "",
                            "createdBy": "",
                            "elementAction": "",
                            "layoutElementName": getElementName,
                            "dropYOffset": "",
                            "playbackActivityId": "",
                            "timeoutSec": "",
                            "actionValueType": actionValueType,
                            "layoutElementsVO": val
                        },
                        "activityIndex": "",
                        "lastModifiedBy": "",
                        "parentActivityId": "",
                        "activityType": "Element",
                        "createdOn": "",
                        "playbackName": "",
                        "playbackActivityId": "",
                        "lastModifiedOn": ""
                    });
                    if (getElementtyp == "draganddrop") {
                        $(".dropElement").find(".cs-cdx-exp-click").find(".cs-label-warning").text("Pix");
                        $(".dropElement").find(".cs-at-contentEntryinput").addClass("cs-hide");
                        $('.dropElement').find(".cs-at-ele-inp-typ").find(".cs-at-contentEntryinput").each(function() {
                            var inpexptext = $(this).attr("data-contentvalue");
                            if (inpexptext == "Pix") {
                                $(this).removeClass("cs-hide");
                            }
                        });
                    }
                    $(".dropElement").removeClass("dropElement");
                });
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Layout", displayName, layoutId);
                $(".dropAcrive").removeClass("dropAcrive");
                acrivitiesDropable();
                setElementCount();
                if($(this).parents('.cs-at-layouteachmain').length <= 1){
                    var parDiv = $(this).closest('.cs-at-layouteachmain');
                    parDiv.addClass("cond-layout-active");
                }
            } 
            else if ($(ui.draggable).hasClass('cs-at-imagelayout-main')) {
                var imgurl = $(ui.draggable).find('img').attr('src')
                    let imagelayout = 
                    `<div class="cs-at-layoutcontroweach cs-ab-complete-img-block dropAcrive dropElement clearfix cs-image-element mandClass cs-pr cs-copy-high-hoverimgparent" data-eletype="projectimage">
                    <div class="cs-pull-left">
                        <div class="cs-at-elemntTypeicon cs-ab-list-leftimage cs-inline">
                            <i class="icon-cs-file-image-o"></i>
                        </div>
                        <div class="cs-ab-dragimg cs-inline cs-pad-sm cs-4x-radius">
                            <img src="${imgurl}" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                        </div>
                        <div class="cs-inline cs-cur  cs-circle cs-line cs-ts-12 cs-hpad cs-bg-white cs-at-eleacttyp-clk" data-cs-dropdown="#cs-at-elementactiontype">
                            <span class="cs-inline cs-ts-11 cs-unamepwd-type">Select action</span>
                            <span class="cs-inline cs-lsmar">
                                <i class="icon-cs-caret-down cs-ts-8"></i>
                            </span>
                        </div>
                    </div>

                    <div class="cs-at-ele-val-block cs-pull-left cs-hide">

                        <div class="cs-pull-left cs-cur cs-tspad cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist">
                            <span class="cs-label cs-ts-10 cs-label-warning">Exp</span>
                            <span class="cs-inline cs-lsmar">
                                <i class="icon-cs-caret-down cs-ts-8"></i>
                            </span>
                        </div>

                        <div class="cs-at-ele-inp-typ cs-inline">
                            <div class="cs-cur  cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Con">
                                <input type="text" name="constantValue" placeholder="Enter The Constant">
                            </div>
                            <div class="cs-cur  cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Att">
                                <input type="text" name="AttributeValue" placeholder="Enter The Attribute">
                            </div>
                            <div class="cs-cur  cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Aut">
                                <input type="number" name="AutonumberingValue" placeholder="Enter The Number">
                            </div>
                            <div class="cs-cur  cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Var" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">
                                <input type="text" name="variableValue" placeholder="Select The Variable" disabled>
                            </div>
                            <div class="cs-cur  cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Ele" data-cs-dropdown="#cs-at-leftexp" data-dd-type="ele">
                                <input type="text" name="ElementValue" placeholder="Select The Element" disabled>
                            </div>
                            <div class=" cs-ts-12 cs-hspad cs-at-contentEntryinput" data-contentValue="Exp">
                                <span class="cs-inline">
                                    <input type="text" name="expressionValue" class="cs-inline" placeholder="Enter Expression Loader Template Dataset Fusion Map" />
                                </span>
                                <a class="cs-inline cs-cur cs-hpad">{ }</a>
                                <span class="cs-exprbuilder cs-pr cs-cur" title="Edit Expression">
                                    <i class="icon-cs-expression-edit"></i>
                                </span>
                            </div>
                            <div class="cs-cur  cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Pix">
                                <label>X</label>
                                <input type="number" class="cs-xposition" name="xValue">
                                <label>Y</label>
                                <input type="number" class="cs-yposition" name="yValue">
                            </div>
                            <div class="cs-cur  cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Ind">
                                <input type="number" name="index" placeholder="Ender the index">
                            </div>
                        </div>

                    </div>

                    <div class="cs-pull-left cs-elem-timeout cs-lmar cs-hide">
                        <div class="cs-inline cs-rmar"><i class="icon icon-cs-clock-o cs-orangec cs-valignm cs-ts-16"></i></div>
                        <span class="cs-elem-timeout-sec cs-inline cs-pr">
                            <input type="number" placeholder="sec">
                            <span class="cs-sec-text cs-hide cs-pa">s</span>
                        </span>
                    </div>
                    <div class="cs-copy-high-hoverimg cs-inline cs-tsmar">
                        <a class="cs-at-layouteachelementmainactions cs-copy-element cs-inline cs-cur cs-hpad" title="Copy Element">
                            <i class="icon-cs-files-o cs-ts-16"></i>
                        </a>
                        <a class="cs-at-layouteachelementmainactions cs-highlight-element cs-inline cs-cur cs-hpad cs-tooltip-top" title="Highlight">
                            <i class="icon-cs-data-enrichment cs-ts-16"></i>
                        </a>
                        <a class="cs-at-layouteachelementmainactions cs-ab-resetclk cs-inline cs-cur cs-hpad cs-tooltip-top" title="Reset">
                            <i class="icon-cs-reset cs-ts-16"></i>
                        </a>
                    </div>
                </div>`;
                
                $(this).children('.cs-at-layoutcontroweach').each(function () {
                    if ($(this).offset().top >= ui.offset.top) //compare
                    {
                     $(imagelayout).insertBefore($(this));
                     i = 1;
                     return false; //break loop
                    }
                });
                if (i != 1) //if element dropped at the end of cart
                {
                    $(imagelayout).appendTo(this);
                }
                $(".dropElement").data("eachActivityVO", {
                        "elementActivityId": "",
                        "copyElement": "",
                        "jqueryWait": "",
                        "actionValue": "",
                        "dropXOffset": "",
                        "lastModifiedBy": "",
                        "layoutElementId": "",
                        "elementTimeout": "",
                        "createdOn": "",
                        "lastModifiedOn": "",
                        "createdBy": "",
                        "elementAction": "",
                        "dynamicIdValue": "",
                        "layoutElementName": "",
                        "dropYOffset": "",
                        "playbackActivityId": "",
                        "actionValueType": ""
                });

                $(".dropElement").removeClass("dropElement");

                $(".cs-ab-complete-img-block.dropAcrive").data("eachLayoutData", $(ui.draggable).data("eachLayoutListData"));

                
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Image" , imgurl);

                $(".dropAcrive").removeClass("dropAcrive");
                acrivitiesDropable();
                contMainSortable();

                // setElementCount();
                // recallTooltip();
            }
            else if ($(ui.draggable).hasClass("cs-conditionActivity")) {
                var getElementHtml =
                `<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-conditionnActivity dropAcrive cs-aparent cs-pr cs-pb-blk">
                        <div class="cs-pa cs-activity-title cs-ts-10">Condition Activity</div>
                        <div class="cs-activity-icon cs-pa">
                            <i class="icon-cs-sql-report-creation"></i>
                        </div>
                        <span class="cs-remove-activity cs-pa cs-cur">
                            <i class="icon-cs-delete"></i>
                        </span>
                        <div class="clearfix cs-pad cs-rmar cs-bmar cs-at-con-if-else">
                            <div class="cs-at-con-if cs-aparent cs-at-layoutcontroweach dropIf cs-at-con-elsifcom">
                                <div class="cs-at-con-actions">
                                    <span class="cs-elseif-add cs-elseif-add-edit">
                                        <i class="icon-cs-new cs-ts-12"></i>
                                    </span>
                                    <span class="cs-at-con-add cs-bluec cs-lmar">
                                        <span class="cs-ts-18">{</span><i class="icon-cs-new cs-ts-12"></i><span class="cs-ts-18">}</span>
                                    </span>
                                    <div class="cs-at-apend-exp cs-inline cs-lmar">
                                        <div class="cs-edit-condition-value cs-truncate">
                                            <span> condition =  </span>
                                            <span class=" cs-ts-10 cs-at-apend-condition-text"></span>
                                            <div class="cs-edit-condition-value-child">
                                                <span> condition =  </span>
                                                <span class=" cs-ts-10  cs-pa cs-at-apend-condition-text"></span>
                                            </div>
                                        </div>
                                        <span class="cs-right-apend-exp cs-lmar"></span>
                                        <span class="cs-at-apend-exp-edit cs-at-apend-exp-edit-condition cs-lmar cs-cur">
                                            <span class="cs-ts-18">{</span><i class="icon-cs-edit cs-ts-12"></i>
                                            <span class="cs-ts-18">}</span>
                                        </span>
                                    </div>
                                    <div class="cs-at-apend-custom-exp-main">
                                        <div class="cs-at-apend-custom-exp cs-inline cs-lmar">
                                            <span class="cs-cur cs-ts-14 cs-textb cs-at-apend-custom-hover">{ }</span>
                                            <div class="cs-at-apend-custom-exp-cont-main">
                                                <div class="cs-at-apend-custom-exp-cont cs-pr"></div>
                                            </div>
                                        </div>
                                        <span class="cs-at-apend-cus-exp-edit cs-cur">
                                            <span class="cs-ts-18">{</span><i class="icon-cs-edit cs-ts-12"></i>
                                            <span class="cs-ts-18">}</span>
                                        </span>
                                    </div>


                                </div>
                                <div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white cs-add-exp-blk">
                                    <div class="clearfix cs-tr">
                                        <span class="cs-cur cs-ts-14 cs-textb">{ }</i></span>
                                        <div class="clearfix cs-inline">
                                            <span class="cs-graylightc cs-rsmar">Custom Expression</span>
                                            <label class="switch-toggle cs-lsmar">
                                                <input type="checkbox" class="cs-cus-exp-tog">
                                                <div class="slider-toggle round-toggle"></div>
                                            </label>
                                        </div>
                                        <span class="cs-cur cs-con-exp-sav"> <i class="icon-cs-save"></i></span>
                                    </div>
                                    <div class="cs-textarea cs-pr cs-at-dd-expr-txtar">
                                        <div class="clearfix cs-tmar">
                                            <span class="cs-rmar cs-exprbuilder cs-pr cs-cur cs-pull-right cs-tsmar" title="Edit Expression">
                                                <i class="icon-cs-expression-edit"></i>
                                            </span>
                                        </div>
                                        <label for="expression">Expression</label>
                                        <textarea placeholder="Enter Expression..."></textarea>
                                    </div>
                                    <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
                                        <div class="cs-cell-7">
                                            <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                                <label>Left Expression</label>
                                                <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                                <input type="text" placeholder="Select Expression" class="cs-ab-textinput" />
                                                <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                    <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="cs-cell-7">
                                            <div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                                <label>Operators</label>
                                                <input type="text" class="cs-cur cs-pe-none" placeholder="Select Operators" class="cs-cond-opr" />
                                            </div>
                                        </div>
                                        <div class="cs-cell-7">
                                            <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                                <label>Right Expression</label>
                                                <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                                <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-cur cs-pe-none"  />
                                                <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                    <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="cs-cell-3f">
                                        <span class="cs-remove-activity-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                                         <i class="icon-cs-delete"></i>
                                        </span>
                                        <span class="cs-remove-activity-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                        <i class="icon-cs-new"></i>
                                        </div>
                                    </div>
                                </div>
                                <div class="cs-at-con-drop-area"></div>
                            </div>
                            <div class="cs-at-con-endif cs-aparent cs-at-layoutcontroweach dropElse">
                                <div class="cs-at-con-drop-area"></div>
                            </div>
                        </div>
                    </div>
                    `;
                $(this).children('.cs-at-layoutcontroweach').each(function () {
                    if ($(this).offset().top >= ui.offset.top) //compare
                    {
                     $(getElementHtml).insertBefore($(this));
                     i = 1;
                     return false; //break loop
                    }
                });
                if (i != 1) //if element dropped at the end of cart
                {
                    $(getElementHtml).appendTo(this);
                }
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Condition");
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropIf", "If");
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropElse", "Else");
                $(".dropAcrive").removeClass("dropAcrive");
                $(".dropIf").removeClass("dropIf");
                $(".dropElse").removeClass("dropElse");
                conditnActivityDropable();
                $(".cs-at-apend-custom-exp-cont").perfectScrollbar();
            } 
            else if ($(ui.draggable).hasClass("cs-playback-drag")) {
                if ($("body").attr("basicAssignments") == "false") {
                    var getName = $(ui.draggable).text().trim();
                    var displayName = $("#display-name-inpt").val();
                    var getElementHtml = '<div class="cs-at-layoutcontroweach cs-playback-drop dropAcrive cs-pad cs-pb-blk">' +
                        '<div class="cs-at-droppedActivities">' +
                        '<div class="cs-at-droppedActivitiesHeading cs-hpad cs-tspad cs-bspad cs-inline cs-line cs-pr">' +
                        '<span class="cs-inline"><i class="icon-cs-caret-right cs-ts-12 cs-greenc"></i></span>' +
                        '<span class="cs-at-droppedActivitiesName">'+getName+'</span>' +
                        '<span class="cs-at-droppedActivitiesActions cs-pull-right cs-rsmar">' +
                        '<a class="cs-cur cs-hpad-sm cs-tooltip-top cs-expand-colapse-playback" title="Mapping">' +
                        '<i class="icon-cs-sync cs-ts-14"></i>' +
                        '</a>' +
                        '<a class="cs-cur cs-hpad-sm cs-tooltip-top" title="Expand">' +
                        '<i class="icon-cs-export cs-ts-14"></i>' +
                        '</a>' +
                        '</span>' +
                        '<a class="cs-cur cs-tc cs-inline cs-at-droppedActivitiesDelete cs-line cs-circle cs-pa">' +
                        '<i class="icon-cs-delete cs-ts-12 cs-whitec cs-vm-align"></i>' +
                        '</a>' +
                        '</div>' +
                        '<div class="clearfix cs-at-droppedActivitiesContent cs-hide cs-vpad cs-line">' +
                        '<a href="#" class="cs-drpd-playback-clos cs-cur">' +
                        '<i class="icon-cs-reject-o cs-ts-10"></i>' +
                        '</a>' +
                        '<div class="cs-cell-12 cs-hmar cs-mapping-container">' +
                        '<div class="cs-cell-12 cs-mapping-list-left cs-at-pb-map">' +
                        '<div class="cs-at-playbackDisplayName cs-disable" data-cs-dropdown="#playbacklist-dd">'+displayName+'</div>' +
                        '<div class="cs-at-topActions cs-tpad cs-bsmar cs-at-top-act-var-elem">' +
                        '<a class="cs-cur cs-hpad-sm cs-ts-12 cs-circle active">Variable</a>' +
                        '<a class="cs-cur cs-hpad-sm cs-ts-12 cs-circle cs-at-top-act-ele-clik">Element</a>' +
                        '</div>' +
                         '<div class="cs-at-varmappinglistmain">' +
							'<ul class="cs-vartabul cs-tmar">' +
								'<li><a href="#var-in">IN</a></li>' +
								'<li><a href="#var-out">OUT</a></li>' +
								'<li><a href="#var-inout">INOUT</a></li>' +
							'</ul>' +
							'<div id="var-in" class="cs-at-pb-map">' +
								'<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
								'<input type="text" name="Sprint Name" placeholder="Search in Variable">' +
								'<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
								'</div>' +
								'<div class="cs-at-mappinglistmain">' +
								'<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-left-list"></ul>' +
								'</div>' +
							'</div>' +
							'<div id="var-out" class="cs-at-pb-map">' +
								'<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
								'<input type="text" name="Sprint Name" placeholder="Search out Variable">' +
								'<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
								'</div>' +
								'<div class="cs-at-mappinglistmain">' +
								'<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-left-list"></ul>' +
								'</div>' +
							'</div>' +
							'<div id="var-inout" class="cs-at-pb-map">' +
								'<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
								'<input type="text" name="Sprint Name" placeholder="Search inout Variable">' +
								'<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
								'</div>' +
								'<div class="cs-at-mappinglistmain">' +
								'<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-left-list"></ul>' +
								'</div>' +
							'</div>' +
                        '</div>' +
                        '<div class="cs-at-elemappinglistmain">' +
                        '<div class="cs-at-eachsearchpart cs-pr cs-tsmar">' +
                        '<input type="text" name="Sprint Name" placeholder="Search Element">' +
                        '<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
                        '</div>' +
                        '<div class="cs-at-mappinglistmain">' +
                        '<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-ele-list"></ul>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-12 cs-mapping-list-right cs-at-pb-map">' +
                        '<div class="cs-at-playbackName">'+getName+'</div>' +
                        '<div class="cs-at-topActions cs-tpad">' +
                        '<a class="cs-cur cs-hpad-sm cs-ts-12 cs-circle">In Parameter</a>' +
                        '</div>' +
                        '<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
                        '<input type="text" name="Sprint Name" placeholder="Search Element">' +
                        '<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
                        '</div>' +
                        '<div class="cs-at-mappinglistmain">' +
                        '<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-right-list"></ul>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-2 cs-hmar cs-tc cs-at-mappedactionmain cs-pr">' +
                        '<a class="cs-tc cs-cur cs-pa cs-circle cs-at-mappedmovingicn">' +
                        '<i class="icon-cs-angle-double-right cs-ts-12"></i>' +
                        '</a>' +
                        '</div>' +
                        '<div class="cs-cell-10 cs-hmar cs-pull-right cs-at-mappedcontmain  cs-at-pb-map">' +
                        '<div class="cs-at-playbackName">'+getName+'</div>' +
                        '<div class="cs-at-topActions cs-tpad">' +
                        '<a class="cs-cur cs-hpad-sm cs-ts-12 cs-circle">Mapped In Parameter</a>' +
                        '</div>' +
                        '<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
                        '<input type="text" name="Sprint Name" placeholder="Search Mapped In Parameter">' +
                        '<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
                        '</div>' +
                        '<div class="clearfix cs-at-mappedListmain">' +
                        '<div class="clearfix cs-at-mappedpart">' +
                        '<ul class="clearfix cs-scroll cs-pr cs-rpad"></ul>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Entail");
                    $(".cs-scroll-2,.cs-scroll").perfectScrollbar();
                    $(".dropAcrive").find(".cs-at-mappedpart").find("ul").find("li").each(function() {
                        var valname = $(this).find(".cs-mapped-left").find(".cs-mapper-name").text();
                        var varibname = $(this).find(".cs-mapped-right").find(".cs-mapper-name").text();
                        $(".dropAcrive").data("eachActivityVO").entailPlaybackVO.entailPlaybackParamsVOs.push({
                            "entailPlaybackParamId": "",
                            "createdBy": "",
                            "valueType": "Variable",
                            "lastModifiedBy": "",
                            "entailPlaybackId": "",
                            "isActive": "",
                            "variableId": "",
                            "variableName": varibname,
                            "value": valname,
                            "createdOn": "",
                            "lastModifiedOn": ""
                        });
                    });
                    if($(ui.draggable).data("playBackEachData").variableVOs != undefined) {
                        var f = $(ui.draggable).data("playBackEachData").variableVOs;
                        for (var i = 0; i < f.length; i++) {
                            var inparamlilisthtml = '<li class="clearfix cs-tspad cs-bspad cs-cur cs-pr">' +
                                '<span class="clearfix cs-ts-14 cs-tw-600 cs-cell-20 cs-truncate cs-mapper-name">' + f[i].variableName + '</span>' +
                                '<span class="clearfix cs-ts-10 cs-cell-20 cs-truncate cs-mapper-type">' + f[i].dataType + '</span>' +
                                '<span class="cs-pa cs-ts-11 cs-tw-600 cs-at-mappingeach">' +
                                '<i class="icon-cs-succeed-o cs-greenc"></i>' +
                                '</span>' +
                                '</li>';
                                inparamlilisthtml = $(inparamlilisthtml).data("inparamVo",f[i]);
                            $(".dropAcrive .cs-plbk-right-list").append(inparamlilisthtml);
                        }
                    }
                    $(".dropAcrive").data("eachActivityVO").entailPlaybackVO.playbackId = $(ui.draggable).data("playBackEachData").playbackId;
                    $(".dropAcrive").data("eachActivityVO").playbackName = $(ui.draggable).data("playBackEachData").displayName;
                    $(".dropAcrive").data("eachActivityVO").entailPlaybackVO.variablesVOs = f;
                    $(".cs-variable-list-block li").each(function() {
                        var getData = $(this).data("VariableEachData");
                        var varnam = $(this).data("VariableEachData").variableName;
                        var datyp = $(this).data("VariableEachData").dataType;
						var parmtyp = $(this).data("VariableEachData").paramType;
						var leftlisteachhtml = '<li class="clearfix cs-tspad cs-bspad cs-cur cs-pr">' +
                        '<span class="clearfix cs-ts-14 cs-tw-600 cs-cell-20 cs-truncate cs-mapper-name">' + varnam + '</span>' +
                        '<span class="clearfix cs-ts-10 cs-cell-20 cs-truncate cs-mapper-type">' + datyp + '</span>' +
                        '<span class="cs-pa cs-ts-11 cs-tw-600 cs-at-mappingeach">' +
                        '<i class="icon-cs-succeed-o cs-greenc"></i>' +
                        '</span>' +
                        '</li>';
						leftlisteachhtml = $(leftlisteachhtml).data("VariableEachData",getData);
						if(parmtyp == "IN"){
							$(".dropAcrive #var-in .cs-plbk-left-list").append(leftlisteachhtml);
						}else if(parmtyp == "OUT"){
							$(".dropAcrive #var-out .cs-plbk-left-list").append(leftlisteachhtml);
						}else if(parmtyp == "INOUT"){
							$(".dropAcrive #var-inout .cs-plbk-left-list").append(leftlisteachhtml);
						}
                    });
                    $(this).closest(".cs-at-layouteachmain").find(".cs-each-element").each(function() {
                        var plElementName = $(this).find(".cs-at-elementname").text();
                        var plElementtyp = $(this).attr("data-eletype");
                        var elelisteachhtml = '<li class="clearfix cs-tspad cs-bspad cs-cur cs-pr">' +
                            '<span class="clearfix cs-ts-14 cs-tw-600 cs-cell-20 cs-truncate cs-mapper-name">' + plElementName + '</span>' +
                            '<span class="clearfix cs-ts-10 cs-cell-20 cs-truncate cs-mapper-type">' + plElementtyp + '</span>' +
                            '<span class="cs-pa cs-ts-11 cs-tw-600 cs-at-mappingeach">' +
                            '<i class="icon-cs-succeed-o cs-greenc"></i>' +
                            '</span>' +
                            '</li>';
                        $(".dropAcrive .cs-plbk-ele-list").append(elelisteachhtml);
                    });
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
				playbknameappendinlist();
            } 
            else if ($(ui.draggable).hasClass("cs-iteraionActivity")) {
                var getElementHtml = '<div class="clearfix cs-aparent dropAcrive cs-at-layoutcontroweach cs-activityBlock cs-iterationActivity cs-pr cs-pb-blk">' +
                    '<div class="cs-pa cs-activity-title cs-ts-10">Iteration Activity</div>' +
                    '<div class="cs-activity-icon cs-pa">' +
                    '<i class="icon-cs-iteration-activity"></i>' +
                    '</div>' +
                    '<span class="cs-remove-activity cs-pa cs-cur">' +
                    '<i class="icon-cs-delete"></i>' +
                    '</span>' +
                    '<div class="clearfix cs-pad cs-rmar cs-bmar">' +
                    '<div class="cs-inline cs-cur cs-vt-align cs-ts-12 cs-cdx-exp-click cs-ite-dd-clk" data-cs-dropdown="#cs-at-condexpresselectndroplist">' +
                    '<span class="cs-label cs-ts-10 cs-label-warning">Con</span>' +
                    '<span class="cs-inline"><i class="icon-cs-caret-down cs-ts-8"></i></span>' +
                    '</div>' +
                    '<div class="cs-at-inp-typ cs-inline">' +
                    '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput" data-contentValue="Con">' +
                    '<input type="Number" name="constantValue" placeholder="Enter The Constant">' +
                    '</div>' +
                    '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Var"  data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">' +
                    '<input type="text" name="VariableValue" placeholder="Select The Variable" disabled>' +
                    '</div>' +
                    '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Lar">' +
                    '<input type="text" name="layoutarrayValue" placeholder="Enter The Layoutarray">' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '</div>';
                $(this).children('.cs-at-layoutcontroweach').each(function () {
                    if ($(this).offset().top >= ui.offset.top) //compare
                    {
                     $(getElementHtml).insertBefore($(this));
                     i = 1;
                     return false; //break loop
                    }
                });
                if (i != 1) //if element dropped at the end of cart
                {
                    $(getElementHtml).appendTo(this);
                }
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Iteration");
                $(".dropAcrive").removeClass("dropAcrive");
                iterationActivityDropable();
                acrivitiesDropable();
            } 
            else if ($(ui.draggable).hasClass("cs-assignmentActivity")) {
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-at-layoutcontroweach dropAcrive cs-activityBlock cs-assignmentActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Assignment Activity</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-assignment-activity"></i>' +
                        '</div>' +
                        '<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>' +
                        '<div class="clearfix cs-at-dd-exprs">' +
                        '<div class="cs-inline cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-asgnm-exp" data-cs-dropdown="#cs-at-condexpresselectndroplist">' +
                        '<span class="cs-label cs-ts-10 cs-label-warning">Ele</span>' +
                        '<span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-ex-ele-main">' +
                        '<div class="cs-input cs-var-el-dd-click cs-asgn-elem cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="ele">' +
                        '<label>Element Name</label>' +
                        '<input type="text" class="cs-cur cs-pe-none" placeholder="Select Element" disabled/>' +
                        '</div>' +
                        '<div class="cs-input cs-asgnm-cus-exp">' +
                        '<label>Expression</label>' +
                        '<input type="text" placeholder="Enter Expression"/>' +
                        '</div>' +
                        '<div class="cs-input cs-var-el-dd-click cs-asgn-var cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">' +
                        '<label>Variable Name</label>' +
                        '<input type="text" class="cs-cur cs-pe-none" placeholder="Select Variable disabled"/>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-pad cs-pull-left cs-ts-18">' +
                        '<i class="icon-cs-angle-double-right"></i>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-var-el-dd-click cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">' +
                        '<label>Variable Name</label>' +
                        '<input type="text" class="cs-cur cs-pe-none" placeholder="Select Variable" disabled/>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-pad cs-pull-left cs-ts-18 cs-pramtr-trg-blk-tog cs-cur">' +
                        '<i class="icon-cs-new"></i>' +
                        '</div>' +
                        '</div>' +
                        '<div class="clearfix cs-prameter-trig-block cs-pad cs-rmar cs-bmar cs-bg-white cs-hide">' +
                        '<div class="cs-cell-12">' +
                        '<div class="cs-input cs-layoutname cs-layout-name-cus">' +
                        '<div class="clearfix">' +
                        '<label for="layoutname">Variable Name</label>' +
                        '<input id="layoutname" type="text" name="layoutname" placeholder="Enter text here">' +
                        '</div>' +
                        '</div>' +
                        '<div class="clearfix">' +
                        '<span class="cs-graylightc cs-rsmar">Prameter</span>' +
                        '<label class="switch-toggle cs-lsmar">' +
                        '<input type="checkbox" class="cs-prameter-enable">' +
                        '<div class="slider-toggle round-toggle"></div>' +
                        '</label>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-12">' +
                        '<div class="cs-input">' +
                        '<label>Data Type</label>' +
                        '<select>' +
                        '<option>Field Type1</option>' +
                        '<option>Field Type2</option>' +
                        '<option>Field Type3</option>' +
                        '<option>Field Type4</option>' +
                        '</select>' +
                        '</div>' +
                        '<div class="cs-input cs-hide cs-ps-pram-val">' +
                        '<label>Parameter Type</label>' +
                        '<select>' +
                        '<option>Field Type1</option>' +
                        '<option>Field Type2</option>' +
                        '<option>Field Type3</option>' +
                        '<option>Field Type4</option>' +
                        '</select>' +
                        '</div>' +
                        '</div>' +
                        '<div class="clearfix">' +
                        '<div class="cs-tr">' +
                        '<a href="#" class="cs-btn cs-btn-sm cs-btn-info cs-save-assign">Save</a>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Assignment");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            } else if ($(ui.draggable).hasClass("cs-verificationActivity")) {
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-verificationActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Verification Activity</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-verification-activity"></i>' +
                        '</div>' +
                        '<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>' +
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
                        '<div class="clearfix cs-tr">           ' +
                        '<span class="cs-rmar cs-snapshot cs-pr cs-cur"><i class="icon-cs-camera"></i></span>' +
                        '<span class="cs-rmar cs-status cs-pr cs-cur"><i class="fa fa-line-chart"></i></span>' +
						 '<span class="cs-cur cs-ts-14 cs-textb">{ }</i></span>' +
                        '<div class="clearfix cs-inline">' +
                        '<span class="cs-graylightc cs-rsmar">Custom Expression</span>' +
                        '<label class="switch-toggle cs-lsmar">' +
                        '<input type="checkbox" class="cs-cus-exp-tog">' +
                        '<div class="slider-toggle round-toggle"></div>' +
                        '</label>' +
                        '</div>' +
                        '</div> ' +
                        '<div class="cs-textarea cs-pr cs-at-dd-expr-txtar">' +
						 '<div class="clearfix cs-tmar">' +
						'<span class="cs-rmar cs-exprbuilder cs-pr cs-cur cs-pull-right cs-tsmar" title="Edit Expression"><i class="icon-cs-expression-edit"></i></span>' +
						 '</div> ' +
                        '<label for="expression">Expression</label>' +
                        '<textarea placeholder="Enter Expression..."></textarea>' +
                        '</div>' +
                        '<div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">' +
                        '<label>Left Expression</label><span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>' +
                        '<input type="text" class="cs-cur cs-pe-none" placeholder="Select Expression" disabled/>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">' +
                        '<label>Operators</label>' +
                        '<input type="text" class="cs-cur cs-pe-none" placeholder="Select Operators" disabled/>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">' +
                        '<label>Right Expression</label><span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>' +
                        '<input type="text" class="cs-cur cs-pe-none" placeholder="Select Expression" disabled/>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-textarea cs-pr cs-error-message">' +
                        '<label for="Message">Message</label>' +
                        '<textarea placeholder="Enter Error Message..."></textarea>' +
                        '</div>' +
                        '</div>' +
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Verification");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            } else if ($(ui.draggable).hasClass("cs-assertionActivity")) {
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-assertionActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Assertion Activity</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-assertion-activity"></i>' +
                        '</div>' +
                        '<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'

                        +
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
                        '<div class="clearfix cs-tr">                               ' +
						'<span class="cs-cur cs-ts-14 cs-textb">{ }</i></span>' +
                        '<div class="clearfix cs-inline">' +
                        '<span class="cs-graylightc cs-rsmar">Custom Expression</span>' +
                        '<label class="switch-toggle cs-lsmar">' +
                        '<input type="checkbox" class="cs-cus-exp-tog">' +
                        '<div class="slider-toggle round-toggle"></div>' +
                        '</label>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-textarea cs-pr cs-at-dd-expr-txtar">' +
						 '<div class="clearfix cs-tmar">' +
						'<span class="cs-rmar cs-exprbuilder cs-pr cs-cur cs-pull-right cs-tsmar" title="Edit Expression"><i class="icon-cs-expression-edit"></i></span>' +
						 '</div> ' +
                        '<label for="expression">Expression</label>' +
                        '<textarea placeholder="Enter Expression..."></textarea>' +
                        '</div>' +
                        '<div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">' +
                        '<label>Left Expression</label><span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>' +
                        '<input type="text" class="cs-cur cs-pe-none" placeholder="Select Expression" disabled/>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">' +
                        '<label>Operators</label>' +
                        '<input type="text" class="cs-cur cs-pe-none" placeholder="Select Operators" disabled/>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">' +
                        '<label>Right Expression</label><span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>' +
                        '<input type="text" class="cs-cur cs-pe-none" placeholder="Select Expression" disabled/>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-textarea cs-pr cs-error-message">' +
                        '<label for="Message">Message</label>' +
                        '<textarea placeholder="Enter Error Message..."></textarea>' +
                        '</div>' +
                        '</div>' +
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Assertion");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            } else if ($(ui.draggable).hasClass("cs-openurl")) {
                var getElementHtml = '<div class="clearfix cs-at-layoutcontroweach cs-activityBlock dropAcrive cs-openurlActivity cs-pr cs-pb-blk">' +
                    '<div class="cs-pa cs-activity-title cs-ts-10">Open Url</div>' +
                    '<div class="cs-activity-icon cs-pa">' +
                    '<i class="icon-cs-link"></i>' +
                    '</div>' +
                    '<span class="cs-remove-activity cs-pa cs-cur">' +
                    '<i class="icon-cs-delete"></i>' +
                    '</span>' +
                    '<div class="clearfix cs-pad cs-rmar cs-bmar">' +
                    '<div class="cs-inline">' +
                    '<div class="cs-inline cs-cur cs-vt-align cs-ts-12 cs-cdx-exp-click cs-openurl-dd-clk" data-cs-dropdown="#cs-at-condexpresselectndroplist">' +
                    '<span class="cs-label cs-ts-10 cs-label-warning">Con</span>' +
                    '<span class="cs-inline"><i class="icon-cs-caret-down cs-ts-8"></i></span>' +
                    '</div>' +
                    '<div class="cs-at-inp-typ cs-inline">' +
                    '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput" data-contentValue="Con">' +
                    '<input type="text" name="constantValue" placeholder="Enter The Constant">' +
                    '</div>' +
                    '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Var"  data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">' +
                    '<input type="text" name="VariableValue" placeholder="Select The Variable" disabled>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '<div class="clearfix">' +
                    '<div class="cs-cell-12">' +
                        '<div class="cs-input">' +
                            '<label>Function</label>' +
                            '<input type="text" placeholder="Select Function" class="cs-ou-fun-inp">' +
                            '<a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a> ' +
                        '</div>' +
                    '</div>' +
                    '<div class="cs-cell-12">' +
                        '<div class="cs-input">' +
                            '<label>Responsbility</label>' +
                            '<input type="text" placeholder="Select Responsbility" class="cs-ou-res-inp">' +
                            '<a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a>' + 
                        '</div>' +
                    '</div>' +
                    '<div class="cs-cell-12">' +
                        '<div class="cs-input">' +
                            '<label>Application</label>' +
                            '<input type="text" placeholder="Select Application" class="cs-ou-app-inp">' +
                            '<a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a>' + 
                        '</div>' +
                    '</div>' +
                    '<div class="cs-cell-12">' +
                        '<div class="cs-input">' +
                            '<label>Security Group</label>' +
                            '<input type="text" placeholder="Security Group" class="cs-ou-sg-inp">' +
                            '<a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a>' + 
                        '</div>' +
                    '</div>' +
                    '<div class="cs-cell-12">' +
                        '<div class="cs-input">' +
                           ' <label>Language</label>' +
                           ' <input type="text" placeholder="Select Language" class="cs-ou-lang-inp">' +
                            '<a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a> ' +
                       ' </div>' +
                    '</div>' +
                    '<div class="cs-cell-12">' +
                       ' <div class="cs-input">' +
                            '<label>Param</label>' +
                            '<input type="text" placeholder="Enter Param Value" class="cs-ou-param-inp">' +
                       ' </div>' +
                   ' </div>' +
                '</div>' +
                    '</div>';
                $(this).children('.cs-at-layoutcontroweach').each(function () {
                    if ($(this).offset().top >= ui.offset.top) //compare
                    {
                     $(getElementHtml).insertBefore($(this));
                     i = 1;
                     return false; //break loop
                    }
                });
                if (i != 1) //if element dropped at the end of cart
                {
                    $(getElementHtml).appendTo(this);
                }
                droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "OpenURL");
                $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
            }
            else if($(ui.draggable).hasClass("cs-login")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-loginActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Login</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-logs-import"></i>' +
                        '</div>' +
                        '<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '<div class="clearfix cs-rmar cs-bmar">' +
                       '<div class="clearfix">' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-login-inp cs-login-username">' +
                        '<label>User Name</label>'+
                        '<input type="text" placeholder="Username">' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-login-inp cs-login-password">' +
                        '<label>Password</label>' +
                        '<input type="password" placeholder="Password">' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Login");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            else if ($(ui.draggable).hasClass("cs-fileactivity")) {
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-fileActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">File Activity</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-file-text-o"></i>' +
                        '</div>' +
                        '<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>' +
                        '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
                        '<div class="clearfix">' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-fileactivity-inp cs-fileactivity-filetype">' +
                        '<label>File Type</label>' +
                        '<select>'+
                        '<option value="Read">Read</option>'+
                        '<option value="Write">Write</option>'+
                        '</select>'+
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-fileactivity-inp cs-fileactivity-source">' +
                        '<label>Source</label>' +
                        '<input type="text">' +
                        '</div>' +
                        '</div>' +
                        '<div class="cs-cell-8">' +
                        '<div class="cs-input cs-pr cs-fileactivity-inp cs-fileactivity-target">' +
                        '<label>Target (Data Table)</label>' +
                        '<input type="text">' +
                        '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>';
                        if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                            $(this).children('.cs-at-layoutcontroweach').each(function () {
                if ($(this).offset().top >= ui.offset.top) //compare
                {     
                    if($(this).hasClass("cs-closebrowserActivity"))  {
                    $(getElementHtml).insertBefore($(this));
                    }   
                    else{    
                    $(getElementHtml).insertBefore($(this));                 
                }
                i = 1;
                    return false; //break loop
                }
            });
            if (i != 1) //if element dropped at the end of cart
            {
                $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
            }
                        }

                        else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                             $(this).children('.cs-at-layoutcontroweach').each(function () {
                if ($(this).offset().top >= ui.offset.top) //compare
                {     
                    if($(this).hasClass("cs-openbrowserActivity"))  {
                    $(getElementHtml).insertAfter($(this));
                    }   
                    else{                       
                    $(getElementHtml).insertBefore($(this));                 
                }
                i = 1;
                    return false; //break loop
                }
            });
            if (i != 1) //if element dropped at the end of cart
            {
                $(getElementHtml).appendTo(this);
            }
                        }
                        
                        else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore($(this));
                            i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "csFileAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            else if($(ui.draggable).hasClass("cs-logout")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-logoutActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Logout</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-logout"></i>' +
                        '</div>' +
						'<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
						'</div>';
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Logout");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }else if($(ui.draggable).hasClass("cs-screenshot")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-screenshotActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Screenshot</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-screenshot"></i>' +
                        '</div>' +
						'<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
						'<div class="clearfix">' +
							'<div class="cs-cell-4">' +
								'<label>File Name</label>' +
							'</div>' +
							'<div class="cs-cell-8">' +
								'<input type="text" class="cs-scshot-fname"/>' +
							'</div>' +
						'</div>' +
						'</div>';
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "ScreenShot");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            // Launch Browser start 
            else if($(ui.draggable).hasClass("cs-launch-browser")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-LaunchBrowser cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Launch Browser</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-launch-browser"></i>' +
                        '</div>' +
						'<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
						'</div>';
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
					droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "LaunchBrowser");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            // close Browser start 
            else if($(ui.draggable).hasClass("cs-close-browser")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-CloseBrowser cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Close Browser</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-close-browser"></i>' +
                        '</div>' +
						'<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
						'</div>';
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
					droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "CloseBrowser");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            else if($(ui.draggable).hasClass("cs-data-table")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-aparent cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-DataTable cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-12">Data Table Activity</div>' +
                        '<div class="cs-vpad cs-drg-txt-box-par"><div class="cs-center cs-graylightc cs-drg-txt-box">Drag and drop your data table function only...</div></div>'+
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-data-table-activity"></i>' +
                        '</div>' +
						'<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '</div>';
                    if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                                if($(this).hasClass("cs-closebrowserActivity"))  {
                         $(getElementHtml).insertBefore($(this));
                                }   
                                else{    
                                $(getElementHtml).insertBefore($(this));                 
                            }
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                            $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
                        }
                    }

                    else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                        $(this).children('.cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {     
                                if($(this).hasClass("cs-openbrowserActivity"))  {
                                $(getElementHtml).insertAfter($(this));
                                }   
                                else{                       
                                $(getElementHtml).insertBefore($(this));                 
                            }
                            i = 1;
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                        $(getElementHtml).appendTo(this);
                    }
                    }
                    
                    else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore($(this));
                            i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
					droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "DataTableActivity");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
                $(".cs-at-box-head-field").removeClass("active");
                $(".cs-data-table-title").addClass("active");
                $(".cs-playbackhead-title").addClass("cs-bline active");
                $(".cs-at-box-head-field").addClass("cs-cur");
                $(".cs-at-box-head-field.cs-data-table-title").removeClass("cs-hide");
                $(".cs-pb-activities-par").toggleClass("cs-hide");
                $(".cs-pb-data-table-par").toggleClass("cs-hide");
            }
            else if($(ui.draggable).hasClass("cs-excel-auto-act")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-aparent cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-excel-auto-act-child cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-12">Excel Activity</div>' +
                        '<div class="cs-vpad cs-drg-txt-box-par"><div class="cs-center cs-graylightc cs-drg-txt-box">Drag and drop your excel function only...</div></div>'+
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-file-excel-o"></i>' +
                        '</div>' +
						'<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '</div>';
                    if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity")) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                                if($(this).hasClass("cs-closebrowserActivity"))  {
                         $(getElementHtml).insertBefore($(this));
                                }   
                                else{    
                                $(getElementHtml).insertBefore($(this));                 
                            }
                         i = 1;
                         return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                            $(".cs-pb-ly-droparea").find(".cs-closebrowserActivity").before(getElementHtml);
                        }
                    }

                    else if ($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")) {
                        $(this).children('.cs-at-layoutcontroweach').each(function () {
                            if ($(this).offset().top >= ui.offset.top) //compare
                            {     
                                if($(this).hasClass("cs-openbrowserActivity"))  {
                                $(getElementHtml).insertAfter($(this));
                                }   
                                else{                       
                                $(getElementHtml).insertBefore($(this));                 
                            }
                            i = 1;
                                return false; //break loop
                            }
                        });
                        if (i != 1) //if element dropped at the end of cart
                        {
                        $(getElementHtml).appendTo(this);
                    }
                    }
                    
                    else if ((!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-closebrowserActivity"))) &&(!($(".cs-pb-ly-droparea").find(".cs-at-layoutcontroweach").hasClass("cs-openbrowserActivity")))) {
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                            $(getElementHtml).insertBefore($(this));
                            i = 1;
                            return false; //break loop
                        }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                }
					droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "ExcelAutomationAct");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
                $(".cs-at-box-head-field").removeClass("active");
                $(".cs-excelauto-title").addClass("active");
                $(".cs-playbackhead-title").addClass("cs-bline active");
                $(".cs-at-box-head-field").addClass("cs-cur");
                $(".cs-at-box-head-field.cs-excelauto-title").removeClass("cs-hide");
                $(".cs-pb-activities-par").toggleClass("cs-hide");
                $(".cs-pb-excelauto-par").toggleClass("cs-hide");
                excelAutomationDroppable();
                excelReadDroppable();
            }
            else if($(ui.draggable).hasClass("cs-shortcut-activity")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-ShortcutActivity cs-pr cs-pb-blk">' +
                        '<div class="cs-pa cs-activity-title cs-ts-10">Hotkey</div>' +
                        '<div class="cs-activity-icon cs-pa">' +
                        '<i class="icon-cs-short-cut"></i>' +
                        '</div>' +
                        '<span class="cs-remove-activity cs-pa cs-cur">' +
                        '<i class="icon-cs-delete"></i>' +
                        '</span>'+
                        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
                        '<div class="clearfix">' +
                            '<input type="text" class="cs-shortcutkeyentry" placeholder="Enter Hotkey"/>' +
                        '</div>' +
                        '</div>';
                        '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
            }
                    });
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "Hotkey");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                }
            }
            else if($(ui.draggable).hasClass("cs-explicit-time_out")){
                if ($("body").attr("basicAssignments") == "false") {
                    var getElementHtml='<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-explicit-time_out cs-pr cs-pb-blk">' +
                    '<div class="cs-pa cs-activity-title cs-ts-10">Explicit-Timeout</div>' +
                    '<div class="cs-activity-icon cs-pa">' +
                    '<i class="icon-cs-time-zone"></i>' +
                    '</div>' +
                    '<span class="cs-remove-activity cs-pa cs-cur">' +
                    '<i class="icon-cs-delete"></i>' +
                    '</span>' +
                    '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
                    '<div class="clearfix cs-tr">           ' +
                    '<span class="cs-rmar cs-snapshot cs-pr cs-cur"><i class="icon-cs-camera"></i></span>' +
                    '<span class="cs-rmar cs-status cs-pr cs-cur"><i class="fa fa-line-chart"></i></span>' +
                     '<span class="cs-cur cs-ts-14 cs-rmar cs-textb">{ }</i></span>' +
                    '<div class="clearfix cs-inline">' +
                    '<span class="cs-graylightc cs-rsmar">Custom Expression</span>' +
                    '<label class="switch-toggle cs-lsmar">' +
                    '<input type="checkbox" class="cs-cus-exp-tog">' +
                    '<div class="slider-toggle round-toggle"></div>' +
                    '</label>' +
                    '</div>' +
                    '</div> ' +
                    '<div class="cs-textarea cs-pr cs-at-dd-expr-txtar">' +
                     '<div class="clearfix cs-tmar">' +
                    '<span class="cs-rmar cs-exprbuilder cs-pr cs-cur cs-pull-right cs-tsmar" title="Edit Expression"><i class="icon-cs-expression-edit"></i></span>' +
                     '</div> ' +
                     '<div class="cs-cell-12f">'+
                     '<label for="expression">Expression</label>' +
                    '<textarea placeholder="Enter Expression..."></textarea>' +
                     '</div>'+
                     '<div class=" cs-lmar cs-cell-11f">'+
                     '<div class="cs-input cs-var-el-dd-click cs-operator explct-wait-section cs-rad-none">'+
                    
                    '<label for="wait_tym">Wait time</label> '+   // datepicker
                    '<input type="text" class="wait_tym cs-custom-explct-exprs"value="" autocomplete="off">'+
                    '</div>'+
                     '</div>'+
                    
                    '</div>' +
                    '<div class="clearfix cs-at-dd-exprs  cs-tmar cs-tpad">' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-var-el-dd-click cs-left-expr explct-hide-var" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">' +
                    '<label>Left Expression</label><span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Ele</span>' +
                    '<input type="text" class="cs-cur cs-pe-none cs-ab-textinput" placeholder="Select Expression" disabled/>' +
                    '<div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">'+
                        '<img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">'+
                    '</div>'+
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +
                    '<div class="cs-input cs-var-el-dd-click cs-operator cs-explct-opertr cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">' +
                    '<label>Operators</label>' +
                    '<span class="cs-show">'+
                    '<span class="cs-hide cs cs-apnd-oprts"></span>'+
                    '<input type="text" class="cs-slct-oprts cs-cur cs-pe-none"  placeholder="Select Operators" disabled/>' +
                    '</div>' +
                    '</div>' +
                    '<div class="cs-cell-8">' +

                    '<div class="cs-input cs-var-el-dd-click cs-operator explct-wait-section cs-rad-none">'+
                    
                    '<label for="wait_tym">Wait time</label> '+   // datepicker
                    '<input type="text" class="wait_tym explct-right-expr" value="" autocomplete="off">'+
                    '</div>';
                    $(this).children('.cs-at-layoutcontroweach').each(function () {
                        if ($(this).offset().top >= ui.offset.top) //compare
                        {
                         $(getElementHtml).insertBefore($(this));
                         i = 1;
                         return false; //break loop
                        }
                    });
                    
                    if (i != 1) //if element dropped at the end of cart
                    {
                        $(getElementHtml).appendTo(this);
                    }
                    droptoGetThisActivityData(".cs-at-layoutcontroweach.dropAcrive", "explcit-wait-time");
                    $(".cs-at-layoutcontroweach.dropAcrive").removeClass("dropAcrive");
                    $('.wait_tym').timepicker({
                        showSecond: true,
                        timeFormat: 'hh:mm:ss:',
                    })
                }}
            
            recallTooltip();
            contMainSortable();
            toggleDropArea();
            datatableDroppable();
            eachrowDroppable();
            excelAutomationDroppable();
            excelReadDroppable();
        }
    });
}

function playbackdragfn() {
    $(".cs-playback-drag").draggable({
        appendTo: "body",
        helper: "clone",
        cursor: "move",
        revert: "invalid",
        drag: function(event, ui) {}
    });
}

function playbacktreejson() {
    var logId = [];
    var logParentId = [];
    var logTitle = [];
    var logDescription = [];
    $.getJSON('../../json/playback-layout-list.json', function() {
    })
    .fail(function() {
        console.log("Layout Json is Empty");
    })
    .done(function(data) {
        console.log("Layout Json is Not Empty");
        var length = data.layoutDetails.length;
        var getData = new Array();
        for (var i = 0; i < length; i++) {
            getData[i] = data.layoutDetails[i];
            logId[i] = data.layoutDetails[i].layoutId;
            logParentId[i] = data.layoutDetails[i].parentLayoutId;
            logTitle[i] = data.layoutDetails[i].displayName;
            //logDescription[i] = data.layoutDetails[i].logDescription;
            var layoutTree = '<li log-id=' + logId[i] + ' log-parent-id=' + logParentId[i] + '>'

                +
                '<div class="clearfix cs-cur cs-at-layout-main">' +
                '<div class="cs-at-layout-name cs-truncate">' + logTitle[i] + '</div>' +
                '</div>'

                +
                '</li>';
            if (logParentId[i] == 0) {
                $(".cs-playbackcreation-tree").append(layoutTree);
            }
            for (var j = 0; j < length; j++) {
                if (logParentId[i] == logId[j]) {
                    if ($(".cs-playbackcreation-tree li[log-id='" + logId[j] + "']").find("ul").length >= 1) {
                        $(".cs-playbackcreation-tree li[log-id='" + logId[j] + "'] > ul").append(layoutTree);
                    } else {
                        $(".cs-playbackcreation-tree li[log-id='" + logId[j] + "']").append('<ul class="active">' + layoutTree + '</ul>');
                    }
                    $('li[log-id=' + logId[i] + ']').append('<ul class="active"></ul>');
                }
            }
        }
        $(".cs-playbackcreationmain-tree .cs-at-layout-main").each(function(index,val) {
            // alert("layout-setdtata")
        	var layoutName= $(this).find(".cs-at-layout-name").text();

        	for (var i = 0; i < getData.length; i++) {
        	if(layoutName==getData[i].displayName){
        	$(this).data("eachLayoutListData", getData[i]);
        	}
        	}
        });
        $(".cs-playbackcreation-tree li").each(function() {
            if ($(this).find("> ul >li").length == 0) {
                $(this).addClass("no-child");
            }
        });
        $(".cs-playbackcreationmain-tree .cs-at-layout-main").draggable({
            appendTo: "body",
            helper: "clone",
            cursor: "move",
            revert: "invalid",
            drag: function(event, ui) {}
        });

        $( ".cs-ab-Project-list-draggable li.cs-at-imagelayout-main" ).draggable({   
            revert: 'invalid', 
            helper: 'clone',
            cursor: 'move',
        });

        
        playbackdragfn();
    })
    .always(function() {
        $(".cs-at-box .cs-playbackmain .cs-activity-circle").draggable({
            appendTo: "body",
            helper: "clone",
            cursor: "move",
            revert: "invalid",
            drag: function(event, ui) {
                $(ui.helper).addClass("ui-draggable-helper");
                if ($(ui.helper).hasClass("cs-assignmentActivity")) {
                    $(ui.helper).addClass("asgn");
                }
                if ($(ui.helper).hasClass("cs-verificationActivity")) {
                    $(ui.helper).addClass("verf");
                }
                if ($(ui.helper).hasClass("cs-assertionActivity")) {
                    $(ui.helper).addClass("aser");
                }
                if ($(ui.helper).hasClass("cs-iteraionActivity")) {
                    $(ui.helper).addClass("iter");
                }
                if ($(ui.helper).hasClass("cs-conditionActivity")) {
                    $(ui.helper).addClass("cond");
                }
                if ($(ui.helper).hasClass("cs-openurl")) {
                    $(ui.helper).addClass("url");
                }
                if ($(ui.helper).hasClass("cs-login")) {
                    $(ui.helper).addClass("login");
                }
                if ($(ui.helper).hasClass("cs-logout")) {
                    $(ui.helper).addClass("logout");
                }
                if ($(ui.helper).hasClass("cs-screenshot")) {
                    $(ui.helper).addClass("screenshot");
                }
                // Launch and close Browser
                if ($(ui.helper).hasClass("cs-launch-browser")) {
                    $(ui.helper).addClass("launchbrowser");
                }
                if ($(ui.helper).hasClass("cs-close-browser")) {
                    $(ui.helper).addClass("closebrowser");
                }
                if ($(ui.helper).hasClass("cs-data-table")) {
                    $(ui.helper).addClass("cs-dat");
                }
                if ($(ui.helper).hasClass("cs-fileactivity")) {
                    $(ui.helper).addClass("cs-ex");
                }
                if ($(ui.helper).hasClass("cs-addRow")) {
                    $(ui.helper).addClass("cs-addR");
                }
                if ($(ui.helper).hasClass("cs-remRow")) {
                    $(ui.helper).addClass("cs-remR");
                }
                 if ($(ui.helper).hasClass("cs-uptROw")) {
                    $(ui.helper).addClass("cs-uptR");
                }
                if ($(ui.helper).hasClass("cs-filRow")) {
                    $(ui.helper).addClass("cs-filR");
                }
                if ($(ui.helper).hasClass("cs-merge-table")) {
                    $(ui.helper).addClass("cs-merR");
                }
                if ($(ui.helper).hasClass("cs-eachRow")) {
                    $(ui.helper).addClass("cs-eachR");
                }
                if ($(ui.helper).hasClass("cs-shortcut-activity")) {
                    $(ui.helper).addClass("shortcutactivity");
                }
                if ($(ui.helper).hasClass("cs-excel-auto-act")) {
                    $(ui.helper).addClass("cs-exc-aut");
                }
                if ($(ui.helper).hasClass("cs-excel-act")) {
                    $(ui.helper).addClass("cs-exc-child");
                }
                if ($(ui.helper).hasClass("cs-excel-manipulation-act")) {
                    $(ui.helper).addClass("cs-exc-manupulation");
                }
                if ($(ui.helper).hasClass("cs-excel-advanced-act")) {
                    $(ui.helper).addClass("cs-exc-advanced");
                }
                if ($(ui.helper).hasClass("cs-excel-delete-act")) {
                    $(ui.helper).addClass("cs-exc-delete");
                }
                if ($(ui.helper).hasClass("cs-excel-filter-act")) {
                    $(ui.helper).addClass("cs-exc-filter");
                }
                if ($(ui.helper).hasClass("cs-excel-read-act")) {
                    $(ui.helper).addClass("cs-exc-read");
                }
                if ($(ui.helper).hasClass("cs-excel-chart-act")) {
                    $(ui.helper).addClass("cs-exc-chart");
                }
                if ($(ui.helper).hasClass("cs-excel-insert-act")) {
                    $(ui.helper).addClass("cs-exc-insert");
                }
                if ($(ui.helper).hasClass("cs-excel-save-act")) {
                    $(ui.helper).addClass("cs-exc-save");
                }
                if ($(ui.helper).hasClass("cs-excel-write-act")) {
                    $(ui.helper).addClass("cs-exc-write");
                }
            }
        });
        playbackdragfn();
    });
}

function varTrigbkock() {
    var pbListtabs = $('.cs-variable-list-block');
    var pbaddtab = $('.cs-var-add-block');
    pbListtabs.toggle();
    pbaddtab.toggle();
}

function inputFocus() {
    $("input[type=text]").focus(function() {
        $(this).parent(".cs-input").addClass("active");
    });
    $("input[type=text]").focusout(function() {
        $(this).parent(".cs-input").removeClass("active");
    });
    $("textarea").focus(function() {
        $(this).parents(".cs-textarea").addClass("active");
    });
    $("textarea").focusout(function() {
        $(this).parents(".cs-textarea").removeClass("active");
    });
}

function variableJson() {
    $.getJSON('../../json/appTest/variable.json', function(data) {
        var len = data.VariableDetails.length;
        $(data.VariableDetails).each(function(dataIndex, dataValue) {
            var lihtml = '<li class="liadded">' + dataValue.variableName + '</li>';
            var lipadhtml = '<li class="clearfix cs-lpad cs-tspad cs-bspad liadded cs-pr">' + dataValue.variableName + '<div class="cs-inline cs-pa cs-variable-control-block"><a class="cs-edit-variable cs-inline cs-cur cs-hpad cs-tooltip-top" title="Edit"><i class="icon-cs-edit cs-ts-14"></i></a><a class="cs-delete-variable cs-inline cs-cur cs-hpad cs-tooltip-top" title="Delete"><i class="icon-cs-delete cs-ts-14"></i></a></div></li>';
            $(".cs-at-var-list").append(lihtml);
            $(".cs-variable-list-block").append(lipadhtml);
            $(".liadded").data("VariableEachData", dataValue);
            $("li").removeClass("liadded");
        });
    });
}

function playbackListJson() {
    $.getJSON('../../json/appTest/playback.json', function(pldata) {
        var len = pldata.playBackDetails.length;
        $(pldata.playBackDetails).each(function(pldataIndex, pldataValue) {
            var lihtml = '<li class="clearfix cs-tpad cs-playback-drag plbk-droped">' + pldataValue.displayName + '</li>';
            $(".cs-at-rit-playback-list").append(lihtml);
            $(".plbk-droped").data("playBackEachData", pldataValue);
            $(".cs-playback-drag").removeClass("plbk-droped");
        });
        playbackdragfn();
    });
}

function resetoveralljson() {
    $(".cs-pb-ly-droparea").data("playBackOverall", {
        "listIndexId": "",
        "variableVOs": [],
        "playbackActivityVOs": [],
        "displayName": "",
        "lastModifiedBy": "",
        "description": "",
        "GUID": "",
        "isActive": "",
        "createdOn": "",
        "userId": "",
        "loggedUserId": "",
        "orgId": "",
        "lastModifiedOn": "",
        "versioningName": "",
        "playbackId": "",
        "loggedUserGUID": "",
        "createdBy": "",
        "sprintName": "",
        "applicationId": "",
        "ownedBy": "",
        "applicationName": ""
    });
}

function mainFunction() {
    var mainFullJSON;
    var overallJson = $(".cs-pb-ly-droparea").data("playBackOverall");
    if ($("#playbackIsactive").prop("checked") == true) {
        overallJson.isActive = "Y";
    } else {
        overallJson.isActive = "N";
    }
    overallJson.description = $("#description3").val();
    overallJson.versioningName = $("#playback-name-inpt").val();
    overallJson.displayName = $("#display-name-inpt").val();
    overallJson.applicationName = $(".cs-at-pb-appliactionname-main li.active").find(".cs-at-pb-apname").text();
    var mainFullJSON = builFirstLevel(".cs-pb-ly-droparea");
    console.log(mainFullJSON);
}

function builFirstLevel(firstLevelBlog) {
    console.log(firstLevelBlog)
    var x;
    var mainFun = $(firstLevelBlog).data("playBackOverall");
    $(firstLevelBlog).find(" > .cs-at-layoutcontroweach").each(function(mainIndex, mainValue) {
        console.log('mainValue.......',mainValue)
        if ($(mainValue).hasClass("cs-layout-container")) {
            x = $(mainValue).data("eachActivityVO");
            var getVal = layoutCheckFun($(mainValue).find("> .cs-at-layouttogglecontentmain > .cs-at-layoutcontroweach"));
            x.layoutActivityVO.playbackActivityVOs = getVal;
            console.log(getVal);
        } 
        else if ($(mainValue).hasClass("cs-openurlActivity")) {
                x = $(mainValue).data("eachActivityVO");
        } 
        else if ($(mainValue).hasClass("cs-verificationActivity")) {
            x = $(mainValue).data("eachActivityVO");
        } 
        else if ($(mainValue).hasClass("cs-assertionActivity")) {
            x = $(mainValue).data("eachActivityVO");
        } 
        else if ($(mainValue).hasClass("cs-iterationActivity")) {
            x = $(mainValue).data("eachActivityVO");
            var getVal = layoutCheckFun($(mainValue).find("> .cs-at-layoutcontroweach"));
            x.iterationActivityVO.playbackActivityVOs = getVal;
        } 
        else if ($(mainValue).hasClass("cs-assignmentActivity")) {
            x = $(mainValue).data("eachActivityVO");
        } 
        else if ($(mainValue).hasClass("cs-screenshotActivity")) {
            x = $(mainValue).data("eachActivityVO");
        }
        else if ($(mainValue).hasClass("cs-loginActivity")) {
            x = $(mainValue).data("eachActivityVO");
        }
        else if ($(mainValue).hasClass("cs-logoutActivity")) {
            x = $(mainValue).data("eachActivityVO");
        }
        else if ($(mainValue).hasClass("cs-LaunchBrowser")) {
            x = $(mainValue).data("eachActivityVO");
        }
        else if ($(mainValue).hasClass("cs-CloseBrowser")) {
            x = $(mainValue).data("eachActivityVO");
        } 
        else if ($(mainValue).hasClass("cs-ShortcutActivity")) {
            x = $(mainValue).data("eachActivityVO");
        } 
        else if ($(mainValue).hasClass("cs-conditionnActivity")) {
            x = $(mainValue).data("eachActivityVO");
            var getVal = layoutCheckFun($(mainValue).find("> .cs-at-con-if-else > .cs-at-layoutcontroweach"));
            x.conditionalActivitySet = getVal;
        } 
        else if ($(mainValue).hasClass("cs-playback-drop")) {
            x = $(mainValue).data("eachActivityVO");
        }
        else if ($(mainValue).hasClass("cs-image-element")) {
            x = $(mainValue).data("eachActivityVO");
        }
        else if ($(mainValue).hasClass("cs-at-con-if")) {
            x = $(mainValue).data("eachActivityVO");
            var getVal = layoutCheckFun($(mainValue).find("> .cs-at-con-drop-area > .cs-at-layoutcontroweach"));
            x.conditionalActivityVO.playbackActivityVOs = getVal;
        }
        else if ($(mainValue).hasClass("cs-at-con-elseif")) {
            x = $(mainValue).data("eachActivityVO");
            var getVal = layoutCheckFun($(mainValue).find("> .cs-at-con-drop-area > .cs-at-layoutcontroweach"));
            x.conditionalActivityVO.playbackActivityVOs = getVal;
        } 
        else if ($(mainValue).hasClass("cs-at-con-endif")) {
            x = $(mainValue).data("eachActivityVO");
            var getVal = layoutCheckFun($(mainValue).find("> .cs-at-con-drop-area > .cs-at-layoutcontroweach"));
            x.conditionalActivityVO.playbackActivityVOs = getVal;
        }
        else if ($(mainValue).hasClass("cs-explicit-time_out")) {
            x = $(mainValue).data("eachActivityVO");
        } 
        else if ($(mainValue).hasClass("cs-fileActivity")) {
            x = $(mainValue).data("eachActivityVO");
        } 
        else if ($(mainValue).hasClass("cs-DataTable")) {
            x = $(mainValue).data("eachActivityVO");
            console.log('datax..',x)
            var getVal= layoutCheckFun($(mainValue).find(">.cs-drg-txt-box-par").children(".cs-at-layoutcontroweach"));
            x.dataTableActivityVo.playbackActivityVOs = getVal;
        } 
        else if ($(mainValue).hasClass("cs-addRowSty")) {
            x = $(mainValue).data("eachActivityVO");
        } 
        else if ($(mainValue).hasClass("cs-remRowSty")) {
            x = $(mainValue).data("eachActivityVO");
        } 
        else if ($(mainValue).hasClass("cs-uptRowSty")) {
            x = $(mainValue).data("eachActivityVO");
        } 
        else if ($(mainValue).hasClass("cs-filRowSty")) {
            x = $(mainValue).data("eachActivityVO");
        } 
        else if ($(mainValue).hasClass("cs-mergeRowSty")) {
            x = $(mainValue).data("eachActivityVO");
        } 
        else if ($(mainValue).hasClass("cs-eachRowSty")) {
            x = $(mainValue).data("eachActivityVO");
            console.log('datax..',x)
            var getVal= layoutCheckFun($(mainValue).find(".cs-at-layoutcontroweach"));
            x.EachRowActivityVo.playbackActivityVOs = getVal;
        } 
        else if ($(mainValue).hasClass("cs-excel-auto-act-child")) {
            x = $(mainValue).data("eachActivityVO");
            console.log('datax..',x)
            var getVal= layoutCheckFun($(mainValue).find(">.cs-drg-txt-box-par").children(".cs-at-layoutcontroweach"));
            x.excelAutomationActivityVo.playbackActivityVOs = getVal;
        } 
        else if ($(mainValue).hasClass("cs-excel-act-child")) {
            x = $(mainValue).data("eachActivityVO");
        }
        else if ($(mainValue).hasClass("cs-excel-manipulation-child")) {
            x = $(mainValue).data("eachActivityVO");
        }
        else if ($(mainValue).hasClass("cs-excel-advanced-act-child")) {
            x = $(mainValue).data("eachActivityVO");
        }
        else if ($(mainValue).hasClass("cs-excel-delete-child")) {
            x = $(mainValue).data("eachActivityVO");
        }
        else if ($(mainValue).hasClass("cs-excel-filter-act-child")) {
            x = $(mainValue).data("eachActivityVO");
        }
        else if ($(mainValue).hasClass("cs-excel-read-act-child")) {
            x = $(mainValue).data("eachActivityVO");
            console.log('datax..',x)
            var getVal= layoutCheckFun($(mainValue).find(".cs-at-layoutcontroweach"));
            x.excelReadActivityVo.playbackActivityVOs = getVal;
        }
        else if ($(mainValue).hasClass("cs-excel-chart-child")) {
            x = $(mainValue).data("eachActivityVO");
        } else if ($(mainValue).hasClass("cs-excel-insert-child")) {
            x = $(mainValue).data("eachActivityVO");
        }
        else if ($(mainValue).hasClass("cs-excel-save-child")) {
            x = $(mainValue).data("eachActivityVO");
        }
        else if ($(mainValue).hasClass("cs-excel-write-child")) {
            x = $(mainValue).data("eachActivityVO");
        }
        mainFun.playbackActivityVOs.push(x);
    });
    return mainFun;
}



function circularLevel(firstLevelBlog) {
    var x, mainFun;
    //var mainFun = $(firstLevelBlog).data("playBackOverall");
    //mainFun = $(firstLevelBlog).data("eachActivityVO");                
    $(firstLevelBlog).each(function(mainIndex, mainValue) {
        if ($(mainValue).hasClass("cs-layout-container")) {
            x = $(mainValue).data("eachActivityVO");
            var getVal = layoutCheckFun($(mainValue).find("> .cs-at-layouttogglecontentmain > .cs-at-layoutcontroweach"));
            x.layoutActivityVO.playbackActivityVOs = getVal;
        } else if ($(mainValue).hasClass("cs-iterationActivity")) {
            x = $(mainValue).data("eachActivityVO");
            var getVal = layoutCheckFun($(mainValue).find("> .cs-at-layoutcontroweach"));
            x.iterationActivityVO.playbackActivityVOs = getVal;
        }else if ($(mainValue).hasClass("cs-DataTable")) {
            x = $(mainValue).data("eachActivityVO");
            var getVal = layoutCheckFun($(mainValue).find(".cs-at-layoutcontroweach"));
            x.dataTableActivityVo.playbackActivityVOs = getVal;
        }
        else if ($(mainValue).hasClass("cs-eachRowSty")) {
            x = $(mainValue).data("eachActivityVO");
            var getVal = layoutCheckFun($(mainValue).find(".cs-at-layoutcontroweach"));
            x.EachRowActivityVo.playbackActivityVOs = getVal;
        } 
        else if ($(mainValue).hasClass("cs-conditionnActivity")) {
            x = $(mainValue).data("eachActivityVO");
            var getVal = layoutCheckFun($(mainValue).find("> .cs-at-con-if-else > .cs-at-layoutcontroweach"));
            x.conditionalActivitySet = getVal;
        } else if ($(mainValue).hasClass("cs-at-con-if")) {
            x = $(mainValue).data("eachActivityVO");
            var getVal = layoutCheckFun($(mainValue).find("> .cs-at-con-drop-area > .cs-at-layoutcontroweach"));
            x.conditionalActivityVO.playbackActivityVOs = getVal;
        } else if ($(mainValue).hasClass("cs-at-con-elseif")) {
            x = $(mainValue).data("eachActivityVO");
            var getVal = layoutCheckFun($(mainValue).find("> .cs-at-con-drop-area > .cs-at-layoutcontroweach"));
            x.conditionalActivityVO.playbackActivityVOs = getVal;
        } else if ($(mainValue).hasClass("cs-at-con-endif")) {
            x = $(mainValue).data("eachActivityVO");
            var getVal = layoutCheckFun($(mainValue).find("> .cs-at-con-drop-area > .cs-at-layoutcontroweach"));
            x.conditionalActivityVO.playbackActivityVOs = getVal;
        }
        else if ($(mainValue).hasClass("cs-excel-auto-act-child")) {
            x = $(mainValue).data("eachActivityVO");
            var getVal = layoutCheckFun($(mainValue).find(".cs-at-layoutcontroweach"));
            x.excelAutomationActivityVo.playbackActivityVOs = getVal;
        }
        else if ($(mainValue).hasClass("cs-excel-read-act-child")) {
            x = $(mainValue).data("eachActivityVO");
            var getVal = layoutCheckFun($(mainValue).find(".cs-at-layoutcontroweach"));
            x.excelReadActivityVo.playbackActivityVOs = getVal;
        }
        //mainFun.playbackActivityVOs.push(x);
    });
    return x;
}

function layoutCheckFun(mainValue) {
    var y = [];
    $(mainValue).each(function(rowEachIndex, rowEachValue) {
        if ($(rowEachValue).hasClass("cs-aparent")) {
            if ($(rowEachValue).hasClass("cs-layout-container")) {
                y.push(circularLevel(rowEachValue));
            } else if ($(rowEachValue).hasClass("cs-iterationActivity")) {
                y.push(circularLevel(rowEachValue));
            }else if ($(rowEachValue).hasClass("cs-DataTable")) {
                y.push(circularLevel(rowEachValue));
            }
            else if ($(rowEachValue).hasClass("cs-excel-auto-act-child")) {
                y.push(circularLevel(rowEachValue));
            }
            else if ($(rowEachValue).hasClass("cs-excel-read-act-child")) {
                y.push(circularLevel(rowEachValue));
            }
            else if ($(rowEachValue).hasClass("cs-eachRowSty")) {
                y.push(circularLevel(rowEachValue));
            }
            else if ($(rowEachValue).hasClass("cs-conditionnActivity")) {
                console.log(rowEachValue);
                y.push(circularLevel(rowEachValue));
            } else if ($(rowEachValue).hasClass("cs-at-con-if")) {
                y.push(circularLevel(rowEachValue));
            } else if ($(rowEachValue).hasClass("cs-at-con-elseif")) {
                y.push(circularLevel(rowEachValue));
            } else if ($(rowEachValue).hasClass("cs-at-con-endif")) {
                y.push(circularLevel(rowEachValue));
            }
        } 
        else if ($(rowEachValue).hasClass("cs-openurlActivity")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        } 
        else if ($(rowEachValue).hasClass("cs-each-element")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-image-element")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }  
        else if ($(rowEachValue).hasClass("cs-verificationActivity")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        } 
        else if ($(rowEachValue).hasClass("cs-assertionActivity")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        } 
        else if ($(rowEachValue).hasClass("cs-assignmentActivity")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        } 
        else if ($(rowEachValue).hasClass("cs-playback-drop")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-screenshotActivity")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-loginActivity")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-logoutActivity")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-LaunchBrowser")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-CloseBrowser")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-ShortcutActivity")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-explicit-time_out")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-fileActivity")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-DataTable")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }else if ($(rowEachValue).hasClass("cs-excel-auto-act-child")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-excel-act-child")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-excel-manipulation-child")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-excel-advanced-act-child")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-excel-delete-child")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-excel-filter-act-child")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-excel-read-act-child")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-excel-chart-child")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-excel-insert-child")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-excel-save-child")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-excel-write-child")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-addRowSty")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-remRowSty")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-filRowSty")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-uptRowSty")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-mergeRowSty")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
        else if ($(rowEachValue).hasClass("cs-eachRowSty")) {
            y.push($(rowEachValue).data("eachActivityVO"));
        }
    });
    return y;
}

function mainBuildHtml(dataValue) {
    var x;
    if (dataValue.conditionalActivitySet == undefined) {
        if (dataValue.activityType == "Layout") {
            x = buildLayout(dataValue);
        } else if (dataValue.activityType == "OpenURL") {
            x = buildOpenURL(dataValue);
        }
        else if (dataValue.activityType == "Element") {
            x = buildElement(dataValue);
        } 
        else if (dataValue.activityType == "Image") {
            x = buildImage(dataValue);
        } 
        else if (dataValue.activityType == "Iteration") {
            x = buildIteration(dataValue);
        }  else if (dataValue.activityType == "DataTableActivity") {
            x = buildDataTableAct(dataValue);
        }
        else if (dataValue.activityType == "ExcelAutomationAct") {
            x = buildExcelAutomationAct(dataValue);
        }
        else if (dataValue.activityType == "csExcelAct") {
            x = buildExcelSubAct(dataValue);
        }
        else if (dataValue.activityType == "csManupulationAct") {
            x = buildExcelManupulationAct(dataValue);
        }else if (dataValue.activityType == "csAdvancedAct") {
            x = buildExcelAdvancedAct(dataValue);
        }else if (dataValue.activityType == "csDeleteAct") {
            x = buildExcelDeleteAct(dataValue);
        }
        else if (dataValue.activityType == "csFilterAct") {
            x = buildExcelFilterAct(dataValue);
        }
        else if (dataValue.activityType == "csReadAct") {
            x = buildExcelReadAct(dataValue);
        }
        else if (dataValue.activityType == "csChartAct") {
            x = buildExcelChartAct(dataValue);
        }
        else if (dataValue.activityType == "csInsertAct") {
            x = buildExcelInsertAct(dataValue);
        }
        else if (dataValue.activityType == "csSaveAct") {
            x = buildExcelSaveAct(dataValue);
        }
        else if (dataValue.activityType == "csWriteAct") {
            x = buildExcelWriteAct(dataValue);
        }
         else if (dataValue.activityType == "Assignment") {
            x = buildAssignment(dataValue);
        } else if (dataValue.activityType == "Verification") {
            x = buildVerification(dataValue);
        } else if (dataValue.activityType == "Assertion") {
            x = buildAssertion(dataValue);
        } else if (dataValue.activityType == "Entail") {
            x = buildEntail(dataValue);
        } else if (dataValue.activityType == "Condition") {
           
            if (dataValue.conditionalActivityVO.clauseType == "If") {
                    x = buildIf(dataValue); 
            } else if ((dataValue.conditionalActivityVO.clauseType == "ElseIf")) {
                    x = buildElseIf(dataValue);
            } else if ((dataValue.conditionalActivityVO.clauseType == "Else")) {
                    x = buildElse(dataValue);
            }
            console.log(dataValue.conditionalActivityVO.condition)
        }else if(dataValue.activityType == "ScreenShot"){
            x = buildScreenshot(dataValue);
        }else if(dataValue.activityType == "Login"){
            x = buildLogin(dataValue);
        }
        else if(dataValue.activityType == "csFileAct"){
            x = buildFileAct(dataValue);
        }
        else if(dataValue.activityType == "csAddRow"){
            x = buildAddRow(dataValue);
        }
        else if(dataValue.activityType == "csRemRow"){
            x = buildRemRow(dataValue);
        }
        else if(dataValue.activityType == "csFilRow"){
            x = buildFilRow(dataValue);
        }
        else if(dataValue.activityType == "csMergeRow"){
            x = buildMerge(dataValue);
        }
        else if(dataValue.activityType == "csEachRow"){
            x = buildEachRow(dataValue);
        }
        else if(dataValue.activityType == "csUptRow"){
            x = buildUptRow(dataValue);
        }else if(dataValue.activityType == "Logout"){
            x = buildLogout(dataValue);
        }
        else if(dataValue.activityType == "Launchbrowser"){
            x = buildLaunchBrowser(dataValue);
        }
        else if(dataValue.activityType == "Closebrowser"){
            x = buildCloseBrowser(dataValue);
        }
        else if(dataValue.activityType == "Hotkey"){
            x = buildShortcutActivity(dataValue);
        }
        else if (dataValue.activityType == "explcit-wait-time") {
            console.log(dataValue.activityType);
            x = buildExplicit(dataValue);
        }

    } else {
        x = buildConditional(dataValue);
    }
    /**/
    return x;
}

function buildElement(dataValue) {
    let elementName = dataValue.elementActivityVO.layoutElementName;
    let elemType = dataValue.elementActivityVO.layoutElementsVO.elementType;
    let elemTypeSmall = elemType.toLowerCase().replace(/\s/g, '');
    let getMandatory = dataValue.elementActivityVO.layoutElementsVO.isMandatory;
    let actionValueType = dataValue.elementActivityVO.actionValueType;
    let actionValue = dataValue.elementActivityVO.actionValue;
    let xValue = dataValue.elementActivityVO.dropXOffset;
    let yValue = dataValue.elementActivityVO.dropYOffset;
    let secValue = dataValue.elementActivityVO.timeoutSec;
    let splicedActionVal = actionValueType.substr(0, 3);
    let getDyna = dataValue.elementActivityVO.isDynamic;
    let ConHide = "cs-hide";
    let AttHide = "cs-hide";
    let AutHide = "cs-hide";
    let VarHide = "cs-hide";
    let EleHide = "cs-hide";
    let ExpHide = "cs-hide";
    let PixHide = "cs-hide";
    let IndHide = "cs-hide";
    let secHide = " cs-hide";

    let ConVal = "";
    let AttVal = "";
    let AutVal = "";
    let VarVal = "";
    let EleVal = "";
    let ExpVal = "";
    let IndVal = "";
    let dynaEditHtml="";
    if(getDyna == "Y") {
        dynaEditHtml = '<a class="cs-at-layouteachelementmainactions cs-edit-element cs-inline cs-cur cs-hpad cs-tooltip-top" title="Edit">' +
        '<i class="icon-cs-edit cs-ts-16"></i>' +
        '</a>';
    }
    if (secValue != "") {
        secHide = "";
    }
    if (splicedActionVal == "Con") {
        ConHide = "";
        ConVal = actionValue;
    }
    else if (splicedActionVal == "Att") {
        AttHide = "";
        AttVal = actionValue;
    }
    else if (splicedActionVal == "Aut") {
        AutHide = "";
        AutVal = actionValue;
    }
    else if (splicedActionVal == "Var") {
        VarHide = "";
        VarVal = actionValue;
    }
    else if (splicedActionVal == "Ele") {
        EleHide = "";
        EleVal = actionValue;
    }
    else if (splicedActionVal == "Exp") {
        ExpHide = "";
        ExpVal = actionValue;
    }
    else if (splicedActionVal == "Ind") {
        IndHide = "";
        IndVal = actionValue;
    }
    else if (splicedActionVal == "Pix") {
        PixHide = "";
    }
    var mandClass = "";
    if(getMandatory == "Y") {
        mandClass = " cs-ly-mandatory";
    }
    var setData = JSON.stringify(dataValue);
    var elemAction;
    var copyElemHover = "";
    var eleValBlockHide = "";
    
    if(dataValue.elementActivityVO.elementAction==null || dataValue.elementActivityVO.elementAction==""){
    	elemAction='Select action';
        eleValBlockHide = "cs-hide";
    }else{
    	 elemAction = dataValue.elementActivityVO.elementAction;
         copyElemHover = "cs-copy-high-hover"; 
         if(elemAction == "Click" || elemAction == "Select All" || elemAction == "Deselect All" || elemAction == "Mouse Over & Click" || elemAction == "Deselect All") {
            eleValBlockHide = "cs-hide";
         }
         else {
            eleValBlockHide = "";
         }
    }
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    var elementHtml = '<div class="cs-at-layoutcontroweach clearfix cs-each-element'+mandClass+' cs-pr '+copyElemHover+'" data-eletype="' + elemTypeSmall + '" setData=' + setData + '>' +
        '<div class="cs-pull-left">' +
            '<div class="cs-copy-elemtype cs-tooltip-right" title="Copy Element Name">' +
                '<div class="cs-at-elemntTypeicon sprite cs-cf-' + elemTypeSmall + ' cs-inline"></div>' +
                '<div class="cs-hide cs-copy-et"><i class="icon-cs-duplicate"></i></div>' +
            '</div>' +
        '<div class="cs-inline cs-vt-align cs-at-elementname cs-hpad cs-lsmar  cs-tooltip-top" title="'+ elementName +'">' + elementName + '</div>' +
        '<div class="cs-inline cs-cur cs-vt-align cs-circle cs-line cs-ts-12 cs-hpad cs-at-eleacttyp-clk" data-cs-dropdown="#cs-at-elementactiontype">' +
        '<span class="cs-inline cs-ts-11 cs-unamepwd-type">'+ elemAction +'</span>' +
        '<span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span>' +
        '</div>' +
        '</div>' +
        '<div class="cs-at-ele-val-block cs-pull-left '+eleValBlockHide+'">' +
        '<div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist">' +
        '<span class="cs-label cs-ts-10 cs-label-warning">'+splicedActionVal+'</span>' +
        '<span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span>' +
        '</div>' +
        '<div class="cs-at-ele-inp-typ cs-inline">' +
        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput '+ConHide+'" data-contentValue="Con">' +
        '<input type="text" name="constantValue" value="'+ConVal+'" placeholder="Enter The Constant">' +
        '</div>' +
        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput '+AttHide+'" data-contentValue="Att">' +
        '<input type="text" name="AttributeValue" value="'+AttVal+'" placeholder="Enter The Attribute">' +
        '</div>' +
        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput '+AutHide+'" data-contentValue="Aut">' +
        '<input type="number" name="AutonumberingValue" value="'+AutVal+'" placeholder="Enter The Number">' +
        '</div>' +
        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click '+VarHide+'" data-contentValue="Var"  data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">' +
        '<input type="text" name="variableValue" value="'+VarVal+'" placeholder="Select The Variable" disabled>' +
        '</div>' +
        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click '+EleHide+'" data-contentValue="Ele"  data-cs-dropdown="#cs-at-leftexp" data-dd-type="ele">' +
        '<input type="text" name="ElementValue" value="'+EleVal+'" placeholder="Select The Element" disabled>' +
        '</div>' +
        '<div class="cs-vt-align cs-ts-12 cs-hspad cs-at-contentEntryinput '+ExpHide+'" data-contentValue="Exp">' +
        '<span class="cs-inline">' +
        '<input type="text" name="expressionValue" class="cs-inline" value="'+ExpVal+'" placeholder="Enter Expression Loader Template Dataset Fusion Map"/>' +
        '</span>' +
        '<a class="cs-inline cs-cur cs-hpad">{ }</a>' +
		'<span class="cs-exprbuilder cs-pr cs-cur" title="Edit Expression"><i class="icon-cs-expression-edit"></i></span>' +
        '</div>' +
        '<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput '+PixHide+'" data-contentValue="Pix">' +
        '<label>X</label>' +
        '<input type="number" class="cs-xposition" value="'+xValue+'" name="xValue">' +
        '<label>Y</label>' +
        '<input type="number" class="cs-yposition" value="'+yValue+'" name="yValue">' +
        '</div>' +
		'<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput '+IndHide+'" data-contentValue="Ind">' +
		'<input type="number" name="index" value="'+IndVal+'" placeholder="Ender the index">' +
		'</div>' +
        '</div>' +
		'</div>' +
		 '<div class="cs-pull-left cs-elem-timeout cs-lmar'+secHide+'">' +
        '<div class="cs-inline cs-rmar"><i class="icon icon-cs-clock-o cs-orangec cs-valignm cs-ts-16"></i></div>' +
        '<span class="cs-elem-timeout-sec cs-inline cs-pr">' +
        '<input type="number" placeholder="sec" value="'+secValue+'">' +
        '<span class="cs-sec-text cs-pa'+secHide+'">s</span>' +
        '</span>' +
        '</div>' +
        '<a class="cs-at-layouteachelementmainactions cs-copy-element cs-inline cs-cur cs-hpad" title="Copy Element"><i class="icon-cs-files-o cs-ts-16"></i></a>' +
        '<a class="cs-at-layouteachelementmainactions cs-highlight-element cs-inline cs-cur cs-hpad cs-tooltip-top" title="Highlight">' +
        '<i class="icon-cs-data-enrichment cs-ts-16"></i>' +
        '</a>' +
        '<a class="cs-at-layouteachelementmainactions cs-reset-element cs-inline cs-cur cs-hpad cs-tooltip-top" title="Reset">' +
        '<i class="icon-cs-reset cs-ts-16"></i>' +
        '</a>' +
        dynaEditHtml +
        '</div>';
    return elementHtml;
    //$(".cs-pb-create-board")
}
function buildImage(dataValue){
    // elementActivityVO.layoutElementsVO.elementName
    // var elementName = dataValue.elementActivityVO.layoutElementName;
    let imgurl = dataValue.elementActivityVO.layoutElementsVO.elementName;
    let elemType = dataValue.elementActivityVO.layoutElementsVO.elementType;
    let elemTypeSmall = elemType.toLowerCase().replace(/\s/g, '');
    let getMandatory = dataValue.elementActivityVO.layoutElementsVO.isMandatory;
    let actionValueType = dataValue.elementActivityVO.actionValueType;
    let actionValue = dataValue.elementActivityVO.actionValue;
    let xValue = dataValue.elementActivityVO.dropXOffset;
    let yValue = dataValue.elementActivityVO.dropYOffset;
    let secValue = dataValue.elementActivityVO.timeoutSec;
    let splicedActionVal = actionValueType.substr(0, 3);
    let getDyna = dataValue.elementActivityVO.isDynamic;
    let dropimgurl = dataValue.elementActivityVO.dropImageId;
    let ConHide = "cs-hide";
    let AttHide = "cs-hide";
    let AutHide = "cs-hide";
    let VarHide = "cs-hide";
    let EleHide = "cs-hide";
    let ExpHide = "cs-hide";
    let PixHide = "cs-hide";
    let IndHide = "cs-hide";
    let secHide = "cs-hide";
    let ImgHide = "cs-hide";

    let ConVal = "";
    let AttVal = "";
    let AutVal = "";
    let VarVal = "";
    let EleVal = "";
    let ExpVal = "";
    let IndVal = "";
    let dynaEditHtml="";
    if(getDyna == "Y") {
        dynaEditHtml = '<a class="cs-at-layouteachelementmainactions cs-edit-element cs-inline cs-cur cs-hpad cs-tooltip-top" title="Edit">' +
        '<i class="icon-cs-edit cs-ts-16"></i>' +
        '</a>';
    }
    if (secValue != "") {
        secHide = "";
    }
    if (splicedActionVal == "Con") {
        ConHide = "";
        ConVal = actionValue;
    }
    else if (splicedActionVal == "Att") {
        AttHide = "";
        AttVal = actionValue;
    }
    else if (splicedActionVal == "Aut") {
        AutHide = "";
        AutVal = actionValue;
    }
    else if (splicedActionVal == "Var") {
        VarHide = "";
        VarVal = actionValue;
    }
    else if (splicedActionVal == "Ele") {
        EleHide = "";
        EleVal = actionValue;
    }
    else if (splicedActionVal == "Exp") {
        ExpHide = "";
        ExpVal = actionValue;
    }
    else if (splicedActionVal == "Ind") {
        IndHide = "";
        IndVal = actionValue;
    }
    else if (splicedActionVal == "Pix") {
        PixHide = "";
    }else if (splicedActionVal == "Ima") {
        ImgHide = "";
    }
    var mandClass = "";
    if(getMandatory == "Y") {
        mandClass = " cs-ly-mandatory";
    }
    var setData = JSON.stringify(dataValue);
    var elemAction;
    var copyElemHover = "";
    var eleValBlockHide = "";
    
    if(dataValue.elementActivityVO.elementAction==null || dataValue.elementActivityVO.elementAction==""){
    	elemAction='Select action';
        eleValBlockHide = "cs-hide";
    }else{
    	 elemAction = dataValue.elementActivityVO.elementAction;
         copyElemHover = "cs-copy-high-hover"; 
         if(elemAction == "Click" || elemAction == "Select All" || elemAction == "Deselect All" || elemAction == "Mouse Over & Click" || elemAction == "Deselect All") {
            eleValBlockHide = "cs-hide";
         }
         else {
            eleValBlockHide = "";
         }
    }
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
        var imgdeploy= `
    
    <div class="cs-at-layoutcontroweach cs-ab-complete-img-block clearfix cs-image-element ${ mandClass } cs-copy-high-hoverimgparent cs-pr" data-eletype="projectimage" setData=${setData}>
            <div class="cs-pull-left">
            <div class="cs-at-elemntTypeicon sprite cs-ab-list-leftimage cs-inline cs-inline"> <i class="icon-cs-file-image-o"></i> </div> 
            <div class="cs-ab-dragimg cs-inline cs-pad-sm cs-4x-radius cs-cur" id="imgpopup"><img src="${imgurl}" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt=""></div>
            <div class="cs-inline cs-cur cs-circle cs-line cs-ts-12 cs-hpad cs-bg-white cs-at-eleacttyp-clk" data-cs-dropdown="#cs-at-elementactiontype">
            <span class="cs-inline cs-ts-11 cs-unamepwd-type">${elemAction}</span>
            <span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span> 
            </div> 
            </div> 
            <div class="cs-at-ele-val-block cs-pull-left ${eleValBlockHide}"> 
            <div class="cs-pull-left cs-cur cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"> 
            <span class="cs-label cs-ts-10 cs-label-warning">${splicedActionVal}</span> 
            <span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span> 
            </div> 
            <div class="cs-at-ele-inp-typ cs-inline"> 
            <div class="cs-cur  cs-ts-12 cs-hpad cs-at-contentEntryinput ${ImgHide}" data-contentValue="Imgs">
                <div class="cs-pb-img-drp cs-imgdropped">
                    <img src="${dropimgurl}"/>
                </div>
            </div>
            <div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput ${ConHide}" data-contentValue="Con"> 
            <input type="text" name="constantValue" value="${ConVal}" placeholder="Enter The Constant"> 
            </div> 
            <div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput ${AttHide}" data-contentValue="Att"> 
            <input type="text" name="AttributeValue" value="${AttVal}" placeholder="Enter The Attribute"> 
            </div> 
            <div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput ${AutHide}" data-contentValue="Aut"> 
            <input type="number" name="AutonumberingValue" value="${AutVal}" placeholder="Enter The Number"> 
            </div> 
            <div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click ${VarHide}" data-contentValue="Va"r  data-cs-dropdown="#cs-at-leftexp" data-dd-type="var"> 
            <input type="text" name="variableValue value=${VarVal}" placeholder="Select The Variable disabled"> 
            </div> 
            <div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click ${EleHide}" data-contentValue="Ele"  data-cs-dropdown="#cs-at-leftexp" data-dd-type="ele"> 
            <input type="text" name="ElementValue "value="${EleVal}" placeholder="Select The Element disabled"> 
            </div> 
            <div class="cs-vt-align cs-ts-12 cs-hspad cs-at-contentEntryinput ${ExpHide}" data-contentValue="Exp"> 
            <span class=cs-inline> 
            <input type="text" name="expressionValue" class="cs-inline" value="${ExpVal}" placeholder="Enter Expression Loader Template Dataset Fusion Map"/> 
            </span> 
            <a class="cs-inline cs-cur cs-hpad">{ }</a> 
            <span class="cs-exprbuilder cs-pr cs-cur" title="Edit Expression"><i class="icon-cs-expression-edit"></i></span> 
            </div> 
            <div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput ${PixHide}" data-contentValue="Pix"> 
            <label>X</label> 
            <input type="number" class="cs-xposition value=${xValue}" name="xValue"> 
            <label>Y</label> 
            <input type="number" class="cs-yposition" value="${yValue}" name="yValue"> 
            </div> 
            <div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput ${IndHide}" data-contentValue="Ind"> 
            <input type="number" name="index" value="${IndVal}" placeholder="Enter the index"> 
            </div> 
            </div> 
            </div> 
             <div class="cs-pull-left cs-elem-timeout cs-lmar ${secHide}"> 
            <div class="cs-inline cs-rmar"><i class="icon icon-cs-clock-o cs-orangec cs-valignm cs-ts-16"></i></div> 
            <span class="cs-elem-timeout-sec cs-inline cs-pr"> 
            <input type="number" placeholder="sec" value= "${secValue}"> 
            <span class="cs-sec-text cs-pa" ${secHide}>s</span> 
            </span> 
            </div> 
            <div class="cs-copy-high-hoverimg cs-inline cs-tsmar">

            <a class="cs-at-layouteachelementmainactions cs-copy-element cs-inline cs-cur cs-hpad" title="Copy Element">
                <i class="icon-cs-files-o cs-ts-16"></i>
            </a> 
            <a class="cs-at-layouteachelementmainactions cs-highlight-element cs-inline cs-cur cs-hpad cs-tooltip-top" title="Highlight"> 
                <i class=icon-cs-data-enrichment cs-ts-16></i> 
            </a> 
            <a class="cs-at-layouteachelementmainactions cs-ab-resetclk cs-inline cs-cur cs-hpad cs-tooltip-top" title="Reset"> 
                <i class="icon-cs-reset cs-ts-16"></i> 
            </a> 
    </div>
            ${dynaEditHtml}
            </div>`
    
    
    
        return imgdeploy;

}


function buildAssignment(dataValue) {
    //var elementName = dataValue.assignmentActivityVO.layoutElementName;
    var setData = JSON.stringify(dataValue);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    var assertionHtml = 
    `<div class="clearfix cs-at-layoutcontroweach cs-activityBlock cs-assignmentActivity cs-pr cs-pb-blk" setData='${setData}'>
    <div class="cs-pa cs-activity-title cs-ts-10">Assignment Activity</div>
    <div class="cs-activity-icon cs-pa">
        <i class="icon-cs-assignment-activity"></i>
    </div>
    <span class="cs-remove-activity cs-pa cs-cur">
        <i class="icon-cs-delete"></i>
    </span>
    <div class="clearfix cs-at-dd-exprs">
        <div class="cs-inline cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-asgnm-exp" data-cs-dropdown="#cs-at-condexpresselectndroplist">
            <span class="cs-label cs-ts-10 cs-label-warning">Ele</span>
            <span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span>
        </div>
        <div class="cs-cell-8">
            <div class="cs-ex-ele-main">
                <div class="cs-input cs-var-el-dd-click cs-asgn-elem cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="ele">
                    <label>Element Name</label>
                    <input type="text" placeholder="Select Element" disabled />
                </div>
                <div class="cs-input cs-asgnm-cus-exp">
                    <label>Expression</label>
                    <input type="text" placeholder="Enter Expression" />
                </div>
                <div class="cs-input cs-var-el-dd-click cs-asgn-var cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">
                    <label>Variable Name</label>
                    <input type="text" placeholder="Select Variable" disabled />
                </div>
                <div class="cs-input cs-asgn-image cs-rad-none cs-ab-imgclick-append" data-dd-type="img" data-cs-dropdown="#cs-ab-imgsdropdown">
                    <div class="cs-ab-insideimg2 cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput">
                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                    </div>
                </div>
            </div>
        </div>
        <div class="cs-pad cs-pull-left cs-ts-18">
            <i class="icon-cs-angle-double-right"></i>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-var-el-dd-click cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">
                <label>Variable Name</label>
                <input type="text" placeholder="Select Variable" disabled />
            </div>
        </div>
        <div class="cs-pad cs-pull-left cs-ts-18 cs-pramtr-trg-blk-tog cs-cur">
            <i class="icon-cs-new"></i>
        </div>
    </div>
    <div class="clearfix cs-prameter-trig-block cs-pad cs-rmar cs-bmar cs-bg-white cs-hide">
        <div class="cs-cell-12">
            <div class="cs-input cs-layoutname cs-layout-name-cus">
                <div class="clearfix">
                    <label for="layoutname">Variable Name</label>
                    <input id="layoutname" type="text" name="layoutname" placeholder="Enter text here">
                </div>
            </div>
            <div class="clearfix">
                <span class="cs-graylightc cs-rsmar">Prameter</span>
                <label class="switch-toggle cs-lsmar">
                    <input type="checkbox" class="cs-prameter-enable">
                    <div class="slider-toggle round-toggle"></div>
                </label>
            </div>
        </div>
        <div class="cs-cell-12">
            <div class="cs-input">
                <label>Data Type</label>
                <select>
                    <option>Field Type1</option>
                    <option>Field Type2</option>
                    <option>Field Type3</option>
                    <option>Field Type4</option>
                </select>
            </div>
            <div class="cs-input cs-hide cs-ps-pram-val">
                <label>Parameter Type</label>
                <select>
                    <option>Field Type1</option>
                    <option>Field Type2</option>
                    <option>Field Type3</option>
                    <option>Field Type4</option>
                </select>
            </div>
        </div>
        <div class="clearfix">
            <div class="cs-tr">
                <a href="#" class="cs-btn cs-btn-sm cs-btn-info cs-save-assign">Save</a>
            </div>
        </div>
    </div>
</div> 
`;
    return assertionHtml;
}

function buildVerification(dataValue) {
    //var elementName = dataValue.assignmentActivityVO.layoutElementName;
    var setData = JSON.stringify(dataValue);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    var verificationHtml = `
    <div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-verificationActivity cs-pr cs-pb-blk" setData=${setData}>
    <div class="cs-pa cs-activity-title cs-ts-10">Verification Activity</div>
    <div class="cs-activity-icon cs-pa">
        <i class="icon-cs-verification-activity"></i>
    </div>
    <span class="cs-remove-activity cs-pa cs-cur">
        <i class="icon-cs-delete"></i>
    </span>
    <div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">
        <div class="clearfix cs-tr">
            <span class="cs-rmar cs-snapshot cs-pr cs-cur"><i class="icon-cs-camera"></i></span>
            <span class="cs-rmar cs-status cs-pr cs-cur"><i class="fa fa-line-chart"></i></span>
            <span class="cs-cur cs-ts-14 cs-textb">{ }</i></span>
            <div class="clearfix cs-inline">
                <span class="cs-graylightc cs-rsmar">Custom Expression</span>
                <label class="switch-toggle cs-lsmar">
                    <input type="checkbox" class="cs-cus-exp-tog">
                    <div class="slider-toggle round-toggle"></div>
                </label>
            </div>
        </div>
        <div class="cs-textarea cs-pr cs-at-dd-expr-txtar">
            <div class="clearfix cs-tmar">
                <span class="cs-rmar cs-exprbuilder cs-pr cs-cur cs-pull-right cs-tsmar" title="Edit Expression">
                    <i class="icon-cs-expression-edit"></i></span>
            </div>
            <label for="expression">Expression</label>
            <textarea placeholder="Enter Expression..."></textarea>
        </div>
        <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
            <div class="cs-cell-8">
                <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                    <label>Left Expression</label><span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                    <input type="text"  placeholder="Select Expression"/ disabled class="cs-ab-textinput cs-pe-none" >
                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                    </div>
                </div>
            </div>
            <div class="cs-cell-8">
                <div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                    <label>Operators</label>
                    <input type="text" class="cs-pe-none cs-cur" placeholder="Select Operators"/ disabled>
                </div>
            </div>
            <div class="cs-cell-8">
                <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                    <label>Right Expression</label>
                    <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                    <input type="text" placeholder="Select Expression"/ disabled class="cs-ab-textinput cs-pe-none">
                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                    </div>
                </div>
            </div>
        </div>
        <div class="cs-textarea cs-pr cs-error-message">
            <label for="Message">Message</label>
            <textarea placeholder="Enter Error Message..."></textarea>
        </div>
    </div>
</div>
    `;
    return verificationHtml;
}

function buildAssertion(dataValue) {
    //var elementName = dataValue.assignmentActivityVO.layoutElementName;
    var setData = JSON.stringify(dataValue);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    var assertionHtml = `
    <div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-assertionActivity cs-pr cs-pb-blk" setData=${setData}>
    <div class="cs-pa cs-activity-title cs-ts-10">Assertion Activity</div>
    <div class="cs-activity-icon cs-pa">
        <i class="icon-cs-assertion-activity"></i>
    </div>
    <span class="cs-remove-activity cs-pa cs-cur">
        <i class="icon-cs-delete"></i>
    </span>


    <div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">
        <div class="clearfix cs-tr">
            <span class="cs-cur cs-ts-14 cs-textb">{ }</i></span>
            <div class="clearfix cs-inline">
                <span class="cs-graylightc cs-rsmar">Custom Expression</span>
                <label class="switch-toggle cs-lsmar">
                    <input type="checkbox" class="cs-cus-exp-tog">
                    <div class="slider-toggle round-toggle"></div>
                </label>
            </div>
        </div>
        <div class="cs-textarea cs-pr cs-at-dd-expr-txtar">
            <div class="clearfix cs-tmar">
                <span class="cs-rmar cs-exprbuilder cs-pr cs-cur cs-pull-right cs-tsmar" title="Edit Expression">
                    <i class="icon-cs-expression-edit"></i>
                </span>
            </div>
            <label for="expression">Expression</label>
            <textarea placeholder="Enter Expression..."></textarea>
        </div>
        <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
            <div class="cs-cell-8">
                <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                    <label>Left Expression</label>
                    <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                    <input type="text" placeholder="Select Expression" class=" cs-pe-none cs-cur cs-ab-textinput" / disabled>
                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                    </div>
                </div>
            </div>
            <div class="cs-cell-8">
                <div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                    <label>Operators</label>
                    <input type="text" class="cs-pe-none cs-cur" placeholder="Select Operators"/ disabled>
                </div>
            </div>
            <div class="cs-cell-8">
                <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                    <label>Right Expression</label><span
                        class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                    <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur "/ disabled>
                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                    </div>
                </div>
            </div>
        </div>
        <div class="cs-textarea cs-pr cs-error-message">
            <label for="Message">Message</label>
            <textarea placeholder="Enter Error Message..."></textarea>
        </div>
    </div>
</div> `;
    return assertionHtml;
}
/**/
function buildOpenURL(dataValue) {
    var myUrl = dataValue.openURLActivityVO.URL;
    var setData = JSON.stringify(dataValue);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    var openUrlHtml = 
    `<div class="clearfix cs-at-layoutcontroweach cs-activityBlock cs-openurlActivity cs-pr cs-pb-blk" setData=${setData}>
    <div class="cs-pa cs-activity-title cs-ts-10">Open Url</div>
    <div class="cs-activity-icon cs-pa">
        <i class="icon-cs-link"></i>
    </div>
    <span class="cs-remove-activity cs-pa cs-cur">
        <i class="icon-cs-delete"></i>
    </span>
    <div class="clearfix cs-pad cs-rmar cs-bmar">
        <div class="cs-inline">
            <div class="cs-inline cs-cur cs-vt-align cs-ts-12 cs-cdx-exp-click cs-openurl-dd-clk" data-cs-dropdown="#cs-at-condexpresselectndroplist">
                <span class="cs-label cs-ts-10 cs-label-warning">Con</span>
                <span class="cs-inline"><i class="icon-cs-caret-down cs-ts-8"></i></span>
            </div>
            <div class="cs-at-inp-typ cs-inline">
                <div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput" data-contentValue="Con">
                    <input type="text" name="constantValue" placeholder="Enter The Constant">
                </div>
                <div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Var" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">
                    <input type="text" name="VariableValue" class="cs-cur cs-pe-none" placeholder="Select The Variable" disabled>
                </div>
                <div class="cs-cur cs-ts-12 cs-hpad cs-at-contentEntryinput cs-ab-imgclick-append cs-var-el-dd-click cs-hide" data-contentValue="Imgs" data-cs-dropdown="#cs-ab-imgsdropdown">
                    <div class="cs-ab-insideimg2 cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput">
                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                    </div>
                </div>
            </div>
        </div>
    </div> 
    <div class="clearfix">
    <div class="cs-cell-12">
        <div class="cs-input">
            <label>Function</label>
            <input type="text" placeholder="Select Function" class="cs-ou-fun-inp">
            <a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a> 
        </div>
    </div>
    <div class="cs-cell-12">
        <div class="cs-input">
            <label>Responsbility</label>
            <input type="text" placeholder="Select Responsbility" class="cs-ou-res-inp">
            <a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a> 
        </div>
    </div>
    <div class="cs-cell-12">
        <div class="cs-input">
            <label>Application</label>
            <input type="text" placeholder="Select Application" class="cs-ou-app-inp">
            <a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a> 
        </div>
    </div>
    <div class="cs-cell-12">
        <div class="cs-input">
            <label>Security Group</label>
            <input type="text" placeholder="Security Group" class="cs-ou-sg-inp">
            <a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a> 
        </div>
    </div>
    <div class="cs-cell-12">
        <div class="cs-input">
            <label>Language</label>
            <input type="text" placeholder="Select Language" class="cs-ou-lang-inp">
            <a href="#" class="cs-lookup"><i class="icon-cs-search"></i></a> 
        </div>
    </div>
    <div class="cs-cell-12">
        <div class="cs-input">
            <label>Param</label>
            <input type="text" placeholder="Enter Param Value" class="cs-ou-param-inp">
        </div>
    </div>
</div>
</div>
    
    `
    //openUrlHtml = $(openUrlHtml).data("eachActivityVO",dataValue);
    return openUrlHtml;
}

function buildScreenshot(dataValue) {
	var filename = dataValue.screenShotActivityVo.fileName;
    var setData = JSON.stringify(dataValue);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    var ScreenShotHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-screenshotActivity cs-pr cs-pb-blk"setData=' + setData + '>' +
    '<div class="cs-pa cs-activity-title cs-ts-10">Screenshot</div>' +
    '<div class="cs-activity-icon cs-pa">' +
    '<i class="icon-cs-screenshot"></i>' +
    '</div>' +
	'<span class="cs-remove-activity cs-pa cs-cur">' +
	'<i class="icon-cs-delete"></i>' +
	'</span>'+
	'<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
	'<div class="clearfix">' +
		'<div class="cs-cell-4">' +
			'<label>File Name</label>' +
		'</div>' +
		'<div class="cs-cell-8">' +
			'<input type="text" class="cs-scshot-fname" value="'+filename+'"/>' +
		'</div>' +
	'</div>' +
	'</div>';
    '</div>';
	ScreenShotHtml += '</div>';
    return ScreenShotHtml;
}
function buildLogout(dataValue) {
    var logoutHtml = "";
    //var displayName = dataValue.layoutActivityVO.layoutName;
    var setData = JSON.stringify(dataValue);
   for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    var logoutHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-logoutActivity cs-pr cs-pb-blk" setData=' + setData + '>' +
    '<div class="cs-pa cs-activity-title cs-ts-10">Logout</div>' +
    '<div class="cs-activity-icon cs-pa">' +
    '<i class="icon-cs-logout"></i>' +
    '</div>' +
	'<span class="cs-remove-activity cs-pa cs-cur">' +
	'<i class="icon-cs-delete"></i>' +
	'</span>'+
	'<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
	'</div>';
    '</div>';
    logoutHtml += '</div>';
    return logoutHtml;
}
// Launch Browser Start
function buildLaunchBrowser(dataValue) {
    var launchbrowserHTML = "";
    //var displayName = dataValue.layoutActivityVO.layoutName;
    var setData = JSON.stringify(dataValue);
   for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    var launchbrowserHTML = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-LaunchBrowser cs-pr cs-pb-blk" setData=' + setData + '>' +
                            '<div class="cs-pa cs-activity-title cs-ts-10">Launch Browser</div>' +
                            '<div class="cs-activity-icon cs-pa">' +
                            '<i class="icon-cs-launch-browser"></i>' +
                            '</div>' +
                            '<span class="cs-remove-activity cs-pa cs-cur">' +
                            '<i class="icon-cs-delete"></i>' +
                            '</span>'+
                            '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
                            '</div>';
                            '</div>';
    launchbrowserHTML += '</div>';
    return launchbrowserHTML;
}

function buildCloseBrowser(dataValue) {
    var launchbrowserHTML = "";
    //var displayName = dataValue.layoutActivityVO.layoutName;
    var setData = JSON.stringify(dataValue);
   for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    var launchbrowserHTML = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-LaunchBrowser cs-pr cs-pb-blk" setData=' + setData + '>' +
                            '<div class="cs-pa cs-activity-title cs-ts-10">Launch Browser</div>' +
                            '<div class="cs-activity-icon cs-pa">' +
                            '<i class="icon-cs-launch-browser"></i>' +
                            '</div>' +
                            '<span class="cs-remove-activity cs-pa cs-cur">' +
                            '<i class="icon-cs-delete"></i>' +
                            '</span>'+
                            '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
                            '</div>';
                            '</div>';
    launchbrowserHTML += '</div>';
    return launchbrowserHTML;
}

function buildShortcutActivity(dataValue) {
    var shortcutActivityHTML = "";
    var shortcutKeyVal = dataValue.hotkeyActivityVo.hotkeyValue;
    var setData = JSON.stringify(dataValue);
   for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    var shortcutActivityHTML = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach dropAcrive cs-ShortcutActivity cs-pr cs-pb-blk" setData=' + setData + '>' +
                                    '<div class="cs-pa cs-activity-title cs-ts-10">Hotkey</div>' +
                                    '<div class="cs-activity-icon cs-pa">' +
                                        '<i class="icon-cs-short-cut"></i>' +
                                    '</div>' +
                                    '<span class="cs-remove-activity cs-pa cs-cur">' +
                                        '<i class="icon-cs-delete"></i>' +
                                    '</span>'+
                                    '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">' +
                                        '<div class="clearfix">' +
                                            '<input type="text" class="cs-shortcutkeyentry" placeholder="Enter Hotkey" value="'+shortcutKeyVal+'"/>' +
                                        '</div>' +
                                    '</div>'
                                '</div>';
    shortcutActivityHTML +=     '</div>';
    return shortcutActivityHTML;                                
}

function buildLogin(dataValue) {
    var setData = JSON.stringify(dataValue);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    var LoginHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-loginActivity cs-pr cs-pb-blk" setData=' + setData + '>' +
    '<div class="cs-pa cs-activity-title cs-ts-10">Login</div>' +
    '<div class="cs-activity-icon cs-pa">' +
    '<i class="icon-cs-logs-import"></i>' +
    '</div>' +
    '<span class="cs-remove-activity cs-pa cs-cur">' +
    '<i class="icon-cs-delete"></i>' +
    '</span>'+
    '<div class="clearfix cs-rmar cs-bmar">' +
    '<div class="clearfix">' +
    '<div class="cs-cell-8">' +
    '<div class="cs-input cs-login-inp cs-login-username">' +
    '<label>User Name</label>'+
    '<input type="text" placeholder="Username">' +
    '</div>' +
    '</div>' +
    '<div class="cs-cell-8">' +
    '<div class="cs-input cs-login-inp cs-login-password">' +
    '<label>Password</label>' +
    '<input type="password" placeholder="Password">' +
    '</div>' +
    '</div>' +
    '</div>' +
    '</div>' +
    '</div>';
	return LoginHtml;
}

function buildEntail(dataValue) {
    var entailName = dataValue.playbackName;
	var displayName = dataValue.entailPlaybackVO.leftEntailPlaybackName;
	//var displayName = $("#display-name-inpt").val();
    var setData = JSON.stringify(dataValue);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    var EntailHtml = '<div class="cs-at-layoutcontroweach cs-playback-drop cs-pad cs-pb-blk" setData=' + setData + '>' +
        '<div class="cs-at-droppedActivities">' +
        '<div class="cs-at-droppedActivitiesHeading cs-hpad cs-tspad cs-bspad cs-inline cs-line cs-pr">' +
        '<span class="cs-inline"><i class="icon-cs-caret-right cs-ts-12 cs-greenc"></i></span>' +
        '<span class="cs-at-droppedActivitiesName">'+entailName+'</span>' +
        '<span class="cs-at-droppedActivitiesActions cs-pull-right cs-rsmar">' +
        '<a class="cs-cur cs-hpad-sm cs-tooltip-top cs-expand-colapse-playback" title="Mapping">' +
        '<i class="icon-cs-sync cs-ts-14"></i>' +
        '</a>' +
        '<a class="cs-cur cs-hpad-sm cs-tooltip-top" title="Expand">' +
        '<i class="icon-cs-export cs-ts-14"></i>' +
        '</a>' +
        '</span>' +
        '<a class="cs-cur cs-tc cs-inline cs-at-droppedActivitiesDelete cs-line cs-circle cs-pa">' +
        '<i class="icon-cs-delete cs-ts-12 cs-whitec cs-vm-align"></i>' +
        '</a>' +
        '</div>' +
        '<div class="clearfix cs-at-droppedActivitiesContent cs-hide cs-vpad cs-line">' +
        '<a href="#" class="cs-drpd-playback-clos cs-cur">' +
        '<i class="icon-cs-reject-o cs-ts-10"></i>' +
        '</a>' +
        '<div class="cs-cell-12 cs-hmar cs-mapping-container">' +
        '<div class="cs-cell-12 cs-mapping-list-left cs-at-pb-map">' +
        '<div class="cs-at-playbackDisplayName cs-disable" data-cs-dropdown="#playbacklist-dd">'+displayName+'</div>' +
        '<div class="cs-at-topActions cs-tpad cs-bsmar cs-at-top-act-var-elem">' +
        '<a class="cs-cur cs-hpad-sm cs-ts-12 cs-circle active">Variable</a>' +
        '<a class="cs-cur cs-hpad-sm cs-ts-12 cs-circle cs-at-top-act-ele-clik">Element</a>' +
        '</div>' +
        '<div class="cs-at-varmappinglistmain">' +
							'<ul class="cs-vartabul cs-tmar">' +
								'<li><a href="#var-in">IN</a></li>' +
								'<li><a href="#var-out">OUT</a></li>' +
								'<li><a href="#var-inout">INOUT</a></li>' +
							'</ul>' +
							'<div id="var-in" class="cs-at-pb-map">' +
								'<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
								'<input type="text" name="Sprint Name" placeholder="Search in Variable">' +
								'<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
								'</div>' +
								'<div class="cs-at-mappinglistmain">' +
								'<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-left-list"></ul>' +
								'</div>' +
							'</div>' +
							'<div id="var-out" class="cs-at-pb-map">' +
								'<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
								'<input type="text" name="Sprint Name" placeholder="Search out Variable">' +
								'<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
								'</div>' +
								'<div class="cs-at-mappinglistmain">' +
								'<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-left-list"></ul>' +
								'</div>' +
							'</div>' +
							'<div id="var-inout" class="cs-at-pb-map">' +
								'<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
								'<input type="text" name="Sprint Name" placeholder="Search inout Variable">' +
								'<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
								'</div>' +
								'<div class="cs-at-mappinglistmain">' +
								'<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-left-list"></ul>' +
								'</div>' +
							'</div>' +
                        '</div>' +
        '<div class="cs-at-elemappinglistmain">' +
        '<div class="cs-at-eachsearchpart cs-pr cs-tsmar">' +
        '<input type="text" name="Sprint Name" placeholder="Search Element">' +
        '<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
        '</div>' +
        '<div class="cs-at-mappinglistmain">' +
        '<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-ele-list"></ul>' +
        '</div>' +
        '</div>' +
        '</div>' +
        '<div class="cs-cell-12 cs-mapping-list-right cs-at-pb-map">' +
        '<div class="cs-at-playbackName">'+entailName+'</div>' +
        '<div class="cs-at-topActions cs-tpad">' +
        '<a class="cs-cur cs-hpad-sm cs-ts-12 cs-circle">In Parameter</a>' +
        '</div>' +
        '<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
        '<input type="text" name="Sprint Name" placeholder="Search Element">' +
        '<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
        '</div>' +
        '<div class="cs-at-mappinglistmain">' +
        '<ul class="clearfix cs-scroll-2 cs-pr cs-plbk-right-list"></ul>' +
        '</div>' +
        '</div>' +
        '</div>' +
        '<div class="cs-cell-2 cs-hmar cs-tc cs-at-mappedactionmain cs-pr">' +
        '<a class="cs-tc cs-cur cs-pa cs-circle cs-at-mappedmovingicn">' +
        '<i class="icon-cs-angle-double-right cs-ts-12"></i>' +
        '</a>' +
        '</div>' +
        '<div class="cs-cell-10 cs-hmar cs-pull-right cs-at-mappedcontmain  cs-at-pb-map">' +
        '<div class="cs-at-playbackName">'+entailName+'</div>' +
        '<div class="cs-at-topActions cs-tpad">' +
        '<a class="cs-cur cs-hpad-sm cs-ts-12 cs-circle">Mapped In Parameter</a>' +
        '</div>' +
        '<div class="cs-at-eachsearchpart cs-pr cs-tmar">' +
        '<input type="text" name="Sprint Name" placeholder="Search Mapped In Parameter">' +
        '<a href="#" class="cs-pa cs-pa-r cs-pa-t"><i class="icon-cs-search cs-ts-12"></i></a>' +
        '</div>' +
        '<div class="clearfix cs-at-mappedListmain">' +
        '<div class="clearfix cs-at-mappedpart">' +
        '<ul class="clearfix cs-scroll cs-pr cs-rpad"></ul>' +
        '</div>' +
        '</div>' +
        '</div>' +
        '</div>' +
        '</div>' +
        '</div>';
    $(".cs-scroll-2,.cs-scroll").perfectScrollbar();
    return EntailHtml;
}


function buildLayout(dataValue) {
    var layoutHtml = "";
    if ($("body").attr("basicAssignments") == "true") {
        var displayName = dataValue.layoutActivityVO.layoutName;
        var setData = JSON.stringify(dataValue);
        setData = JSON.parse(setData);
        setData.layoutActivityVO.playbackActivityVOs = [];
        setData = JSON.stringify(setData);
        for (i = 0; i < setData.length; i++) {
            setData = setData.replace(" ", "12344321");
            setData = setData.replace(">", "43211234");
        }
        layoutHtml += '<div class="clearfix cs-at-layouteachmain cs-layout-container cs-at-layoutcontroweach cs-aparent cs-pr cs-pb-blk cs-pad" setData=' + setData + '>' +
                  '<h3 class="clearfix cs-nomar">' +
                  '<span class="cs-remove-activity cs-pa cs-cur">' +
                  '<i class="icon-cs-delete"></i>' +
                  '</span>' +
                  '<span class="cs-at-layouttitle cs-valignm cs-inline cs-ts-14 cs-tw-600">' + displayName + '</span>' +
                  '<span class="cs-valignm cs-inline cs-ts-14 cs-tw-600 cs-hpad cs-rline">' +
                  '<span class="cs-valignm cs-inline"><i class="icon-cs-element-count cs-ts-18"></i></span>' +
                  '<span class="cs-badge cs-badge-info cs-lmar cs-valignm cs-inline">40</span>' +
                  '</span>' +
                  '</h3>' +
                  '<div class="clearfix cs-at-layouttogglecontentmain cs-non-html-layout cs-pr">';
                  if (dataValue.layoutActivityVO.playbackActivityVOs != undefined) {
                        for(var i=0;i<dataValue.layoutActivityVO.playbackActivityVOs.length;i++) {
                            layoutHtml += mainBuildHtml(dataValue.layoutActivityVO.playbackActivityVOs[i]);
                        }
                    }
        //console.log(JSON.parse(setData));
        layoutHtml += '</div></div>';
    } else {
        var displayName = dataValue.layoutActivityVO.layoutName;
        var getDescription = dataValue.layoutActivityVO.description;
		var getSetheader = dataValue.layoutActivityVO.setHeader;
        var setData = JSON.stringify(dataValue);
        setData = JSON.parse(setData);
        setData.layoutActivityVO.playbackActivityVOs = [];
        setData = JSON.stringify(setData);
        for (i = 0; i < setData.length; i++) {
            setData = setData.replace(" ", "12344321");
            setData = setData.replace(">", "43211234");
        }
		var selectHeader;
		if(getSetheader == "yes"){
			selectHeader = "checked";
		}else{
			selectHeader = "";
		}
        layoutHtml += '<div class="clearfix cs-at-layouteachmain cs-layout-container cs-at-layoutcontroweach cs-aparent cs-pr cs-pb-blk" setData=' + setData + '>' +
            '<h3 class="clearfix cs-nomar cs-bline">' +
            '<span class="cs-remove-activity cs-pa cs-cur">' +
            '<i class="icon-cs-delete"></i>' +
            '</span>' +
            '<a class="cs-at-layouttoggletrigger cs-cur cs-inline cs-pad"><i class="icon-cs-down-arrow"></i></a>' +
            '<span class="cs-at-layouttitle cs-inline cs-ts-14 cs-tw-600">' + displayName + '</span>' +
            '<span class="cs-inline cs-ts-14 cs-tw-600 cs-hpad cs-rline">' +
            '<span><i class="icon-cs-element-count cs-ts-18"></i></span>' +
            '<span class="cs-badge cs-badge-info cs-lmar">40</span>' +
            '</span>' +
            '<span class="cs-inline cs-hpad">' +
            '<span><i class="icon-cs-element-action-defined cs-ts-18"></i></span>' +
            '<span class="cs-badge cs-badge-info cs-b-white cs-line cs-blackc cs-lsmar cs-assigned-elem">04</span>' +
            '<span class="cs-hsmar"><i class="icon-cs-element-action-undefined cs-ts-18"></i></span>' +
            '<span class="cs-badge cs-badge-info cs-b-white cs-line cs-blackc cs-non-aggigned-elem">02</span>' +
            '</span>' +
            '<a class="cs-inline cs-cur" data-cs-dropdown="#cs-at-eachTemplateFilter"><i class="icon-cs-filter-o cs-ts-14"></i></a>' +
            '<div class="cs-hmar cs-lline cs-inline cs-valignm cs-layout-description-container">' +
            '<input type="text" class="cs-inline cs-lmar cs-pe-none cs-cur  cs-layout-description-input" value="' + getDescription + '" placeholder="Enter Description">' +
            '</div>' +
			'<div class="cs-inline cs-lsmar cs-layout-setasheader"><input type="radio" id="rad_'+radID+'" name="layoutheadselect" '+selectHeader+'><label for="rad_'+radID+'">Set Header</label></div>'+
            '</h3>' +
            '<div class="clearfix cs-at-layouttogglecontentmain cs-pr">';
			radID++;
        if (dataValue.layoutActivityVO.playbackActivityVOs != undefined) {
            for(var i=0;i<dataValue.layoutActivityVO.playbackActivityVOs.length;i++) {
                layoutHtml += mainBuildHtml(dataValue.layoutActivityVO.playbackActivityVOs[i]);
            }
        }
        //console.log(JSON.parse(setData));
        layoutHtml += '</div></div>';
    }
    //layoutHtml = $(layoutHtml).data("eachActivityVO",dataValue);
    return layoutHtml;
}

function buildIteration(dataValue) {
    var iterationHtml = "";
    //var displayName = dataValue.layoutActivityVO.layoutName;
    var setData = JSON.stringify(dataValue);
    setData = JSON.parse(setData);
    setData.iterationActivityVO.playbackActivityVOs = [];
    setData = JSON.stringify(setData);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    iterationHtml += '<div class="clearfix cs-aparent cs-at-layoutcontroweach cs-activityBlock cs-iterationActivity cs-pr cs-pb-blk" setData=' + setData + '>' +
        '<div class="cs-pa cs-activity-title cs-ts-10">Iteration Activity</div>' +
        '<div class="cs-activity-icon cs-pa">' +
        '<i class="icon-cs-iteration-activity"></i>' +
        '</div>' +
        '<span class="cs-remove-activity cs-pa cs-cur">' +
        '<i class="icon-cs-delete"></i>' +
        '</span>' +
        '<div class="clearfix cs-pad cs-rmar cs-bmar">' +
		'<div class="cs-inline cs-cur cs-vt-align cs-ts-12 cs-cdx-exp-click cs-ite-dd-clk" data-cs-dropdown="#cs-at-condexpresselectndroplist">' +
		'<span class="cs-label cs-ts-10 cs-label-warning">Con</span>' +
		'<span class="cs-inline"><i class="icon-cs-caret-down cs-ts-8"></i></span>' +
		'</div>' +
		'<div class="cs-at-inp-typ cs-inline">' +
		'<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput" data-contentValue="Con">' +
		'<input type="Number" name="constantValue" class="cs-pe-none cs-cur" placeholder="Enter The Constant">' +
		'</div>' +
		'<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-var-el-dd-click cs-hide" data-contentValue="Var"  data-cs-dropdown="#cs-at-leftexp" data-dd-type="var">' +
		'<input type="text" name="VariableValue" class="cs-pe-none cs-cur" placeholder="Select The Variable" disabled>' +
		'</div>' +
		'<div class="cs-cur cs-vt-align cs-ts-12 cs-hpad cs-at-contentEntryinput cs-hide" data-contentValue="Lar">' +
		'<input type="text" name="layoutarrayValue" class="cs-pe-none cs-cur" placeholder="Enter The Layoutarray">' +
		'</div>' +
		'</div>' +
		'</div>';

    if (dataValue.iterationActivityVO.playbackActivityVOs != undefined) {
        for(var i=0;i<dataValue.iterationActivityVO.playbackActivityVOs.length;i++) {
            iterationHtml += mainBuildHtml(dataValue.iterationActivityVO.playbackActivityVOs[i]);
        }
    }
    iterationHtml += '</div>';
    return iterationHtml;
}
function buildDataTableAct(dataValue) {
    var dataTabHtml = "";
    //var displayName = dataValue.layoutActivityVO.layoutName;
    var setData = JSON.stringify(dataValue);
    setData = JSON.parse(setData);
    setData.dataTableActivityVo.playbackActivityVOs = [];
    setData = JSON.stringify(setData);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
        
    var dataTabHtml = '<div class="clearfix cs-aparent cs-activityBlock cs-at-layoutcontroweach cs-DataTable cs-pr cs-pb-blk" setData=' + setData + '>' +
    '<div class="cs-pa cs-activity-title cs-ts-12">Data Table Activity</div>' +
    '<div class="cs-vpad cs-drg-txt-box-par">';

    if (dataValue.dataTableActivityVo.playbackActivityVOs != undefined) {
        for(var i=0;i<dataValue.dataTableActivityVo.playbackActivityVOs.length;i++) {
            dataTabHtml += mainBuildHtml(dataValue.dataTableActivityVo.playbackActivityVOs[i]);
        }
    }
    dataTabHtml += '</div>'+
    '<div class="cs-activity-icon cs-pa">' +
    '<i class="icon-cs-data-table-activity"></i>' +
    '</div>' +
    '<span class="cs-remove-activity cs-pa cs-cur">' +
    '<i class="icon-cs-delete"></i>' +
    '</span></div>';
    return dataTabHtml;
}
function buildExcelAutomationAct(dataValue) {
    var excelAutHtml = "";
    //var displayName = dataValue.layoutActivityVO.layoutName;
    var setData = JSON.stringify(dataValue);
    setData = JSON.parse(setData);
    setData.excelAutomationActivityVo.playbackActivityVOs = [];
    setData = JSON.stringify(setData);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
        
    var excelAutHtml = '<div class="clearfix cs-aparent cs-activityBlock cs-at-layoutcontroweach cs-excel-auto-act-child cs-pr cs-pb-blk" setData=' + setData + '>' +
    '<div class="cs-pa cs-activity-title cs-ts-12">Excel Activity</div>' +
    '<div class="cs-vpad cs-drg-txt-box-par">';

    if (dataValue.excelAutomationActivityVo.playbackActivityVOs != undefined) {
        for(var i=0;i<dataValue.excelAutomationActivityVo.playbackActivityVOs.length;i++) {
            excelAutHtml += mainBuildHtml(dataValue.excelAutomationActivityVo.playbackActivityVOs[i]);
        }
    }
    excelAutHtml += '</div>'+
    '<div class="cs-activity-icon cs-pa">' +
    '<i class="icon-cs-file-excel-o"></i>' +
    '</div>' +
    '<span class="cs-remove-activity cs-pa cs-cur">' +
    '<i class="icon-cs-delete"></i>' +
    '</span></div>';
    return excelAutHtml;
}
function buildExcelSubAct(dataValue) {
    var excelHtml = "";
    //var displayName = dataValue.layoutActivityVO.layoutName;
    var setData = JSON.stringify(dataValue);
    setData = JSON.parse(setData);
    setData.excelSubActivityVo.playbackActivityVOs = [];
    setData = JSON.stringify(setData);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
        
    var excelHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-excel-act-child cs-pr cs-pb-blk" setData=' + setData + '>' +
    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Excel File</div>' +
    '<div class="cs-activity-icon cs-pa">' +
    '<i class="icon-cs-file-excel-o"></i>' +
    '</div>' +
    '<span class="cs-remove-activity cs-pa cs-cur">' +
    '<i class="icon-cs-delete"></i>' +
    '</span>' +
    '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
    '<div class="clearfix">' +

    '<div class="cs-cell-8">' +
    '<div class="cs-input cs-pr cs-excel-act-file-loc">' +
    '<label>Select File Location</label>' +
    '<input type="text" class="cs-exc-sel-file-loc-val cs-truncate">' +
    '<label for="" class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur cs-excel-file-upload"><em class="icon-cs-folder-open cs-graylightc cs-ts-10"></em></label>'+
    '<input id="" type="file" class="cs-hide cs-excel-file-inp">' +
    '</div>' +
    '</div>' +
    '<div class="cs-cell-8">' +
    '<div class="cs-input cs-excel-act-refname">' +
    '<label>References Name</label>' +
    '<input type="text">' +
    '</div>' +
    '</div>' +
    `<div class="cs-cell-8">
        <div class="clearfix cs-excel-act-chk-boc-hei">
        <input type="checkbox" id="ex1" class="cs-excel-act-clearIne">
        <label for="ex1" class="cs-blackc">Create if not exists</label>
        </div>
    </div>` +
    `<div class="cs-cell-24f cs-bsmar">
        <div class="cs-cell-8">
        <div class="clearfix">
        <input type="checkbox" id="ex2" class="cs-excel-act-saveChange">
        <label for="ex2" class="cs-blackc">Save Changes</label>
        </div>
        </div>
     </div>` +

    '</div>' +
    '</div>' +
    '</div>';
    return excelHtml;
}
function buildExcelManupulationAct(dataValue) {
    var excelManupulationHtml = "";
    //var displayName = dataValue.layoutActivityVO.layoutName;
    var setData = JSON.stringify(dataValue);
    setData = JSON.parse(setData);
    setData.excelManupulationActivityVo.playbackActivityVOs = [];
    setData = JSON.stringify(setData);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
        
    var excelManupulationHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-excel-manipulation-child cs-pr cs-pb-blk" setData=' + setData + '>' +
    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Manipulation</div>' +
    `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-man-sel cs-select">
        <select class="manupulationGroup">
                        <option value="select1">Append Range</option>
                        <option value="select2">Clear Sheet/Range/Table</option>
                        <option value="select3">Copy/Paste Range</option>
                        <option value="select4">Fill Range</option>
                        <option value="select5">Find/Replace Value</option>
        </select>
        <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
    </div>
    `+
    '<div class="cs-activity-icon cs-pa">' +
    '<i class="icon-cs-file-excel-o"></i>' +
    '</div>' +
    '<span class="cs-remove-activity cs-pa cs-cur">' +
    '<i class="icon-cs-delete"></i>' +
    '</span>' +
    '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
    '<div class="clearfix">' +

    '<div class="cs-man-append-range-par cs-manupulation-common cs-tsmar">'+
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-man-append-exc-range">' +
        '<label>Excel range to append</label>' +
        '<input type="text">' +
        '</div>' +
        '</div>' +
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-man-append-after-range">' +
        '<label>Append after range</label>' +
        '<input type="text">' +
        '</div>' +
        '</div>' +
        `<div class="cs-cell-8">
            <div class="cs-input cs-man-append-what-copy">
            <label>What to copy</label>
            <select>
                <option value="All">All</option>
                <option value="Values">Values</option>
                <option value="Formula">Formula</option>
                <option value="Format">Format</option>
            </select>
            </div>
        </div>` +
        `<div class="cs-cell-24f cs-bsmar">
            <div class="cs-cell-8">
                <div class="clearfix">
                <input type="checkbox" id="" class="cs-man-append-exclude-header">
                <label for="" class="cs-blackc">Exclude Header</label>
                </div>
            </div>
            <div class="cs-cell-8">
            <div class="clearfix">
            <input type="checkbox" id="" class="cs-man-append-transpose">
            <label for="" class="cs-blackc">Transpose</label>
            </div>
            </div>
        </div>` +
    '</div>'+
    `
    <div class="cs-man-clear-sheetrange-par cs-manupulation-common cs-tsmar cs-hide">
        <div class="cs-cell-8">
            <div class="cs-input cs-man-sheetrange-clear">
            <label>Range to clear</label><input type="text">
        </div>
        </div>
        <div class="cs-cell-8">
            <div class="clearfix cs-man-act-chk-boc-hei">
            <input type="checkbox" id="" class="cs-man-sheetrange-headers">
            <label for="" class="cs-blackc">Has headers</label>
            </div>
        </div>
    </div>
    `+

    `
    <div class="cs-man-copypaste-range-par cs-manupulation-common cs-tsmar cs-hide">
        <div class="cs-cell-8">
            <div class="cs-input cs-man-copypaste-destcell">
            <label>Destination Cell</label><input type="text">
        </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-man-copypaste-destsheet">
            <label>Destination sheet</label><input type="text">
        </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-man-copypaste-destsheetname">
            <label>Sheet name</label><input type="text">
        </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-man-copypaste-destsheetrange">
            <label>Sheet range</label><input type="text">
        </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-man-copypaste-what-copy">
            <label>Copy items</label>
            <select>
                <option value="All">All</option>
                <option value="Values">Values</option>
                <option value="Formula">Formula</option>
                <option value="Number format">Number format</option>
                <option value="Cell Format">Cell Format</option>
            </select>
            </div>
        </div>
    </div>
    `+
    `
    <div class="cs-man-fillrange-par cs-manupulation-common cs-tsmar cs-hide">
        <div class="cs-cell-8">
            <div class="cs-input cs-man-fillrange-wheretowri">
                <label>Where to write</label><input type="text">
            </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-man-fillrange-whattowri">
                <label>What to write</label><input type="text">
            </div>
        </div>
    </div>
    `+
    `
    <div class="cs-man-findreplace-par cs-manupulation-common cs-tsmar cs-hide">
    <div class="cs-cell-8">
            <div class="cs-input cs-man-findreplace-opr">
            <label>Operation </label>
            <select>
                <option value="Find">Find</option>
                <option value="Replace">Replace</option>
                <option value="Replace all">Replace all</option>
            </select>
            </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-man-findreplace-wheretoser">
                <label>Where to search</label><input type="text">
            </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-man-findreplace-valuetofin">
                <label>Value to find</label><input type="text">
            </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-man-findreplace-repwith">
                <label>Replace with</label><input type="text">
            </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-man-findreplace-foundat">
                <label>Found at</label><input type="text">
            </div>
        </div>
    </div>
    `+
    
    '</div>' +
    '</div>' +
    '</div>';
    return excelManupulationHtml;
}
function buildExcelAdvancedAct(dataValue) {
    var excelAdvancedHtml = "";
    //var displayName = dataValue.layoutActivityVO.layoutName;
    var setData = JSON.stringify(dataValue);
    setData = JSON.parse(setData);
    setData.excelAdvancedActivityVo.playbackActivityVOs = [];
    setData = JSON.stringify(setData);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
        
    var excelAdvancedHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-excel-advanced-act-child cs-pr cs-pb-blk" setData=' + setData + '>' +
    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Advanced</div>' +
    `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-advanced-sel cs-select">
        <select class="advancedGroup">
                        <option value="select1">Create Pivot Table</option>
                        <option value="select2">Lookup</option>
                        <option value="select3">Run Spreadsheet Macro</option>
                        <option value="select4">Invoke VBA</option>
        </select>
        <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
    </div>
    `+
    '<div class="cs-activity-icon cs-pa">' +
    '<i class="icon-cs-file-excel-o"></i>' +
    '</div>' +
    '<span class="cs-remove-activity cs-pa cs-cur">' +
    '<i class="icon-cs-delete"></i>' +
    '</span>' +
    '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
    '<div class="clearfix">' +

    '<div class="cs-advanced-creatr-pivot-par cs-Advanced-common cs-tsmar">'+
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-advanced-source-inp">' +
        '<label>Source</label>' +
        '<input type="text">' +
        '</div>' +
        '</div>' +
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-advanced-newtable-name">' +
        '<label>New table name</label>' +
        '<input type="text">' +
        '</div>' +
        '</div>' +
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-advanced-destination">' +
        '<label>Destination</label>' +
        '<input type="text">' +
        '</div>' +
        '</div>' +
        `
        <div class="cs-cell-24f">
            <div class="cs-flex cs-row-between">
                <div class="cs-column-middle cs-flex cs-lmar">
                    <span class="cs-lsmar cs-tw-600">Pivot Fields</span>
                    <span class="cs-badge cs-badge-info cs-lsmar">03</span>
                </div>
                <div class="cs-rmar"><div class="cs-btn cs-btn-primary cs-btn-sm cs-ts-12">Add Pivot Field</div></div>
            </div>
        </div>
        <div class="cs-advanced-pivotField-par">
            <div class="cs-advanced-pivotField-list cs-cell-24f">
                <div class="cs-cell-8">
                    <div class="cs-input cs-advanced-Field">
                    <label>Field</label><input type="text">
                </div>
                </div>
                <div class="cs-cell-8">
                    <div class="cs-input cs-advanced-Isa">
                    <label>Is a</label>
                    <select>
                        <option value="Row">Row</option>
                        <option value="Column">Column</option>
                        <option value="Value">Value</option>
                        <option value="Filter">Filter</option>
                    </select>
                    </div>
                </div>
                <div class="cs-cell-3f cs-flex cs-advanced-pivotField-del-add-sty">
                    <div class="cs-lmar">
                        <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur"><i class="icon-cs-delete"></i></span>
                        <span class="cs-cur cs-inline cs-remove-activity-datatable-add cs-rsmar cs-tsmar"><i class="icon-cs-new"></i></span>
                    </div>                        
                </div>
            </div>
        </div>
        `+
    '</div>'+ 

    `<div class="cs-advanced-Lookup-par cs-Advanced-common cs-tsmar cs-hide">
        <div class="cs-cell-8">
            <div class="cs-input cs-advanced-lookup-vtl">
            <label>Value to lookup</label><input type="text">
            <span class="cs-bluec cs-cur cs-lookup cs-open-modal cs-r"><i class="icon-cs-search"></i></span>
        </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-advanced-lookup-range">
            <label>Range</label><input type="text">
        </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-advanced-lookup-sor">
            <label>Source of results</label><input type="text">
        </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-advanced-lookup-result">
            <label>Result</label><input type="text">
        </div>
        </div>
    </div>
    

    <div class="cs-advanced-runspreadsheetmacro-par cs-Advanced-common cs-tsmar cs-hide">
        <div class="cs-cell-8">
            <div class="cs-input cs-advanced-runspreadsheetmacro-swbook">
            <label>Source workbook</label><input type="text">
        </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-advanced-runspreadsheetmacro-mname">
            <label>Macro name</label><input type="text">
        </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-advanced-runspreadsheetmacro-outto">
            <label>Output to </label><input type="text">
        </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-advanced-runspreadsheetmacro-addmacarg">
            <label>Add Macro Argument</label><input type="text">
        </div>
        </div>
    </div>
    
    <div class="cs-advanced-InvokeVBA-par cs-Advanced-common cs-tsmar cs-hide">
        <div class="cs-cell-8">
            <div class="cs-input cs-advanced-InvokeVBA-cfp">
                <label>Code file path</label><input type="text">
            </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-advanced-InvokeVBA-emn">
                <label>Entry method name</label><input type="text">
            </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-advanced-InvokeVBA-emp">
                <label>Entry method parameter</label><input type="text">
            </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-advanced-InvokeVBA-ov">
                <label>Output value</label><input type="text">
            </div>
        </div>
    </div>
    
    `+
    
    '</div>' +
    '</div>' +
    '</div>';
    return excelAdvancedHtml;
}
function buildExcelDeleteAct(dataValue) {
    var excelDeleteHtml = "";
    //var displayName = dataValue.layoutActivityVO.layoutName;
    var setData = JSON.stringify(dataValue);
    setData = JSON.parse(setData);
    setData.excelDeleteActivityVo.playbackActivityVOs = [];
    setData = JSON.stringify(setData);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
        
    var excelDeleteHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach  cs-excel-delete-child cs-pr cs-pb-blk" setData=' + setData + '>' +
    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Delete</div>' +
    `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-delete-sel cs-select">
        <select class="deleteGroup">
                        <option value="select1">Delete Column</option>
                        <option value="select2">Delete Rows</option>
                        <option value="select3">Delete Sheet</option>
        </select>
        <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
    </div>
    `+
    '<div class="cs-activity-icon cs-pa">' +
    '<i class="icon-cs-file-excel-o"></i>' +
    '</div>' +
    '<span class="cs-remove-activity cs-pa cs-cur">' +
    '<i class="icon-cs-delete"></i>' +
    '</span>' +
    '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
    '<div class="clearfix">' +

    '<div class="cs-delete-column-par cs-delete-common cs-tsmar">'+
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-delete-source">' +
        '<label>Source</label>' +
        '<input type="text">' +
        '</div>' +
        '</div>' +
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-delete-column-name">' +
        '<label>Column name</label>' +
        '<input type="text">' +
        '</div>' +
        '</div>' +
        `<div class="cs-cell-8">
            <div class="clearfix cs-delete-act-chk-boc-hei">
            <input type="checkbox" id="" class="cs-delete-column-has-header">
            <label for="" class="cs-blackc">Has Header</label>
            </div>
        </div>` +
    '</div>'+
    `
    <div class="cs-delete-rows-par cs-delete-common cs-tsmar cs-hide">
        <div class="cs-cell-8">
            <div class="cs-input cs-delete-rows-iwtor">
            <label>In what table or range</label><input type="text">
        </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-delete-rows-whattodel">
            <label>What to delete</label>
            <select>
                <option value="Specific rows">Specific rows</option>
                <option value="All visible rows">All visible rows</option>
                <option value="All duplicate rows">All duplicate rows</option>
                <option value="All hidden rows">All hidden rows</option>
            </select>
            </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-delete-rows-atpos">
            <label>At position</label><input type="text">
        </div>
        </div>
        <div class="cs-cell-8 cs-bsmar">
            <div class="clearfix">
            <input type="checkbox" id="" class="cs-delete-rows-has-headers">
            <label for="" class="cs-blackc">Has headers</label>
            </div>
        </div>
    </div>
    `+

    `
    <div class="cs-delete-sheet-par cs-delete-common cs-tsmar cs-hide">
        <div class="cs-cell-8">
            <div class="cs-input cs-delete-sheet-select">
            <label>Select sheet</label><input type="text">
        </div>
        </div>
    </div>
    `+
    
    '</div>' +
    '</div>' +
    '</div>';
    return excelDeleteHtml;
}
function buildExcelFilterAct(dataValue) {
    var excelFilterHtml = "";
    //var displayName = dataValue.layoutActivityVO.layoutName;
    var setData = JSON.stringify(dataValue);
    setData = JSON.parse(setData);
    setData.excelFilterActivityVo.playbackActivityVOs = [];
    setData = JSON.stringify(setData);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
        
    var excelFilterHtml =  '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-excel-filter-act-child cs-pr cs-pb-blk" setData=' + setData + '>' +
    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Filter</div>' +
    `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-filter-sel cs-select">
        <select class="filterGroup">
                        <option value="select1">Filter</option>
                        <option value="select2">Filter Pivot Table</option>
        </select>
        <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
    </div>
    `+
    '<div class="cs-activity-icon cs-pa">' +
    '<i class="icon-cs-file-excel-o"></i>' +
    '</div>' +
    '<span class="cs-remove-activity cs-pa cs-cur">' +
    '<i class="icon-cs-delete"></i>' +
    '</span>' +
    '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
    '<div class="clearfix">' +

    '<div class="cs-filter-par cs-filter-common cs-tsmar">'+
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-filter-source-inp">' +
        '<label>Source</label>' +
        '<input type="text">' +
        '</div>' +
        '</div>' +
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-filter-column-name">' +
        '<label>Column name</label>' +
        '<input type="text">' +
        '</div>' +
        '</div>' +
        `
        <div class="cs-cell-8">
            <div class="clearfix cs-filter-act-chk-boc-hei">
            <input type="checkbox" id="" class="cs-excel-filter-caef">
            <label for="" class="cs-blackc">Clear any existing filter</label>
            </div>
        </div>
        <div class="cs-cell-24f">
        <div class="cs-flex cs-row-between">
            <div class="cs-column-middle cs-flex cs-lmar">
                <span class="cs-lsmar cs-tw-600">Basic Filter</span>
                <span class="cs-badge cs-badge-info cs-lsmar">03</span>
            </div>
            <div class="cs-rmar"><div class="cs-btn cs-btn-primary cs-btn-sm cs-ts-12">Configure Filter</div></div>
        </div>
        </div>
        <div class="cs-filter-BasicFilter-par">
            <div class="cs-filter-pivotField-list cs-cell-24f">
                <div class="cs-cell-8">
                    <div class="cs-input cs-filter-isEqTo">
                    <label>Is Equal to</label><input type="text">
                </div>
                </div>
                <div class="cs-cell-3f cs-flex cs-filter-BasicFilter-del-add-sty">
                    <div class="cs-lmar">
                        <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur"><i class="icon-cs-delete"></i></span>
                        <span class="cs-cur cs-inline cs-remove-activity-datatable-add cs-rsmar cs-tsmar"><i class="icon-cs-new"></i></span>
                    </div>                        
                </div>
            </div>
        </div>
        `+
    '</div>'+ 

    `<div class="cs-filter-pivotTable-par cs-filter-common cs-tsmar cs-hide">
        <div class="cs-cell-12">
            <div class="cs-input cs-filter-pivotTable-sou">
            <label>Source</label><input type="text">
        </div>
        </div>
        <div class="cs-cell-12">
            <div class="cs-input cs-filter-pivotTable-cname">
            <label>Column name</label><input type="text">
        </div>
        </div>
        <div class="cs-cell-12">
            <div class="cs-rmar cs-pull-left cs-rpad"><div class="cs-btn cs-btn-primary cs-btn-sm cs-ts-12">Configure Filter</div></div>
            <div class="clearfix">
            <input type="checkbox" id="" class="cs-excel-filter-pivotTable-caef">
            <label for="" class="cs-blackc">Clear any existing filter</label>
            </div>
        </div>
        </div>
    </div>
    `+
    
    '</div>' +
    '</div>';
    return excelFilterHtml;
}
function buildExcelReadAct(dataValue) {
    var excelReadHtml = "";
    //var displayName = dataValue.layoutActivityVO.layoutName;
    var setData = JSON.stringify(dataValue);
    setData = JSON.parse(setData);
    setData.excelReadActivityVo.playbackActivityVOs = [];
    setData = JSON.stringify(setData);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
        
    var excelReadHtml =  '<div class="clearfix cs-aparent cs-activityBlock cs-at-layoutcontroweach cs-excel-read-act-child cs-pr cs-pb-blk" setData=' + setData + '>' +
    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Read</div>' +
    `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-read-sel cs-select">
        <select class="readGroup">
                        <option value="select1">For Each Excel Row</option>
                        <option value="select2">Read Cell Formula/Table</option>
                        <option value="select3">Read Cell Value</option>
                        <option value="select4">Read Range</option>
        </select>
        <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
    </div>
    `+
    '<div class="cs-activity-icon cs-pa">' +
    '<i class="icon-cs-file-excel-o"></i>' +
    '</div>' +
    '<span class="cs-remove-activity cs-pa cs-cur">' +
    '<i class="icon-cs-delete"></i>' +
    '</span>' +
    '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
    '<div class="clearfix">' +

    '<div class="cs-read-forEacExcelRow-par cs-read-common cs-tsmar">'+
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-read-forEacExcelRow-fe">' +
        '<label>For each</label>' +
        '<input type="text">' +
        '</div>' +
        '</div>' +
        `<div class="cs-cell-8">
            <div class="cs-input cs-read-forEacExcelRow-Ir">
            <label>In range</label>
            <select>
                <option value="table">table</option>
                <option value="sheet to use">sheet to use</option>
            </select>
            </div>
        </div>` +
        `<div class="cs-cell-8">
            <div class="cs-input cs-read-forEacExcelRow-erb">
            <label>Empty Row Behavior</label>
            <select>
                <option value="StopAfterThreeConsecutiveEmptyRows">StopAfterThreeConsecutiveEmptyRows</option>
                <option value="Stop">Stop</option>
                <option value="Skip">Skip</option>
                <option value="Process">Process</option>
            </select>
            </div>
        </div>` +
        `<div class="cs-cell-24f cs-bsmar">
            <div class="cs-cell-8">
                <div class="clearfix">
                <input type="checkbox" id="" class="cs-read-forEacExcelRow-hh">
                <label for="" class="cs-blackc">Has Hader</label>
                </div>
            </div>
            <div class="cs-cell-8">
            <div class="clearfix">
            <input type="checkbox" id="" class="cs-read-forEacExcelRow-saer">
            <label for="" class="cs-blackc">Save after each row</label>
            </div>
            </div>
        </div>` +
        `
        <div class="cs-cell-24f">
            <div class="cs-bg-bdy-clr cs-pad cs-tmar">Body</div>
            <div class="cs-read-drop-area cs-line cs-pad-sm">`;
            if (dataValue.excelReadActivityVo.playbackActivityVOs != undefined) {
                for(var i=0;i<dataValue.excelReadActivityVo.playbackActivityVOs.length;i++) {
                    excelReadHtml += mainBuildHtml(dataValue.excelReadActivityVo.playbackActivityVOs[i]);
                }
                $(".cs-read-drop-area-child").remove();
            }
            if($(excelReadHtml).find(".cs-read-drop-area .cs-activityBlock").length < 1){
                excelReadHtml += `<div class="cs-line-das cs-read-drop-area-child cs-pad cs-tc">Drag and drop your excel function only...</div>`;
            }
            excelReadHtml += '</div>'+`

        </div>
        `+
    '</div>'+
    `
    <div class="cs-read-readCellFormula-par cs-read-common cs-tsmar cs-hide">
        <div class="cs-cell-8">
            <div class="cs-input cs-read-readCellFormula-cell">
            <label>Cell</label><input type="text">
        </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-read-readCellFormula-saveto">
            <label>Save to</label><input type="text">
        </div>
        </div>
    </div>
    `+

    `
    <div class="cs-read-readCellValue-par cs-read-common cs-tsmar cs-hide">
        <div class="cs-cell-8">
            <div class="cs-input cs-read-readCellValue-cell">
            <label>Cell</label><input type="text">
        </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-read-readCellValue-saveto">
            <label>Save to</label><input type="text">
        </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-read-readCellValue-getFtext">
            <label>Get formatted text</label><input type="text">
        </div>
        </div>
    </div>
    `+
    `
    <div class="cs-read-readRange-par cs-read-common cs-tsmar cs-hide">
            <div class="cs-cell-8">
                <div class="cs-input cs-read-readRange-range">
                    <label>Range</label><input type="text">
                </div>
            </div>
            <div class="cs-cell-8">
                <div class="clearfix cs-read-act-chk-boc-hei">
                <input type="checkbox" id="" class="cs-read-readRange-headers">
                <label for="" class="cs-blackc">Has headers</label>
                </div>
            </div>
            <div class="cs-cell-8">
                <div class="clearfix cs-read-act-chk-boc-hei">
                <input type="checkbox" id="" class="cs-read-readRange-vro">
                <label for="" class="cs-blackc">Visible rows only</label>
                </div>
            </div>
            <div class="cs-cell-24f">
                <div class="cs-cell-8">
                    <div class="cs-input cs-read-readRange-saveto">
                        <label>Save to</label><input type="text">
                    </div>
                </div>
            </div>
    </div>
    `+
  
    
    '</div>' +
    '</div>' +
    '</div>';
    return excelReadHtml;
}
function buildExcelChartAct(dataValue) {
    var excelChartHtml = "";
    //var displayName = dataValue.layoutActivityVO.layoutName;
    var setData = JSON.stringify(dataValue);
    setData = JSON.parse(setData);
    setData.excelChartActivityVo.playbackActivityVOs = [];
    setData = JSON.stringify(setData);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
        
    var excelChartHtml =  '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-excel-chart-child cs-pr cs-pb-blk" setData=' + setData + '>' +
    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Chart</div>' +
    `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-chart-sel cs-select">
        <select class="chartGroup">
                        <option value="select1">Get Excel Chart</option>
                        <option value="select2">Insert Chart</option>
        </select>
        <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
    </div>
    `+
    '<div class="cs-activity-icon cs-pa">' +
    '<i class="icon-cs-file-excel-o"></i>' +
    '</div>' +
    '<span class="cs-remove-activity cs-pa cs-cur">' +
    '<i class="icon-cs-delete"></i>' +
    '</span>' +
    '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
    '<div class="clearfix">' +

    '<div class="cs-chart-getExcel-par cs-chart-common cs-tsmar">'+
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-chart-cval">' +
        '<label>Chart</label>' +
        '<input type="text" placeholder="Select the file">' +
        '</div>' +
        '</div>' +
        `<div class="cs-cell-8">
            <div class="cs-input cs-chart-action">
            <label>Action</label>
            <select>
                <option value="Copy to clipboard">Copy to clipboard</option>
                <option value="Save as picture">Save as picture</option>
            </select>
            </div>
        </div>` +
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-chart-filename">' +
        '<label>File Name</label>' +
        '<input type="text">' +
        '</div>' +
        '</div>' +
        `<div class="cs-cell-24f cs-bsmar">
            <div class="cs-cell-8">
                <div class="clearfix">
                <input type="checkbox" id="" class="cs-chart-replaceexistingfile">
                <label for="" class="cs-blackc">Replace existing file</label>
                </div>
            </div>
        </div>` +
    '</div>'+
   
    `
    <div class="cs-chart-insert-par cs-chart-common cs-tsmar cs-hide">
        <div class="cs-cell-8">
            <div class="cs-input cs-chart-cCatagory">
            <label>Chart category</label>
            <select>
                <option value="Area">Area</option>
                <option value="Bar">Bar</option>
                <option value="Pie">Pie</option>
                <option value="Scatter">Scatter</option>
            </select>
            </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-chart-cType">
            <label>Chart type</label>
            <select>
                <option value="Stacked Area">Stacked Area</option>
                <option value="Clustered Bar">Clustered Bar</option>
                <option value="Pie Doughnut">Pie Doughnut</option>
                <option value="Scatter with Straight Lines">Scatter with Straight Lines</option>
            </select>
            </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-chart-dataRange">
                <label>Data range</label><input type="text">
            </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-chart-iisheet">
                <label>Insert into sheet</label><input type="text">
            </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-chart-scTo">
                <label>Save Chart to</label><input type="text">
            </div>
        </div>
    </div>
    `+
    
    '</div>' +
    '</div>' +
    '</div>';
    return excelChartHtml;
}
function buildExcelInsertAct(dataValue) {
    var excelInsertHtml = "";
    //var displayName = dataValue.layoutActivityVO.layoutName;
    var setData = JSON.stringify(dataValue);
    setData = JSON.parse(setData);
    setData.excelInsertActivityVo.playbackActivityVOs = [];
    setData = JSON.stringify(setData);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
        
    var excelInsertHtml =  '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-excel-insert-child cs-pr cs-pb-blk" setData=' + setData + '>' +
    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Insert</div>' +
    `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-insert-sel cs-select">
        <select class="insertGroup">
                        <option value="select1">Insert Column</option>
                        <option value="select2">Insert Rows</option>
                        <option value="select3">Insert Sheet</option>
        </select>
        <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
    </div>
    `+
    '<div class="cs-activity-icon cs-pa">' +
    '<i class="icon-cs-file-excel-o"></i>' +
    '</div>' +
    '<span class="cs-remove-activity cs-pa cs-cur">' +
    '<i class="icon-cs-delete"></i>' +
    '</span>' +
    '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
    '<div class="clearfix">' +

    '<div class="cs-insert-Col-par cs-insert-common cs-tsmar">'+
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-insertCol-range">' +
        '<label>Range</label>' +
        '<input type="text" placeholder="Select the file">' +
        '</div>' +
        '</div>' +
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-insertCol-rtCol">' +
        '<label>Relative to column</label>' +
        '<input type="text">' +
        '</div>' +
        '</div>' +
        `<div class="cs-cell-8">
            <div class="cs-input cs-insertCol-Where">
            <label>Where</label>
            <select>
                <option value="Before">Before</option>
                <option value="After">After</option>
            </select>
            </div>
        </div>` +
        `<div class="cs-cell-24f cs-bsmar">
            <div class="cs-cell-8">
            <div class="cs-input cs-insertCol-addHead">
            <label>Add header</label>
            <input type="text">
            </div>
            </div>
            <div class="cs-cell-8">
                <div class="cs-input cs-insertCol-FDAT">
                <label>Format data as type</label>
                <select>
                    <option value="General">General</option>
                    <option value="Number">Number</option>
                    <option value="Date">Date</option>
                    <option value="Time">Time</option>
                    <option value="Percentage">Percentage</option>
                    <option value="Currency">Currency</option>
                    <option value="Text">Text</option>
                </select>
                </div>
            </div>
            <div class="cs-cell-8">
                <div class="clearfix cs-insert-act-chk-boc-hei">
                <input type="checkbox" id="" class="cs-insertCol-hasHead">
                <label for="" class="cs-blackc">Has Header</label>
                </div>
            </div>
        </div>` +
    '</div>'+
    `
    <div class="cs-insert-Rows-par cs-insert-common cs-tsmar cs-hide">
        <div class="cs-cell-8">
        <div class="cs-input cs-insertRows-iwtor">
        <label>In what table or range</label>
        <input type="text" placeholder="Select the file">
        </div>
        </div>
        <div class="cs-cell-8">
        <div class="cs-input cs-insertRows-nor">
        <label>Number of rows</label>
        <input type="text">
        </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-insertRows-where">
            <label>Where</label>
            <select>
                <option value="End">End</option>
                <option value="Start">Start</option>
                <option value="Specific index">Specific index</option>
            </select>
            </div>
        </div>
        <div class="cs-cell-24f cs-bsmar">
            <div class="cs-cell-8">
                <div class="clearfix">
                <input type="checkbox" id="" class="cs-insertRows-hasHead">
                <label for="" class="cs-blackc">Has header</label>
                </div>
            </div>
        </div>
    </div>
    `+
   
    `
    <div class="cs-insert-Sheet-par cs-insert-common cs-tsmar cs-hide">
        <div class="cs-cell-8">
            <div class="cs-input cs-insertSheet-ciw">
                <label>Create in workbook</label><input type="text">
            </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-insertSheet-sName">
                <label>Sheet name</label><input type="text">
            </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-insertSheet-rnsa">
                <label>Reference new sheet as</label><input type="text">
            </div>
        </div>
    </div>
    `+
    
    '</div>' +
    '</div>' +
    '</div>';
    return excelInsertHtml;
}
function buildExcelSaveAct(dataValue) {
    var excelSaveHtml = "";
    //var displayName = dataValue.layoutActivityVO.layoutName;
    var setData = JSON.stringify(dataValue);
    setData = JSON.parse(setData);
    setData.excelSaveActivityVo.playbackActivityVOs = [];
    setData = JSON.stringify(setData);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
        
    var excelSaveHtml =   '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-excel-save-child cs-pr cs-pb-blk" setData=' + setData + '>' +
    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Save</div>' +
    `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-Save-sel cs-select">
        <select class="saveGroup">
                        <option value="select1">Save Excel File As</option>
                        <option value="select2">Save Excel File</option>
                        <option value="select3">Save Excel File As PDF</option>
        </select>
        <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
    </div>
    `+
    '<div class="cs-activity-icon cs-pa">' +
    '<i class="icon-cs-file-excel-o"></i>' +
    '</div>' +
    '<span class="cs-remove-activity cs-pa cs-cur">' +
    '<i class="icon-cs-delete"></i>' +
    '</span>' +
    '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
    '<div class="clearfix">' +

    '<div class="cs-SaveExcelFileAs-par cs-Save-common cs-tsmar">'+
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-SaveExcelFileAs-wBook">' +
        '<label>Workbook</label>' +
        '<input type="text" placeholder="Select the file">' +
        '</div>' +
        '</div>' +
        `<div class="cs-cell-8">
            <div class="cs-input cs-SaveExcelFileAs-SAT">
            <label>Save as type</label>
            <select>
                <option value="Excel Workbook (.xlsx)">Excel Workbook (.xlsx)</option>
                <option value="Excel Binary Workbook (.xlsb)">Excel Binary Workbook (.xlsb)</option>
                <option value="Excel Macro Enabled Workbook (.xlsm)">Excel Macro Enabled Workbook (.xlsm)</option>
                <option value="or Excel 97-2003 Workbook (.xls)">or Excel 97-2003 Workbook (.xls)</option>
            </select>
            </div>
        </div>` +
        `<div class="cs-cell-8">
            <div class="cs-input cs-SaveExcelFileAs-SAF">
            <label>Save as file</label>
            <input type="text">
        </div>
        </div>`+
        `<div class="cs-cell-24f cs-bsmar">
            <div class="cs-cell-8">
            <div class="cs-input cs-SaveExcelFileAs-fileName">
            <label>File Name</label>
            <input type="text">
            </div>
            </div>
            <div class="cs-cell-8">
                <div class="clearfix cs-save-act-chk-boc-hei">
                    <input type="checkbox" id="" class="cs-SaveExcelFileAs-RE">
                    <label for="" class="cs-blackc">Replace existing</label>
                </div>
            </div>
        </div>` +
    '</div>'+
    `
    <div class="cs-SaveExcelFile-par cs-Save-common cs-tsmar cs-hide">
        <div class="cs-cell-8">
        <div class="cs-input cs-SaveExcelFile-File ">
        <label>File </label>
        <input type="text" placeholder="Select the file">
        </div>
        </div>
    </div>
    `+
   
    `
    <div class="cs-SaveExcelFileAsPDF-par cs-Save-common cs-tsmar cs-hide">
        <div class="cs-cell-8">
            <div class="cs-input cs-SaveExcelFileAsPDF-wBook">
                <label>Workbook </label><input type="text">
            </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-SaveExcelFileAsPDF-SAF">
                <label>Sheet name</label><input type="text">
            </div>
        </div>
        <div class="cs-cell-8">
                <div class="clearfix cs-save-act-chk-boc-hei">
                <input type="checkbox" id="" class="cs-SaveExcelFileAsPDF-RE">
                <label for="" class="cs-blackc">Replace existing</label>
                </div>
        </div>
    </div>
    `+
    
    '</div>' +
    '</div>' +
    '</div>';
    return excelSaveHtml;
}
function buildExcelWriteAct(dataValue) {
    var excelWriteHtml = "";
    //var displayName = dataValue.layoutActivityVO.layoutName;
    var setData = JSON.stringify(dataValue);
    setData = JSON.parse(setData);
    setData.excelWriteActivityVo.playbackActivityVOs = [];
    setData = JSON.stringify(setData);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
        
    var excelWriteHtml =   '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-excel-write-child cs-pr cs-pb-blk" setData=' + setData + '>' +
    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Write</div>' +
    `<div class="cs-column-middle cs-flex cs-mandatory cs-pa cs-write-sel cs-select">
        <select class="writeGroup">
                        <option value="select1">DataTable to Excel</option>
                        <option value="select2">Write Cell</option>
        </select>
        <span class="cs-lmar cs-cur"><em class="icon-cs-save"></em></span>
    </div>
    `+
    '<div class="cs-activity-icon cs-pa">' +
    '<i class="icon-cs-file-excel-o"></i>' +
    '</div>' +
    '<span class="cs-remove-activity cs-pa cs-cur">' +
    '<i class="icon-cs-delete"></i>' +
    '</span>' +
    '<div class="clearfix cs-tmar cs-rmar cs-bmar cs-tline">' +
    '<div class="clearfix">' +

    `<div class="cs-write-DataTabletoExcel-par cs-write-common cs-tsmar">
        <div class="cs-cell-8">
            <div class="cs-input cs-WriteDataTab-wtw">
            <label>What to write</label>
            <input type="text">
            </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-WriteDataTab-dest">
            <label>Destination</label>
            <input type="text">
            </div>
        </div>
        <div class="cs-cell-8">
            <div class="clearfix cs-write-act-chk-boc-hei">
            <input type="checkbox" id="" class="cs-WriteDataTab-append">
            <label for="" class="cs-blackc">Append</label>
            </div>
        </div> 
        <div class="cs-cell-24f cs-bsmar">
            <div class="cs-cell-8">
            <div class="clearfix">
            <input type="checkbox" id="" class="cs-WriteDataTab-Eheader">
            <label for="" class="cs-blackc">Exclude header</label>
            </div>
            </div>
        </div>
    </div>
   
    
    <div class="cs-write-WriteCell-par cs-write-common cs-tsmar cs-hide">
        <div class="cs-cell-8">
            <div class="cs-input cs-writeWC-whattow">
            <label>What to write</label>
            <input type="text">
            </div>
        </div>
        <div class="cs-cell-8">
            <div class="cs-input cs-writeWC-wheretow">
            <label>Where to write</label>
            <input type="text">
            </div>
        </div>
        <div class="cs-cell-8">
            <div class="clearfix cs-write-act-chk-boc-hei">
            <input type="checkbox" id="" class="cs-writeWC-autoIncRow">
            <label for="" class="cs-blackc">Auto increment row</label>
            </div>
        </div> 
    </div>
    `+
    
    '</div>' +
    '</div>' +
    '</div>';
    return excelWriteHtml;
}
function buildConditional(dataValue) {
    var conditionHtml = "";
    //var displayName = dataValue.layoutActivityVO.layoutName;
    var setData = JSON.stringify(dataValue);
    setData = JSON.parse(setData);
    setData.conditionalActivitySet = [];
    setData = JSON.stringify(setData);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    conditionHtml += '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-conditionnActivity cs-aparent cs-pr cs-pb-blk" setData=' + setData + '>' +
        '<div class="cs-pa cs-activity-title cs-ts-10">Condition Activity</div>' +
        '<div class="cs-activity-icon cs-pa">' +
        '<i class="icon-cs-sql-report-creation"></i>' +
        '</div>' +
        '<span class="cs-remove-activity cs-pa cs-cur">' +
        '<i class="icon-cs-delete"></i>' +
        '</span>' +
        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-at-con-if-else">';
    if (dataValue.conditionalActivitySet != undefined) {
        for(var i=0;i<dataValue.conditionalActivitySet.length;i++) {
            conditionHtml += mainBuildHtml(dataValue.conditionalActivitySet[i]);
        }
    }
    conditionHtml += '</div></div>';
    return conditionHtml;
}
function buildIf(dataValue) {
    var ifHtml = "";
    //var displayName = dataValue.layoutActivityVO.layoutName;
    var setData = JSON.stringify(dataValue);
    setData = JSON.parse(setData);
    setData.conditionalActivityVO.playbackActivityVOs = [];
    setData = JSON.stringify(setData);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    ifHtml += '<div class="cs-at-con-if cs-aparent cs-at-layoutcontroweach cs-at-con-elsifcom" setData=' + setData + '>' +
    '<div class="cs-at-con-actions">' +
    '<span class="cs-elseif-add cs-elseif-add-edit">' +
    '<i class="icon-cs-new cs-ts-12"></i>' +
    '</span>' +
    '<span class="cs-at-con-add cs-bluec cs-lmar">' +
    '<span class="cs-ts-18">{</span><i class="icon-cs-new cs-ts-12"></i><span class="cs-ts-18">}</span>' +
    '</span>' +
    '<div class="cs-at-apend-exp cs-inline cs-lmar">' +
                                '<div class="cs-edit-condition-value cs-truncate">' +
                                    '<span> condition =  </span>' +
                                    '<span class=" cs-ts-10 cs-at-apend-condition-text"></span>' +
                                    '<div class="cs-edit-condition-value-child">' +
                                        '<span> condition =  </span>' +
                                        '<span class=" cs-ts-10  cs-pa cs-at-apend-condition-text"></span>' +
                                    '</div>' +
                                '</div>' +
                                '<span class="cs-right-apend-exp cs-lmar"></span>' +
                                '<span class="cs-at-apend-exp-edit cs-at-apend-exp-edit-condition cs-lmar cs-cur">' +
                                    '<span class="cs-ts-18">{</span><i class="icon-cs-edit cs-ts-12"></i>' +
                                    '<span class="cs-ts-18">}</span>' +
                                '</span>' +
                            '</div>' +
    '<div class="cs-at-apend-custom-exp-main">' +
    '<div class="cs-at-apend-custom-exp cs-inline cs-lmar">' +
    '<span class="cs-cur cs-ts-14 cs-textb cs-at-apend-custom-hover">{ }</span>' +
    '<div class="cs-at-apend-custom-exp-cont-main">' +
    '<div class="cs-at-apend-custom-exp-cont cs-pr"></div>' +
    '</div>' +
    '</div>' +
    '<span class="cs-at-apend-cus-exp-edit cs-cur">' +
    '<span class="cs-ts-18">{</span><i class="icon-cs-edit cs-ts-12"></i><span class="cs-ts-18">}</span>' +
    '</span>' +
    '</div>' +
    '</div>' +
    '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white cs-add-exp-blk">' +
    '<div class="clearfix cs-tr">                               ' +
     '<span class="cs-cur cs-ts-14 cs-textb">{ }</i></span>' +
    '<div class="clearfix cs-inline">' +
    '<span class="cs-graylightc cs-rsmar">Custom Expression</span>' +
    '<label class="switch-toggle cs-lsmar">' +
    '<input type="checkbox" class="cs-cus-exp-tog">' +
    '<div class="slider-toggle round-toggle"></div>' +
    '</label>' +
    '</div>' +
    '<span class="cs-cur cs-con-exp-sav"> <i class="icon-cs-save"></i></span>' +
    '</div>' +
    '<div class="cs-textarea cs-pr cs-at-dd-expr-txtar">' +
     '<div class="clearfix cs-tmar">' +
                    '<span class="cs-rmar cs-exprbuilder cs-pr cs-cur cs-pull-right cs-tsmar" title="Edit Expression"><i class="icon-cs-expression-edit"></i></span>' +
                     '</div> ' +
    '<label for="expression">Expression</label>' +
    '<textarea placeholder="Enter Expression..."></textarea>' +
    '</div>' +
    '<div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">' +
                        '<div class="cs-cell-7">' +
                        '<div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">' +
                            '<label>Left Expression</label>' +
                            '<span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>' +
                            '<input type="text" placeholder="Select Expression" class="cs-ab-textinput" />' +
                            '<div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">' +
                                '<img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">' +
                            '</div>' +
                        '</div>' +
                    '</div>' +
                    '<div class="cs-cell-7">' +
                        '<div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">' +
                            '<label>Operators</label>' +
                           '<input type="text" placeholder="Select Operators" class="cs-cond-opr" />' +
                        '</div>' +
                    '</div>' +
                    '<div class="cs-cell-7">' +
                        '<div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">' +
                            '<label>Right Expression</label>' +
                            '<span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>' +
                            '<input type="text" placeholder="Select Expression" class="cs-ab-textinput" />' +
                            '<div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">' +
                                '<img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">' +
                            '</div>' +
                        '</div>' +
                    '</div>' +
                    '<div class="cs-cell-3f">' +
                    '<span class="cs-remove-activity-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">' +
                                     '<i class="icon-cs-delete"></i>' +
                    '</span>' +
                    '<span class="cs-remove-activity-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">' +
                    '<i class="icon-cs-new"></i>' +
                    '</div>' +
    '</div>' +
    '</div>' +
    '<div class="cs-at-con-drop-area">';
var eachExpSet= "";

                    
    if (dataValue.conditionalActivityVO.playbackActivityVOs != undefined) {
        for(var i=0;i<dataValue.conditionalActivityVO.playbackActivityVOs.length;i++) {
            ifHtml += mainBuildHtml(dataValue.conditionalActivityVO.playbackActivityVOs[i]);
        }
    }
    if ((dataValue.conditionalActivityVO.condition).length){
        $.each(dataValue.conditionalActivityVO.condition, function(ind, val) {
        
            eachExpSet +=" " +
                            '<span class="cs-oper-apend-getconditionlabel "> '+val.getConditionalValue+' </span>'+
                            '<span class="cs-oper-apend-opencurve ">'+"( "+'</span>'+
                            '<span class="cs-oper-apend-getleftexpval ">'+val.leftexp+
                            '</span>'+" "+'<span class="cs-oper-apend-getopratorval "> '+val.operator+' </span> '+
                            '<span class="cs-oper-apend-getrightval ">'+val.rightexp+'</span>'+
                            '<span class="cs-oper-apend-closecurve ">'+" )"+'</span>'+" ";
            }); 
        
                            eachExpSet += '<span class="cs-oper-apend-maincurve">'+" ) "+'</span>';
                            setTimeout(function() {
                                $(".cs-at-con-elsifcom").find(".cs-at-apend-condition-text").html(eachExpSet);
                            },100);
        }
    ifHtml += '</div></div>';
    return ifHtml;
}
function buildElseIf(dataValue) {
    var elseIfHtml = "";
    //var displayName = dataValue.layoutActivityVO.layoutName;
    var setData = JSON.stringify(dataValue);
    setData = JSON.parse(setData);
    setData.conditionalActivityVO.playbackActivityVOs = [];
    setData = JSON.stringify(setData);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    elseIfHtml += '<div class="cs-at-con-elseif cs-aparent cs-at-layoutcontroweach cs-at-con-elsifcom" setData=' + setData + '>' +
        '<div class="cs-inline cs-pa cs-delete-else-if"><span class="cs-cur"><i class="icon-cs-delete"></i></span></div>' +
        '<div class="cs-at-con-actions">' +
        '<span class="cs-elseif-add cs-elseif-add-edit">' +
        '<i class="icon-cs-new cs-ts-12"></i>' +
        '</span>' +
        '<span class="cs-at-con-add cs-bluec cs-lmar">' +
        '<span class="cs-ts-18">{</span><i class="icon-cs-new cs-ts-12"></i><span class="cs-ts-18">}</span>' +
        '</span>' +
        '<div class="cs-at-apend-exp cs-inline cs-lmar">' +
                                '<div class="cs-edit-condition-value cs-truncate">' +
                                    '<span> condition =  </span>' +
                                    '<span class=" cs-ts-10 cs-at-apend-condition-text"></span>' +
                                    '<div class="cs-edit-condition-value-child">' +
                                        '<span> condition =  </span>' +
                                        '<span class=" cs-ts-10  cs-pa cs-at-apend-condition-text"></span>' +
                                    '</div>' +
                                '</div>' +
                                '<span class="cs-right-apend-exp cs-lmar"></span>' +
                                '<span class="cs-at-apend-exp-edit cs-at-apend-exp-edit-condition cs-lmar cs-cur">' +
                                    '<span class="cs-ts-18">{</span><i class="icon-cs-edit cs-ts-12"></i>' +
                                    '<span class="cs-ts-18">}</span>' +
                                '</span>' +
                            '</div>' +
        '<div class="cs-at-apend-custom-exp-main">' +
        '<div class="cs-at-apend-custom-exp cs-inline cs-lmar">' +
        '<span class="cs-cur cs-ts-14 cs-textb cs-at-apend-custom-hover">{ }</span>' +
        '<div class="cs-at-apend-custom-exp-cont-main">' +
        '<div class="cs-at-apend-custom-exp-cont cs-pr"></div>' +
        '</div>' +
        '</div>' +
        '<span class="cs-at-apend-cus-exp-edit cs-cur">' +
        '<span class="cs-ts-18">{</span><i class="icon-cs-edit cs-ts-12"></i><span class="cs-ts-18">}</span>' +
        '</span>' +
        '</div>' +
        '</div>' +
        '<div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white cs-add-exp-blk">' +
        '<div class="clearfix cs-tr">               ' +
		'<span class="cs-cur cs-ts-14 cs-textb">{ }</i></span>' +
        '<div class="clearfix cs-inline">' +
        '<span class="cs-graylightc cs-rsmar">Custom Expression</span>' +
        '<label class="switch-toggle cs-lsmar">' +
        '<input type="checkbox" class="cs-cus-exp-tog">' +
        '<div class="slider-toggle round-toggle"></div>' +
        '</label>' +
        '</div>' +
        '<span class="cs-cur cs-con-exp-sav"> <i class="icon-cs-save"></i></span>' +
        '</div>' +
        '<div class="cs-textarea cs-pr cs-at-dd-expr-txtar">' +
		 '<div class="clearfix cs-tmar">' +
						'<span class="cs-rmar cs-exprbuilder cs-pr cs-cur cs-pull-right cs-tsmar" title="Edit Expression"><i class="icon-cs-expression-edit"></i></span>' +
						 '</div> ' +
        '<label for="expression">Expression</label>' +
        '<textarea placeholder="Enter Expression..."></textarea>' +
        '</div>' +
        '<div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">' +
        '<div class="cs-cell-7">' +
                        '<div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">' +
                            '<label>Left Expression</label>' +
                            '<span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>' +
                            '<input type="text" placeholder="Select Expression" class="cs-ab-textinput" />' +
                            '<div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">' +
                                '<img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">' +
                            '</div>' +
                        '</div>' +
                    '</div>' +
                    '<div class="cs-cell-7">' +
                        '<div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">' +
                            '<label>Operators</label>' +
                            '<input type="text" placeholder="Select Operators" class="cs-cond-opr" />' +
                        '</div>' +
                    '</div>' +
                    '<div class="cs-cell-7">' +
                        '<div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">' +
                            '<label>Right Expression</label>' +
                            '<span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>' +
                            '<input type="text" placeholder="Select Expression" class="cs-ab-textinput" />' +
                            '<div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">' +
                                '<img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">' +
                            '</div>' +
                        '</div>' +
                    '</div>' +
                    '<div class="cs-cell-3f">' +
                    '<span class="cs-remove-activity-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">' +
                                     '<i class="icon-cs-delete"></i>' +
                    '</span>' +
                    '<span class="cs-remove-activity-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">' +
                    '<i class="icon-cs-new"></i>' +
                    '</div>' +
    '</div>' +
    '</div>' +
    '<div class="cs-at-con-drop-area">';
    if (dataValue.conditionalActivityVO.playbackActivityVOs != undefined) {
        for(var i=0;i<dataValue.conditionalActivityVO.playbackActivityVOs.length;i++) {
            elseIfHtml += mainBuildHtml(dataValue.conditionalActivityVO.playbackActivityVOs[i]);
        }
    }
    elseIfHtml += '</div></div>';
    return elseIfHtml;
}
function buildElse(dataValue) {
    var elseHtml = "";
    //var displayName = dataValue.layoutActivityVO.layoutName;
    var setData = JSON.stringify(dataValue);
    setData = JSON.parse(setData);
    setData.conditionalActivityVO.playbackActivityVOs = [];
    setData = JSON.stringify(setData);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    elseHtml += '<div class="cs-at-con-endif cs-aparent cs-at-layoutcontroweach" setData=' + setData + '>' +
        '<div class="cs-at-con-drop-area">';
    if (dataValue.conditionalActivityVO.playbackActivityVOs != undefined) {
        for(var i=0;i<dataValue.conditionalActivityVO.playbackActivityVOs.length;i++) {
            elseHtml += mainBuildHtml(dataValue.conditionalActivityVO.playbackActivityVOs[i]);
        }
    }
    elseHtml += '</div></div>';
    return elseHtml;
}
function buildExplicit(dataValue){
    // layoutempty()

    var setData = JSON.stringify(dataValue);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    var explctHtml =  `<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-explicit-time_out cs-pr cs-pb-blk" setData=${setData}>
    <div class="cs-pa cs-activity-title cs-whitec cs-ts-10">Explicit Activity</div>
    <div class="cs-activity-icon cs-pa">
        <i class="icon-cs-time-zone"></i>
    </div>
    <span class="cs-remove-activity cs-pa cs-cur">
        <i class="icon-cs-delete"></i>
    </span>
    <div class="clearfix cs-pad cs-rmar cs-bmar cs-bg-white">
        <div class="clearfix cs-tr">
            <span class="cs-rmar cs-snapshot cs-pr cs-cur"><i class="icon-cs-camera"></i></span>
            <span class="cs-rmar cs-status cs-pr cs-cur"><i class="fa fa-line-chart"></i></span>
            <span class="cs-cur cs-ts-14 cs-textb">{ }</i></span>
            <div class="clearfix cs-inline"><span class="cs-graylightc cs-rsmar">Custom Expression</span><label class="switch-toggle cs-lsmar">
            <input type="checkbox" class="cs-cus-exp-tog">
            <div class="slider-toggle round-toggle"></div>
            </label>
            </div>
        </div>
        <div class="cs-at-dd-expr-txtar">
        <div class="cs-cell-12f">
                     <label for="expression">Expression</label>
                    <textarea placeholder="Enter Expression..."></textarea>
                     </div>
                     <div class=" cs-lmar cs-cell-11f">
                     <div class="cs-input cs-var-el-dd-click cs-operator explct-wait-section cs-rad-none">
                    
                    <label for="wait_tym">Wait time</label>   
                    <input type="text" class="wait_tym cs-custom-explct-exprs"value="" autocomplete="off">
                    </div>
                     </div>
                     </div>
        <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
            <div class="cs-cell-8">
                <div class="cs-input cs-var-el-dd-click explct-hide-var cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                    <label>Left Expression</label><span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Ele</span>
                    <input type="text" placeholder="Select Expression" disabled class="cs-ab-textinput cs-pe-none cs-cur">
                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                    </div>
                </div>
            </div>
            <div class="cs-cell-8">
                <div class="cs-input cs-var-el-dd-click cs-operator cs-explct-opertr cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                    <label>Operators</label>
                    <input type="text" class="cs-cur cs-pe-none" placeholder="Select Operators"/ disabled>
                </div>
            </div>
            <div class="cs-cell-8">
            <div class="cs-input cs-var-el-dd-click explct-wait-section cs-operator cs-rad-none">
            <label for="wait_tym">Wait time</label>
             <input type="text" class="wait_tym explct-right-expr" autocomplete="off">
             </div>
             </div>
        </div>
        
    </div>
</div>
    `;
    return explctHtml;
    
}
function buildFileAct(dataValue){
    // layoutempty()

    var setData = JSON.stringify(dataValue);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    var excelHtml = `<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-fileActivity cs-pr cs-pb-blk" setData=${setData}>
    <div class="cs-pa cs-activity-title cs-lmar cs-ts-12">File Activity</div>
    <div class="cs-activity-icon cs-pa">
    <i class="icon-cs-file-text-o"></i>
    </div>
    <span class="cs-remove-activity cs-pa cs-cur">
    <i class="icon-cs-delete"></i>
    </span>
    <div class="clearfix cs-tmar cs-rmar cs-bmar">
    <div class="clearfix">
    <div class="cs-cell-8">
    <div class="cs-input cs-fileactivity-inp cs-fileactivity-filetype">
    <label>File Type</label>
    <select>
        <option value="Read">Read</option>
        <option value="Write">Write</option>
    </select>
    </div>
    </div>
    <div class="cs-cell-8">
    <div class="cs-input cs-fileactivity-inp cs-fileactivity-source">
    <label>Source</label>
    <input type="text">
    </div>
    </div>
    <div class="cs-cell-8">
    <div class="cs-input cs-pr cs-fileactivity-inp cs-fileactivity-target">
    <label>Target (Data Table)</label>
    <input type="text">
    <span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>
    </div>
    </div>
    </div>
    </div>
    </div>`;
    return excelHtml;
    
}
function buildAddRow(dataValue){
    // layoutempty()

    var setData = JSON.stringify(dataValue);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    var addrowHtml = `<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-addRowSty cs-pr cs-pb-blk" setData=${setData}>`+
    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Add Row</div>' +
    '<div class="cs-activity-icon cs-pa">' +
    '<i class="icon-cs-create-row"></i>' +
    '</div>' +
    '<span class="cs-remove-activity cs-pa cs-cur">' +
    '<i class="icon-cs-delete"></i>' +
    '</span>' +
    '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
    '<div class="clearfix">' +
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-pr cs-addrow-inp cs-addrow-datatable">' +
        '<label>Target (Data Table)</label>' +
        '<input type="text">' +
        '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
        '</div>' +
        '</div>' +
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-addrow-inp cs-addrow-rowtype">' +
        '<label>Row Type</label>' +
        '<select class="addRowSelOpt">'+
        '<option value="select1">Array Row</option>'+
        '<option value="select2">Data Row</option>'+
        '</select>'+
        '</div>' +
        '</div>' +
        '<div class="cs-cell-8 cs-addrow-inp cs-add-row-login-inp">' +
        '<div class="cs-input cs-addrow-inp cs-addrow-exp">' +
        '<label>Enter Expression</label>' +
        '<input type="text">' +
        '</div>' +
        '</div>' +
    '</div>' +
    `<div class="cs-addrow-addrlist-par cs-tmar cs-hide">
        <div class="cs-lmar"><span class="cs-tw-600">Attribute List</span><span class="cs-lmar cs-badge cs-badge-info">18</span></div>
        <div class="cs-cell-24f cs-addname cs-tsmar">
            <div class="cs-cell-6f"><span class="cs-lmar">Add</span></div>
            <div class="cs-cell-3f">
                <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
            </div>
            <div class="cs-cell-8f"><span class="cs-inline cs-addrow-inp cs-addName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Variable"></span></div>
        </div>
        <div class="cs-cell-24f cs-sprintname cs-tsmar">
            <div class="cs-cell-6f"><span class="cs-lmar">Sprint Name</span></div>
            <div class="cs-cell-3f">
                <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
            </div>
            <div class="cs-cell-8f"><span class="cs-inline cs-addrow-inp cs-sprintName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Variable"></span></div>
        </div>
        <div class="cs-cell-24f cs-conectionname cs-tsmar">
            <div class="cs-cell-6f"><span class="cs-lmar">Connection Name</span></div>
            <div class="cs-cell-3f">
                <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
            </div>
            <div class="cs-cell-8f"><span class="cs-inline cs-addrow-inp cs-conectionName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Global Variable"></span></div>
        </div>
        <div class="cs-cell-24f cs-versionname cs-tsmar">
            <div class="cs-cell-6f"><span class="cs-lmar">Version Name</span></div>
            <div class="cs-cell-3f">
                <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
            </div>
            <div class="cs-cell-8f"><span class="cs-inline cs-addrow-inp cs-versionName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Variable"></span></div>
        </div>
    </div>`+
    '</div>' +
    '</div>';
    return addrowHtml;
    
}
function buildRemRow(dataValue){
    // layoutempty()

    var setData = JSON.stringify(dataValue);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    var remrowHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-remRowSty cs-pr cs-pb-blk" setData='+setData+'>' +
    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Remove Row</div>' +
    '<div class="cs-activity-icon cs-pa">' +
    '<i class="icon-cs-remove-row"></i>' +
    '</div>' +
    '<span class="cs-remove-activity cs-pa cs-cur">' +
    '<i class="icon-cs-delete"></i>' +
    '</span>' +
    '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
    '<div class="clearfix cs-remcon-par">' +
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-pr cs-remrow-inp cs-datatable">' +
        '<label>Data Table</label>' +
        '<input type="text" >' +
        '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
        '</div>' +
        '</div>' +
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-remrow-inp cs-rowtype">' +
        '<label>Row Type</label>' +
        '<select id="remRowSelOpt">'+
        '<option value="select1">Row Index</option>'+
        '<option value="select2">Row</option>'+
        '</select>'+
        '</div>' +
        '</div>' +
        '<div class="cs-cell-8 cs-rem-row-login-inp">' +
        '<div class="cs-input cs-remrow-inp cs-rowindval">' +
        '<label>Row Index Value</label>' +
        '<input type="text" >' +
        '</div>' +
        '</div>' +
    '</div>' +
    `<div class="cs-remrow-addrlist-par cs-tmar cs-hide">
        <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
                            <div class="cs-cell-7">
                                <div class="cs-input cs-remrow-inp cs-left-expr cs-var-el-dd-click" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                    <label>Attribute Name</label>
                                    <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                    <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                    </div>
                                </div>
                            </div>
                            <div class="cs-cell-7">
                                <div class="cs-input cs-remrow-inp cs-operator cs-var-el-dd-click cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                    <label>Operators</label>
                                    <input type="text" placeholder="Select Operators" class="cs-cond-opr cs-pe-none cs-cur">
                                </div>
                            </div>
                            <div class="cs-cell-7">
                                <div class="cs-input cs-remrow-inp cs-right-expr cs-var-el-dd-click" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                    <label>Attribute Value</label>
                                    <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                    <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                    </div>
                                </div>
                            </div>
                            <div class="cs-cell-3f">
                            <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                            <i class="icon-cs-delete"></i>
                            </span>
                            <span class="cs-remove-activity-datatable-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                            <i class="icon-cs-new"></i></span>
                            </div>
        </div>
    </div>`+
    '</div>' +
    '</div>';
    return remrowHtml;
    
}
function buildFilRow(dataValue){
    // layoutempty()

    var setData = JSON.stringify(dataValue);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    var filrowHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-filRowSty cs-pr cs-pb-blk" setData='+setData+'>' +
    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Filter Row</div>' +
    '<div class="cs-activity-icon cs-pa">' +
    '<i class="icon-cs-filter-row"></i>' +
    '</div>' +
    '<span class="cs-remove-activity cs-pa cs-cur">' +
    '<i class="icon-cs-delete"></i>' +
    '</span>' +
    '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
    '<div class="clearfix">' +
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-pr cs-filrow-inp cs-datatable">' +
        '<label>Data Table</label>' +
        '<input type="text" >' +
        '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
        '</div>' +
        '</div>' +
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-filrow-inp cs-rowtype">' +
        '<label>Row Type</label>' +
        '<select id="filRowSelOpt">'+
        '<option value="select1">By Value</option>'+
        '<option value="select2">By Condition</option>'+
        '</select>'+
        '</div>' +
        '</div>' +
        '<div class="cs-cell-8 cs-fil-row-login-inp">' +
        '<div class="cs-input cs-filrow-inp cs-rowindexval">' +
        '<label>Row Index Value</label>' +
        '<input type="text" >' +
        '</div>' +
        '</div>' +
    '</div>' +
    `<div class="cs-fil-row-con">
    <div class="cs-at-dd-exprs">
      
    </div>
    <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
                      <div class="cs-cell-7">
                          <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                              <label>Attribute Name</label>
                              <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                              <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                              <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                  <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                              </div>
                          </div>
                      </div>
                      <div class="cs-cell-7">
                          <div class="cs-input cs-var-el-dd-click cs-operator" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                              <label>Operators</label>
                              <input type="text" placeholder="Select Operators" value="=" class="cs-cond-opr cs-pe-none cs-cur">
                          </div>
                      </div>
                      <div class="cs-cell-7">
                          <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                              <label>Attribute Value</label>
                              <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                              <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                              <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                  <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                              </div>
                          </div>
                      </div>
                      <div class="cs-cell-3f">
                      <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                      <i class="icon-cs-delete"></i>
                      </span>
                      <span class="cs-remove-activity-datatable-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                      <i class="icon-cs-new"></i></span>
                      </div>
    
                      
    </div>
    </div>
    `+
    `<div class="cs-filrow-addrlist-par cs-tmar cs-hide">
        <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
                            <div class="cs-cell-7">
                                <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                    <label>Attribute Name</label>
                                    <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                    <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                    </div>
                                </div>
                            </div>
                            <div class="cs-cell-7">
                                <div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                    <label>Operators</label>
                                    <input type="text" placeholder="Select Operators" class="cs-cond-opr cs-pe-none cs-cur">
                                </div>
                            </div>
                            <div class="cs-cell-7">
                                <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                    <label>Attribute Value</label>
                                    <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                    <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                    </div>
                                </div>
                            </div>
                            <div class="cs-cell-3f">
                            <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                            <i class="icon-cs-delete"></i>
                            </span>
                            <span class="cs-remove-activity-datatable-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                            <i class="icon-cs-new"></i></span>
                            </div>
        </div>
    </div>`+
    '</div>' +
    '</div>';
    return filrowHtml;
    
}
function buildMerge(dataValue){
    // layoutempty()

    var setData = JSON.stringify(dataValue);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    var mergerowHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-mergeRowSty cs-pr cs-pb-blk" setData='+setData+'>' +
    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Merge Data Table</div>' +
    '<div class="cs-activity-icon cs-pa">' +
    '<i class="icon-cs-merge-table"></i>' +
    '</div>' +
    '<span class="cs-remove-activity cs-pa cs-cur">' +
    '<i class="icon-cs-delete"></i>' +
    '</span>' +
    '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
    '<div class="clearfix">' +
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-pr cs-mergerow-inp cs-destinaion">' +
        '<label>Destination</label>' +
        '<input type="text" >' +
        '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
        '</div>' +
        '</div>' +
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-pr cs-mergerow-inp cs-source">' +
        '<label>Source</label>' +
        '<input type="text" >' +
        '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
        '</div>' +
        '</div>' +
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-login-inp cs-login-username">' +
        '<label>Allow Duplicate</label>' +
        `
        <div class="cs-flex cs-column-middle cs-row-between">
                <label class="switch-toggle cs-lsmar">
                    <input type="checkbox" class="cs-merge-inp" id="playbackIsactive">
                    <div class="slider-toggle round-toggle"></div>
                </label>
                <div>
                <a href="#" class="cs-7x-radius cs-btn cs-btn-primary cs-btn-xs cs-pb-mapp-clk">Mapping</a>
                </div>
        </div>
        `+
        '</div>' +
        '</div>' +
    '</div>' +
    `<div class="cs-mergerow-addrlist-par cs-tmar cs-hide">
        <div class="cs-cell-24f">
            <div class="cs-cell-6f cs-dest-attr-par">
                <div class="cs-pad cs-head-clr cs-rline">Destination Attributes</div>
                <div class="cs-rline cs-lline cs-bline">
                    <div class="cs-pad cs-pr"><input type="text" name="Sprint Name" placeholder="Destination Attributes"><a href="#" class="cs-pa cs-r-5"><i class="icon-cs-search cs-ts-12"></i></a></div>
                    <div class="cs-list cs-pr cs-scroll-2">
                    </div>
                </div>
            </div>
            <div class="cs-cell-6f cs-pr cs-sour-attr-par">
                <span class="cs-center cs-circle cs-merge-mapper-ic-pos cs-pa cs-cur"><em class="icon-cs-mapper"></em></span>
                <div class="cs-pad cs-head-clr cs-rline">Source Attributes</div>
                <div class="cs-rline cs-bline">
                    <div class="cs-pad cs-pr"><input type="text" name="Sprint Name" placeholder="Source Attributes"><a href="#" class="cs-pa cs-r-5"><i class="icon-cs-search cs-ts-12"></i></a></div>
                    <div class="cs-list cs-pr cs-scroll-2">
                    </div>
                </div>
            </div>
            <div class="cs-cell-12f cs-mapp-attr-par">
                <div class="cs-pad cs-head-clr cs-rline">Mapped Attributes</div>
                <div class="cs-rline cs-bline">
                    <div class="cs-pad cs-pr"><input type="text" name="Sprint Name" placeholder="Mapped Attributes"><a href="#" class="cs-pa cs-r-5"><i class="icon-cs-search cs-ts-12"></i></a></div>
                    <div class="cs-list cs-pr cs-scroll-2">
                    </div>
                </div>
            </div>
        </div>
    </div>`+
    '</div>' +
    '</div>';
    return mergerowHtml;
    
}
function buildUptRow(dataValue){
    // layoutempty()

    var setData = JSON.stringify(dataValue);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    var uptrowHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-uptRowSty cs-pr cs-pb-blk" setData='+setData+'>' +
    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Update Row</div>' +
    '<div class="cs-activity-icon cs-pa">' +
    '<i class="icon-cs-update-row"></i>' +
    '</div>' +
    '<span class="cs-remove-activity cs-pa cs-cur">' +
    '<i class="icon-cs-delete"></i>' +
    '</span>' +
    '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
    '<div class="clearfix">' +
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-pr cs-uptrow-inp cs-datatable">' +
        '<label>Data Table</label>' +
        '<input type="text">' +
        '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
        '</div>' +
        '</div>' +
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-uptrow-inp cs-rowtype">' +
        '<label>Row Type</label>' +
        '<select id="uptRowSelOpt">'+
        '<option value="select1">Array Row</option>'+
        '<option value="select2">Data Row</option>'+
        '</select>'+
        '</div>' +
        '</div>' +
        '<div class="cs-cell-8 cs-upt-row-login-inp">' +
        '<div class="cs-input cs-uptrow-inp cs-expression">' +
        '<label>Enter Expression</label>' +
        '<input type="text" >' +
        '</div>' +
        '</div>' +
    '</div>' +
    `<div class="cs-row-con-par">
                    <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
                                      <div class="cs-cell-7">
                                          <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                              <label>Attribute Name</label>
                                              <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                              <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                              <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                  <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                              </div>
                                          </div>
                                      </div>
                                      <div class="cs-cell-7">
                                          <div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                              <label>Operators</label>
                                              <input type="text" placeholder="Select Operators" class="cs-cond-opr cs-pe-none cs-cur">
                                          </div>
                                      </div>
                                      <div class="cs-cell-7">
                                          <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                              <label>Attribute Value</label>
                                              <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                              <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                              <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                  <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                              </div>
                                          </div>
                                      </div>
                                      <div class="cs-cell-3f">
                                      <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                                      <i class="icon-cs-delete"></i>
                                      </span>
                                      <span class="cs-remove-activity-datatable-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                      <i class="icon-cs-new"></i></span>
                                      </div>
                    
                                      
                    </div>
                    </div>`+
    `<div class="cs-uptrow-addrlist-par cs-tmar cs-hide">
        <div class="cs-uptrow-exprs">
        <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">
                            <div class="cs-cell-7">
                                <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                    <label>Attribute Name</label>
                                    <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                    <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                    </div>
                                </div>
                            </div>
                            <div class="cs-cell-7">
                                <div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                    <label>Operators</label>
                                    <input type="text" placeholder="Select Operators" class="cs-cond-opr cs-pe-none cs-cur">
                                </div>
                            </div>
                            <div class="cs-cell-7">
                                <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                    <label>Attribute Value</label>
                                    <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                    <input type="text" placeholder="Select Expression" class="cs-ab-textinput cs-pe-none cs-cur">
                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                    </div>
                                </div>
                            </div>
                            <div class="cs-cell-3f">
                            <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                            <i class="icon-cs-delete"></i>
                            </span>
                            <span class="cs-remove-activity-datatable-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                            <i class="icon-cs-new"></i></span>
                            </div>

                            
        </div>
        </div>
        <div class="cs-cell-24f cs-upt-attr-par cs-tline">
                            <div class="cs-tmar">
                                    <div class="cs-lmar"><span class="cs-tw-600">Attribute List</span><span class="cs-lmar cs-badge cs-badge-info">18</span></div>
                                    <div class="cs-cell-24f cs-tsmar cs-upt-addName">
                                        <div class="cs-cell-6f"><span class="cs-lmar">Add</span></div>
                                        <div class="cs-cell-3f">
                                            <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
                                        </div>
                                        <div class="cs-cell-8f"><span class="cs-inline cs-uptrow-inp cs-addName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Variable"></span></div>
                                    </div>
                                    <div class="cs-cell-24f cs-tsmar cs-upt-sprintName">
                                        <div class="cs-cell-6f"><span class="cs-lmar">Sprint Name</span></div>
                                        <div class="cs-cell-3f">
                                            <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
                                        </div>
                                        <div class="cs-cell-8f"><span class="cs-inline cs-uptrow-inp cs-sprintName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Variable"></span></div>
                                    </div>
                                    <div class="cs-cell-24f cs-tsmar cs-upt-connectionName">
                                        <div class="cs-cell-6f"><span class="cs-lmar">Connection Name</span></div>
                                        <div class="cs-cell-3f">
                                            <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
                                        </div>
                                        <div class="cs-cell-8f"><span class="cs-inline cs-uptrow-inp cs-conectionName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Global Variable"></span></div>
                                    </div>
                                    <div class="cs-cell-24f cs-tsmar cs-upt-versionName">
                                        <div class="cs-cell-6f"><span class="cs-lmar">Version Name</span></div>
                                        <div class="cs-cell-3f">
                                            <div class="cs-pull-left cs-cur cs-vt-align cs-ts-12 cs-hmar cs-bspad cs-cdx-exp-click cs-at-ele-inp-typclk" data-cs-dropdown="#cs-at-condexpresselectndroplist"><span class="cs-label cs-ts-10 cs-label-warning">Var</span><span class="cs-inline cs-lsmar"><i class="icon-cs-caret-down cs-ts-8"></i></span></div>
                                        </div>
                                        <div class="cs-cell-8f"><span class="cs-inline cs-uptrow-inp cs-versionName"><input type="text" name="expressionValue" class="cs-inline" placeholder="Select The Variable"></span></div>
                                    </div>
                                </div>
                            </div>
    </div>`+
    '</div>' +
    '</div>';
    return uptrowHtml;
    
}
function buildEachRow(dataValue){
    // layoutempty()

    var setData = JSON.stringify(dataValue);
    for (i = 0; i < setData.length; i++) {
        setData = setData.replace(" ", "12344321");
        setData = setData.replace(">", "43211234");
    }
    var eachrowHtml = '<div class="clearfix cs-activityBlock cs-at-layoutcontroweach cs-eachRowSty cs-pr cs-pb-blk" setData='+setData+'>' +
    '<div class="cs-pa cs-activity-title cs-lmar cs-ts-12">Each Row</div>' +
    '<div class="cs-activity-icon cs-pa">' +
    '<i class="icon-cs-each-row"></i>' +
    '</div>' +
    '<span class="cs-remove-activity cs-pa cs-cur">' +
    '<i class="icon-cs-delete"></i>' +
    '</span>' +
    '<div class="clearfix cs-tmar cs-rmar cs-bmar">' +
    '<div class="clearfix">' +
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-eachrow-inp cs-foreach">' +
        '<label>For Each</label>' +
        '<input type="text" value="Current Row">' +
        '</div>' +
        '</div>' +
        '<div class="cs-cell-8">' +
        '<div class="cs-input cs-pr cs-eachrow-inp cs-in">' +
        '<label>In</label>' +
        '<input type="text" value="Extracted Data Table">' +
        '<span class="cs-pa cs-r-5 cs-fileactivity-form-ser-pos cs-cur"><em class="icon-cs-search cs-graylightc cs-ts-10"></em></span>'+
        '</div>' +
        '</div>' +
        '<div class="cs-cell-24f">' +
            '<div class="cs-pad cs-bg-bdy-clr">Body</div>'+
            '<div class="cs-each-drop-area cs-line cs-pad-sm">';

            if (dataValue.EachRowActivityVo.playbackActivityVOs != undefined) {
                for(var i=0;i<dataValue.EachRowActivityVo.playbackActivityVOs.length;i++) {
                    eachrowHtml += mainBuildHtml(dataValue.EachRowActivityVo.playbackActivityVOs[i]);
                }
            }
            eachrowHtml += '</div>'+
            '</div>' +
            '</div>' +
            '</div>' +
            '</div>';
    return eachrowHtml;
    
}
function fetchJson(jsonPath) {
    $.getJSON(jsonPath, function(data) {
        var getFullData = $(".cs-pb-ly-droparea").data("playBackOverall");
        console.log(data);
        getFullData.displayName = data.displayName;
        getFullData.description = data.description;
        getFullData.isActive = data.isActive;
        getFullData.versioningName = data.versioningName;
        getFullData.applicationName = data.applicationName;
        if (getFullData.isActive == "Y") {
            $("#playbackIsactive").prop("checked", true);
        } else {
            $("#playbackIsactive").prop("checked", false);
        }
        $("#description3").val(data.description);
        $("#playback-name-inpt").val(data.versioningName);
        $("#display-name-inpt").val(data.displayName);
        $(".cs-at-pb-appliactionname-main li").each(function() {
            if ($(this).find(".cs-at-pb-apname").text() == data.applicationName) {
                $(this).trigger("click");
            }
        });
        $(".cs-at-cr-parent-sav").trigger("click");
        //$(".cs-pb-create-board .cs-at-box .cs-pb-ly-droparea").html("");
        setTimeout(function(){
            var y = [];
            for(var i=0;i<data.playbackActivityVOs.length;i++) {
                y.push(mainBuildHtml(data.playbackActivityVOs[i]));
                //$(".cs-pb-create-board .cs-at-box .cs-pb-ly-droparea").append(y.join(''));
            }
            document.getElementById("dropArea").innerHTML=y.join('');
            recallTooltip();
        },0);
        // Data Fetch
        setTimeout(function(){
            layoutempty();
            $(".cs-at-layoutcontroweach").each(function() {
                console.log($(this));
                var getDataString = $(this).attr("setData");
                console.log(getDataString);
                for (i = 0; i < getDataString.length; i++) {
                    getDataString = getDataString.replace("12344321", " ");
                    getDataString = getDataString.replace("43211234", ">");
                }
                var getData = JSON.parse(getDataString);
                $(this).data("eachActivityVO", getData);
                $(this).removeAttr("setData");
            });
            $(".cs-at-layoutcontroweach").each(function() {

                if ($(this).hasClass("cs-layout-container")) {
                    $(this).data("eachActivityVO").layoutActivityVO.playbackActivityVOs = [];
                } 
                else if ($(this).hasClass("cs-iterationActivity")) {
                    $(this).data("eachActivityVO").iterationActivityVO.playbackActivityVOs = [];
                    var getCountType = $(this).data("eachActivityVO").iterationActivityVO.iterationCountType;
                    var getCountValue = $(this).data("eachActivityVO").iterationActivityVO.iterationCountValue;
                    
                    $(this).find(">.cs-remove-activity").next("div").find(".cs-cdx-exp-click").trigger("click");
                    $("#cs-at-condexpresselectndroplist .cs-cndx-exp-list-each").each(function() {
                        if ($(this).find(".cs-cndx-exp-list-atr").next("span").text() == getCountType) {
                            $(this).trigger("click");
                        }
                    });
                    if ($(this).find(">.cs-remove-activity").next("div").find(".cs-ite-dd-clk >span.cs-label").text() == "Var") {
                        $(this).find(">.cs-remove-activity").next("div").find(".cs-at-contentEntryinput").each(function() {
                            if($(this).attr("data-contentvalue")=="Var") {
                              $(this).find("input").val(getCountValue);
                            }
                        });
                    }
                    else if ($(this).find(">.cs-remove-activity").next("div").find(".cs-ite-dd-clk >span.cs-label").text() == "Con") {
                        $(this).find(">.cs-remove-activity").next("div").find(".cs-at-contentEntryinput").each(function() {
                            if($(this).attr("data-contentvalue")=="Con") {
                              $(this).find("input").val(getCountValue);
                            }
                        });
                    }
                    else if ($(this).find(">.cs-remove-activity").next("div").find(".cs-ite-dd-clk >span.cs-label").text() == "Lar") {
                        $(this).find(">.cs-remove-activity").next("div").find(".cs-at-contentEntryinput").each(function() {
                            if($(this).attr("data-contentvalue")=="Lar") {
                              $(this).find("input").val(getCountValue);
                            }
                        });
                    }
                    else if ( getCountType== "Image") {
                        $(this).find('.cs-ab-imgappend-list img').attr('src' ,getCountValue )
                    }
                } 
                else if ($(this).hasClass("cs-DataTable")) {
                    $(this).data("eachActivityVO").dataTableActivityVo.playbackActivityVOs = [];
                } 
                else if ($(this).hasClass("cs-excel-auto-act-child")) {
                    $(this).data("eachActivityVO").excelAutomationActivityVo.playbackActivityVOs = [];
                }
                else if ($(this).hasClass("cs-excel-act-child")) {
                    var selectFileLocationVal =  $(this).data("eachActivityVO").excelSubActivityVo.selectFileLocation;
                    var referencesNameVal =  $(this).data("eachActivityVO").excelSubActivityVo.referencesName;
                    var createIfNotExistsVal =  $(this).data("eachActivityVO").excelSubActivityVo.createIfNotExists;
                    var saveChangesVal =  $(this).data("eachActivityVO").excelSubActivityVo.saveChanges;

                    $(this).find('.cs-excel-act-file-loc .cs-exc-sel-file-loc-val').val(selectFileLocationVal);
                    $(this).find('.cs-excel-act-refname input').val(referencesNameVal);
                    if (createIfNotExistsVal == "Y") {
                        $(this).find(".cs-excel-act-clearIne").prop("checked","true");
                    }
                    if (saveChangesVal == "Y") {
                        $(this).find(".cs-excel-act-saveChange").prop("checked","true");
                    }
                   
                }
                else if ($(this).hasClass("cs-excel-manipulation-child")) {
                    var grpNameVal = $(this).data("eachActivityVO").excelManupulationActivityVo.manupulationGroupText;
                    var grpOptionVal = "";
                    if(grpNameVal == "Append Range"){
                        grpOptionVal = `
                            <option value="select1">Append Range</option>
                            <option value="select2">Clear Sheet/Range/Table</option>
                            <option value="select3">Copy/Paste Range</option>
                            <option value="select4">Fill Range</option>
                            <option value="select5">Find/Replace Value</option>
                        `;
                        $(this).find(".cs-manupulation-common").addClass("cs-hide");
                        $(this).find(".cs-man-append-range-par").removeClass("cs-hide");
                    }
                    else if(grpNameVal == "Clear Sheet/Range/Table"){
                        grpOptionVal =`
                            <option value="select2">Clear Sheet/Range/Table</option>
                            <option value="select1">Append Range</option>
                            <option value="select3">Copy/Paste Range</option>
                            <option value="select4">Fill Range</option>
                            <option value="select5">Find/Replace Value</option>
                        `;
                        $(this).find(".cs-manupulation-common").addClass("cs-hide");
                        $(this).find(".cs-man-clear-sheetrange-par").removeClass("cs-hide");
                    }
                    else if(grpNameVal == "Copy/Paste Range"){
                        grpOptionVal =`
                            <option value="select3">Copy/Paste Range</option>
                            <option value="select1">Append Range</option>
                            <option value="select2">Clear Sheet/Range/Table</option>
                            <option value="select4">Fill Range</option>
                            <option value="select5">Find/Replace Value</option>
                        `;
                        $(this).find(".cs-manupulation-common").addClass("cs-hide");
                        $(this).find(".cs-man-copypaste-range-par").removeClass("cs-hide");
                    }
                    else if(grpNameVal == "Fill Range"){
                        grpOptionVal =`
                            <option value="select4">Fill Range</option>
                            <option value="select1">Append Range</option>
                            <option value="select2">Clear Sheet/Range/Table</option>
                            <option value="select3">Copy/Paste Range</option>
                            <option value="select5">Find/Replace Value</option>
                        `;
                        $(this).find(".cs-manupulation-common").addClass("cs-hide");
                        $(this).find(".cs-man-fillrange-par").removeClass("cs-hide");
                    }
                    else if(grpNameVal == "Find/Replace Value"){
                        grpOptionVal =`
                            <option value="select5">Find/Replace Value</option>
                            <option value="select1">Append Range</option>
                            <option value="select2">Clear Sheet/Range/Table</option>
                            <option value="select3">Copy/Paste Range</option>
                            <option value="select4">Fill Range</option>
                        `;
                        $(this).find(".cs-manupulation-common").addClass("cs-hide");
                        $(this).find(".cs-man-findreplace-par").removeClass("cs-hide");
                    }
                    $(this).find(".manupulationGroup").html("");
                    $(this).find(".manupulationGroup").prepend(grpOptionVal);
                    $(this).find(".manupulationGroup").find("option:selected").text(grpNameVal);
                    
                    var excelRangeToAppendVal = $(this).data("eachActivityVO").excelManupulationActivityVo.appendRange[0].excelRangeToAppend;
                    var appendAfterRangeVal = $(this).data("eachActivityVO").excelManupulationActivityVo.appendRange[0].appendAfterRange;
                    var whatToCopyVal = $(this).data("eachActivityVO").excelManupulationActivityVo.appendRange[0].whatToCopy;
                    var whatToCopyHtmlVal = "";
                    if(whatToCopyVal == "All"){
                        whatToCopyHtmlVal = `
                            <option value="All">All</option>
                            <option value="Values">Values</option>
                            <option value="Formula">Formula</option>
                            <option value="Format">Format</option>
                        `;
                    }
                    else if(whatToCopyVal == "Values"){
                        whatToCopyHtmlVal = `
                            <option value="Values">Values</option>
                            <option value="All">All</option>
                            <option value="Formula">Formula</option>
                            <option value="Format">Format</option>
                        `;
                    }
                    else if(whatToCopyVal == "Formula"){
                        whatToCopyHtmlVal = `
                            <option value="Formula">Formula</option>
                            <option value="All">All</option>
                            <option value="Values">Values</option>
                            <option value="Format">Format</option>
                        `;
                    }
                    else if(whatToCopyVal == "Format"){
                        whatToCopyHtmlVal = `
                            <option value="Format">Format</option>
                            <option value="All">All</option>
                            <option value="Values">Values</option>
                            <option value="Formula">Formula</option>
                        `;
                    }
                    $(this).find(".cs-man-append-what-copy select").html("");
                    $(this).find(".cs-man-append-what-copy select").append(whatToCopyHtmlVal);
                    var excludeHeaderVal = $(this).data("eachActivityVO").excelManupulationActivityVo.appendRange[0].excludeHeader;
                    var transposeVal = $(this).data("eachActivityVO").excelManupulationActivityVo.appendRange[0].transpose;
                    $(this).find('.cs-man-append-exc-range input').val(excelRangeToAppendVal);
                    $(this).find('.cs-man-append-after-range input').val(appendAfterRangeVal);
                    $(this).find(".cs-man-append-what-copy select").find("option:selected").text(whatToCopyVal);
                    if (excludeHeaderVal == "Y") {
                        $(this).find(".cs-man-append-exclude-header").prop("checked","true");
                    }
                    if (transposeVal == "Y") {
                        $(this).find(".cs-man-append-transpose").prop("checked","true");
                    }

                    var rangeToClearVal = $(this).data("eachActivityVO").excelManupulationActivityVo.clearSheetRange[0].rangeToClear;
                    var hasHeadersVal = $(this).data("eachActivityVO").excelManupulationActivityVo.clearSheetRange[0].hasHeaders;
                    $(this).find('.cs-man-sheetrange-clear input').val(rangeToClearVal);
                    if (hasHeadersVal == "Y") {
                        $(this).find(".cs-man-sheetrange-headers").prop("checked","true");
                    }

                    var destinatioCellVal = $(this).data("eachActivityVO").excelManupulationActivityVo.copyPasteRange[0].destinatioCell;
                    var destinationSheetVal = $(this).data("eachActivityVO").excelManupulationActivityVo.copyPasteRange[0].destinationSheet;
                    var sheetNameVal = $(this).data("eachActivityVO").excelManupulationActivityVo.copyPasteRange[0].sheetName;
                    var sheetRangeVal = $(this).data("eachActivityVO").excelManupulationActivityVo.copyPasteRange[0].sheetRange;
                    var copyItemsVal = $(this).data("eachActivityVO").excelManupulationActivityVo.copyPasteRange[0].copyItems;
                    var copyItemsTextVal = "";
                    if(copyItemsVal == "All"){
                        copyItemsTextVal = `
                            <option value="All">All</option>
                            <option value="Values">Values</option>
                            <option value="Formula">Formula</option>
                            <option value="Number format">Number format</option>
                            <option value="Cell Format">Cell Format</option>
                        `;
                    }
                    else if(copyItemsVal == "Values"){
                        copyItemsTextVal = `
                            <option value="Values">Values</option>
                            <option value="All">All</option>
                            <option value="Formula">Formula</option>
                            <option value="Number format">Number format</option>
                            <option value="Cell Format">Cell Format</option>
                        `;
                    }
                    else if(copyItemsVal == "Formula"){
                        copyItemsTextVal = `
                            <option value="Formula">Formula</option>
                            <option value="All">All</option>
                            <option value="Values">Values</option>
                            <option value="Number format">Number format</option>
                            <option value="Cell Format">Cell Format</option>
                        `;
                    }
                    else if(copyItemsVal == "Number format"){
                        copyItemsTextVal = `
                            <option value="Number format">Number format</option>
                            <option value="All">All</option>
                            <option value="Values">Values</option>
                            <option value="Formula">Formula</option>
                            <option value="Cell Format">Cell Format</option>
                        `;
                    }
                    else if(copyItemsVal == "Cell Format"){
                        copyItemsTextVal = `
                            <option value="Cell Format">Cell Format</option>
                            <option value="All">All</option>
                            <option value="Values">Values</option>
                            <option value="Formula">Formula</option>
                            <option value="Number format">Number format</option>
                        `;
                    }
                    $(this).find(".cs-man-copypaste-what-copy select").html("");
                    $(this).find(".cs-man-copypaste-what-copy select").append(copyItemsTextVal);
                    $(this).find('.cs-man-copypaste-destcell input').val(destinatioCellVal);
                    $(this).find('.cs-man-copypaste-destsheet input').val(destinationSheetVal);
                    $(this).find('.cs-man-copypaste-destsheetname input').val(sheetNameVal);
                    $(this).find('.cs-man-copypaste-destsheetrange input').val(sheetRangeVal);
                    $(this).find('.cs-man-copypaste-what-copy select').find("option:selected").text(copyItemsVal);
                    
                    var whereToWriteVal = $(this).data("eachActivityVO").excelManupulationActivityVo.fillRange[0].whereToWrite;
                    var whatToWriteVal = $(this).data("eachActivityVO").excelManupulationActivityVo.fillRange[0].whatToWrite;
                    $(this).find('.cs-man-fillrange-wheretowri input').val(whereToWriteVal);
                    $(this).find('.cs-man-fillrange-whattowri input').val(whatToWriteVal);

                    var operationVal = $(this).data("eachActivityVO").excelManupulationActivityVo.findReplaceRange[0].operation;
                    var operationTextVal = "";
                    if(operationVal == "Find"){
                        operationTextVal = `
                            <option value="Find">Find</option>
                            <option value="Replace">Replace</option>
                            <option value="Replace all">Replace all</option>
                        `;
                    }
                    else if(operationVal == "Replace"){
                        operationTextVal = `
                            <option value="Replace">Replace</option>
                            <option value="Find">Find</option>
                            <option value="Replace all">Replace all</option>
                        `;
                    }
                    else if(operationVal == "Replace all"){
                        operationTextVal = `
                            <option value="Replace all">Replace all</option>
                            <option value="Find">Find</option>
                            <option value="Replace">Replace</option>
                        `;
                    }
                    $(this).find(".cs-man-findreplace-opr select").html("");
                    $(this).find(".cs-man-findreplace-opr select").append(operationTextVal);
                    var whereTosearchVal = $(this).data("eachActivityVO").excelManupulationActivityVo.findReplaceRange[0].whereTosearch;
                    var valueToFindVal = $(this).data("eachActivityVO").excelManupulationActivityVo.findReplaceRange[0].valueToFind;
                    var replaceWithVal = $(this).data("eachActivityVO").excelManupulationActivityVo.findReplaceRange[0].replaceWith;
                    var foundAtVal = $(this).data("eachActivityVO").excelManupulationActivityVo.findReplaceRange[0].foundAt;
                    $(this).find('.cs-man-findreplace-opr select').find("option:selected").text(operationVal);
                    $(this).find('.cs-man-findreplace-wheretoser input').val(whereTosearchVal);
                    $(this).find('.cs-man-findreplace-valuetofin input').val(valueToFindVal);
                    $(this).find('.cs-man-findreplace-repwith input').val(replaceWithVal);
                    $(this).find('.cs-man-findreplace-foundat input').val(foundAtVal);
                }
                else if ($(this).hasClass("cs-excel-advanced-act-child")) {
                    var grpNameVal = $(this).data("eachActivityVO").excelAdvancedActivityVo.advancedGroupText;
                    var grpOptionVal = "";
                    if(grpNameVal == "Create Pivot Table"){
                        grpOptionVal = `
                            <option value="select1">Create Pivot Table</option>
                            <option value="select2">Lookup</option>
                            <option value="select3">Run Spreadsheet Macro</option>
                            <option value="select4">Invoke VBA</option>
                        `;
                        $(this).find(".cs-Advanced-common").addClass("cs-hide");
                        $(this).find(".cs-advanced-creatr-pivot-par").removeClass("cs-hide");
                    }
                    else if(grpNameVal == "Lookup"){
                        grpOptionVal =`
                            <option value="select2">Lookup</option>
                            <option value="select1">Create Pivot Table</option>
                            <option value="select3">Run Spreadsheet Macro</option>
                            <option value="select4">Invoke VBA</option>
                        `;
                        $(this).find(".cs-Advanced-common").addClass("cs-hide");
                        $(this).find(".cs-advanced-Lookup-par").removeClass("cs-hide");
                    }
                    else if(grpNameVal == "Run Spreadsheet Macro"){
                        grpOptionVal =`
                            <option value="select3">Run Spreadsheet Macro</option>
                            <option value="select1">Create Pivot Table</option>
                            <option value="select2">Lookup</option>
                            <option value="select4">Invoke VBA</option>
                        `;
                        $(this).find(".cs-Advanced-common").addClass("cs-hide");
                        $(this).find(".cs-advanced-runspreadsheetmacro-par").removeClass("cs-hide");
                    }
                    else if(grpNameVal == "Invoke VBA"){
                        grpOptionVal =`
                            <option value="select4">Invoke VBA</option>
                            <option value="select1">Create Pivot Table</option>
                            <option value="select2">Lookup</option>
                            <option value="select3">Run Spreadsheet Macro</option>
                        `;
                        $(this).find(".cs-Advanced-common").addClass("cs-hide");
                        $(this).find(".cs-advanced-InvokeVBA-par").removeClass("cs-hide");
                    }
                    $(this).find(".advancedGroup").html("");
                    $(this).find(".advancedGroup").prepend(grpOptionVal);
                    $(this).find(".advancedGroup").find("option:selected").text(grpNameVal);
                    
                    var advActPivotsource = $(this).data("eachActivityVO").excelAdvancedActivityVo.createPivotTable[0].source;
                    var advActPivotnewtable = $(this).data("eachActivityVO").excelAdvancedActivityVo.createPivotTable[0].newtable;
                    var advActPivotdestination = $(this).data("eachActivityVO").excelAdvancedActivityVo.createPivotTable[0].destination;
                    var This = $(this);
                    $(this).find(".cs-advanced-pivotField-par").html("");   
                    $.each($(this).data("eachActivityVO").excelAdvancedActivityVo.createPivotTable[0].pivot, function(ind, val) {
                            var pivotHtml = `
                                <div class="cs-advanced-pivotField-list cs-cell-24f">
                                    <div class="cs-cell-8">
                                        <div class="cs-input cs-advanced-Field">
                                        <label>Field</label><input type="text" value="${val.field}">
                                    </div>
                                    </div>
                                    <div class="cs-cell-8">
                                        <div class="cs-input cs-advanced-Isa">
                                        <label>Is a</label>
                                        <select>`;
                                        if(val.Isa == "Row"){
                                            pivotHtml += `
                                                <option value="Row">Row</option>
                                                <option value="Column">Column</option>
                                                <option value="Value">Value</option>
                                                <option value="Filter">Filter</option>
                                            `;
                                        }
                                        else if(val.Isa == "Column"){
                                            pivotHtml += `
                                                <option value="Column">Column</option>
                                                <option value="Row">Row</option>
                                                <option value="Value">Value</option>
                                                <option value="Filter">Filter</option>
                                            `;
                                        }
                                        else if(val.Isa == "Value"){
                                            pivotHtml += `
                                                <option value="Value">Value</option>
                                                <option value="Row">Row</option>
                                                <option value="Column">Column</option>
                                                <option value="Filter">Filter</option>
                                            `;
                                        }
                                        else if(val.Isa == "Filter"){
                                            pivotHtml += `
                                                <option value="Filter">Filter</option>
                                                <option value="Row">Row</option>
                                                <option value="Column">Column</option>
                                                <option value="Value">Value</option>
                                            `;
                                        }
                                        pivotHtml += `
                                        </select>
                                        </div>
                                    </div>
                                    <div class="cs-cell-3f cs-flex cs-advanced-pivotField-del-add-sty">
                                        <div class="cs-lmar">
                                            <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur"><i class="icon-cs-delete"></i></span>
                                            <span class="cs-cur cs-inline cs-remove-activity-datatable-add cs-rsmar cs-tsmar"><i class="icon-cs-new"></i></span>
                                        </div>                        
                                    </div>
                                </div>
                            `;
                            
                            $(This).find(".cs-advanced-pivotField-par").append(pivotHtml);
                        
                    
                    });
                    $(this).find('.cs-advanced-creatr-pivot-par .cs-advanced-source-inp input').val(advActPivotsource);
                    $(this).find('.cs-advanced-creatr-pivot-par .cs-advanced-newtable-name input').val(advActPivotnewtable);
                    $(this).find('.cs-advanced-creatr-pivot-par .cs-advanced-destination input').val(advActPivotdestination);

                    var advActlookupVtl = $(this).data("eachActivityVO").excelAdvancedActivityVo.lookup[0].valueToLookup;
                    var advActlookupRange = $(this).data("eachActivityVO").excelAdvancedActivityVo.lookup[0].range;
                    var advActlookupSor = $(this).data("eachActivityVO").excelAdvancedActivityVo.lookup[0].sourceOfResult;
                    var advActlookupRes = $(this).data("eachActivityVO").excelAdvancedActivityVo.lookup[0].result;
                    $(this).find('.cs-advanced-Lookup-par .cs-advanced-lookup-vtl input').val(advActlookupVtl);
                    $(this).find('.cs-advanced-Lookup-par .cs-advanced-lookup-range input').val(advActlookupRange);
                    $(this).find('.cs-advanced-Lookup-par .cs-advanced-lookup-sor input').val(advActlookupSor);
                    $(this).find('.cs-advanced-Lookup-par .cs-advanced-lookup-result input').val(advActlookupRes);

                    var advActrunSpreadsheetMacroSWB= $(this).data("eachActivityVO").excelAdvancedActivityVo.runSpreadsheetMacro[0].sourceWorkBook;
                    var advActrunSpreadsheetMacroMN= $(this).data("eachActivityVO").excelAdvancedActivityVo.runSpreadsheetMacro[0].macroName;
                    var advActrunSpreadsheetMacroOT= $(this).data("eachActivityVO").excelAdvancedActivityVo.runSpreadsheetMacro[0].outputTo;
                    var advActrunSpreadsheetMacroAMA= $(this).data("eachActivityVO").excelAdvancedActivityVo.runSpreadsheetMacro[0].addMacroArgument;
                    $(this).find('.cs-advanced-runspreadsheetmacro-par .cs-advanced-runspreadsheetmacro-swbook input').val(advActrunSpreadsheetMacroSWB);
                    $(this).find('.cs-advanced-runspreadsheetmacro-par .cs-advanced-runspreadsheetmacro-mname input').val(advActrunSpreadsheetMacroMN);
                    $(this).find('.cs-advanced-runspreadsheetmacro-par .cs-advanced-runspreadsheetmacro-outto input').val(advActrunSpreadsheetMacroOT);
                    $(this).find('.cs-advanced-runspreadsheetmacro-par .cs-advanced-runspreadsheetmacro-addmacarg input').val(advActrunSpreadsheetMacroAMA);

                    var advActinvokeVBAcfp= $(this).data("eachActivityVO").excelAdvancedActivityVo.invokeVBA[0].codeFilePath;
                    var advActinvokeVBAemn= $(this).data("eachActivityVO").excelAdvancedActivityVo.invokeVBA[0].entryMethodName;
                    var advActinvokeVBAemp= $(this).data("eachActivityVO").excelAdvancedActivityVo.invokeVBA[0].entryMethodParameter;
                    var advActinvokeVBAov= $(this).data("eachActivityVO").excelAdvancedActivityVo.invokeVBA[0].outputValue;
                    $(this).find('.cs-advanced-InvokeVBA-par .cs-advanced-InvokeVBA-cfp input').val(advActinvokeVBAcfp);
                    $(this).find('.cs-advanced-InvokeVBA-par .cs-advanced-InvokeVBA-emn input').val(advActinvokeVBAemn);
                    $(this).find('.cs-advanced-InvokeVBA-par .cs-advanced-InvokeVBA-emp input').val(advActinvokeVBAemp);
                    $(this).find('.cs-advanced-InvokeVBA-par .cs-advanced-InvokeVBA-ov input').val(advActinvokeVBAov);

                }    
                else if ($(this).hasClass("cs-excel-delete-child")) {
                    var grpNameVal = $(this).data("eachActivityVO").excelDeleteActivityVo.deleteGroupText;
                    var grpOptionVal = "";
                    if(grpNameVal == "Delete Column"){
                        grpOptionVal = `
                            <option value="select1">Delete Column</option>
                            <option value="select2">Delete Rows</option>
                            <option value="select3">Delete Sheet</option>
                        `;
                        $(this).find(".cs-delete-common").addClass("cs-hide");
                        $(this).find(".cs-delete-column-par").removeClass("cs-hide");
                    }
                    else if(grpNameVal == "Delete Rows"){
                        grpOptionVal =`
                            <option value="select2">Delete Rows</option>
                            <option value="select1">Delete Column</option>
                            <option value="select3">Delete Sheet</option>
                        `;
                        $(this).find(".cs-delete-common").addClass("cs-hide");
                        $(this).find(".cs-delete-rows-par").removeClass("cs-hide");
                    }
                    else if(grpNameVal == "Delete Sheet"){
                        grpOptionVal =`
                            <option value="select3">Delete Sheet</option>
                            <option value="select1">Delete Column</option>
                            <option value="select2">Delete Rows</option>
                        `;
                        $(this).find(".cs-delete-common").addClass("cs-hide");
                        $(this).find(".cs-delete-sheet-par").removeClass("cs-hide");
                    }
                    $(this).find(".deleteGroup").html("");
                    $(this).find(".deleteGroup").prepend(grpOptionVal);
                    $(this).find(".deleteGroup").find("option:selected").text(grpNameVal);

                    var excDelSourceVal = $(this).data("eachActivityVO").excelDeleteActivityVo.deleteColumn[0].source;
                    var excDelColNameVal = $(this).data("eachActivityVO").excelDeleteActivityVo.deleteColumn[0].columnName;
                    var excDelHasHeadVal = $(this).data("eachActivityVO").excelDeleteActivityVo.deleteColumn[0].hasHeader;
                    $(this).find(".cs-delete-column-par").find(".cs-delete-source input").val(excDelSourceVal);
                    $(this).find(".cs-delete-column-par").find(".cs-delete-column-name input").val(excDelColNameVal);
                    if(excDelHasHeadVal == "Y") {
                        $(this).find(".cs-delete-column-par .cs-delete-column-has-header").prop("checked","true");
                    }

                    var excDelRowsIwtorVal = $(this).data("eachActivityVO").excelDeleteActivityVo.deleteRow[0].iwtor;
                    var excDelRowsWhattodelVal = $(this).data("eachActivityVO").excelDeleteActivityVo.deleteRow[0].whattodel;
                    var excDelRowsAtpositionVal = $(this).data("eachActivityVO").excelDeleteActivityVo.deleteRow[0].atposition;
                    var excDelRowsHasHeaderVal = $(this).data("eachActivityVO").excelDeleteActivityVo.deleteRow[0].hasHeader;
                    $(this).find(".cs-delete-rows-par").find(".cs-delete-rows-iwtor input").val(excDelRowsIwtorVal);
                    $(this).find(".cs-delete-rows-par").find(".cs-delete-rows-whattodel select").find("option:selected").text(excDelRowsWhattodelVal);
                    $(this).find(".cs-delete-rows-par").find(".cs-delete-rows-atpos input").val(excDelRowsAtpositionVal);
                    if(excDelRowsHasHeaderVal == "Y") {
                        $(this).find(".cs-delete-rows-par .cs-delete-rows-has-headers").prop("checked","true");
                    }

                    var excDelSheetSelVal = $(this).data("eachActivityVO").excelDeleteActivityVo.deleteSheet[0].selectSheet;
                    $(this).find(".cs-delete-sheet-par").find(".cs-delete-sheet-select input").val(excDelSheetSelVal);
                    
                }
                else if ($(this).hasClass("cs-excel-filter-act-child")) {
                    var grpNameVal = $(this).data("eachActivityVO").excelFilterActivityVo.filterGroupText;
                    var grpOptionVal = "";
                    if(grpNameVal == "Filter"){
                        grpOptionVal = `
                            <option value="select1">Filter</option>
                            <option value="select2">Filter Pivot Table</option>
                        `;
                        $(this).find(".cs-filter-common").addClass("cs-hide");
                        $(this).find(".cs-filter-par").removeClass("cs-hide");
                    }
                    else if(grpNameVal == "Filter Pivot Table"){
                        grpOptionVal =`
                            <option value="select2">Filter Pivot Table</option>
                            <option value="select1">Filter</option>
                        `;
                        $(this).find(".cs-filter-common").addClass("cs-hide");
                        $(this).find(".cs-filter-pivotTable-par").removeClass("cs-hide");
                    }
                    $(this).find(".filterGroup").html("");
                    $(this).find(".filterGroup").prepend(grpOptionVal);
                    $(this).find(".filterGroup").find("option:selected").text(grpNameVal);

                    var excFilterSourceVal = $(this).data("eachActivityVO").excelFilterActivityVo.Filter[0].source;
                    var excFilterColNameVal = $(this).data("eachActivityVO").excelFilterActivityVo.Filter[0].columnName;
                    var excFilterCAEFVal = $(this).data("eachActivityVO").excelFilterActivityVo.Filter[0].clearAnyExistingFilter;
                    $(this).find(".cs-filter-par").find(".cs-filter-source-inp input").val(excFilterSourceVal);
                    $(this).find(".cs-filter-par").find(".cs-filter-column-name input").val(excFilterColNameVal);
                    if(excFilterCAEFVal == "Y") {
                        $(this).find(".cs-filter-par .cs-excel-filter-caef").prop("checked","true");
                    }
                    var This = $(this);
                    $(this).find(".cs-filter-BasicFilter-par").html("");   
                    $.each($(this).data("eachActivityVO").excelFilterActivityVo.Filter[0].basicFilter, function(ind, val) {
                            var pivotHtml = `
                            <div class="cs-filter-pivotField-list cs-cell-24f">
                                <div class="cs-cell-8">
                                    <div class="cs-input cs-filter-isEqTo">
                                    <label>Is Equal to</label><input type="text" value="${val.IsEqualto}">
                                </div>
                                </div>
                                <div class="cs-cell-3f cs-flex cs-filter-BasicFilter-del-add-sty">
                                    <div class="cs-lmar">
                                        <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur"><i class="icon-cs-delete"></i></span>
                                        <span class="cs-cur cs-inline cs-remove-activity-datatable-add cs-rsmar cs-tsmar"><i class="icon-cs-new"></i></span>
                                    </div>                        
                                </div>
                            </div>
                            `;
                        $(This).find(".cs-filter-BasicFilter-par").append(pivotHtml);
                    });

                    var excPvotFilterSourceVal = $(this).data("eachActivityVO").excelFilterActivityVo.filterPivotTable[0].source;
                    var excPvotFilterColNameVal = $(this).data("eachActivityVO").excelFilterActivityVo.filterPivotTable[0].columnName;
                    var excPvotFilterCAEFVal = $(this).data("eachActivityVO").excelFilterActivityVo.filterPivotTable[0].clearAnyExistingFilter;
                    $(this).find(".cs-filter-pivotTable-par").find(".cs-filter-pivotTable-sou input").val(excPvotFilterSourceVal);
                    $(this).find(".cs-filter-pivotTable-par").find(".cs-filter-pivotTable-cname input").val(excPvotFilterColNameVal);
                    if(excPvotFilterCAEFVal == "Y") {
                        $(this).find(".cs-filter-pivotTable-par .cs-excel-filter-pivotTable-caef").prop("checked","true");
                    }

                    
                }
                else if ($(this).hasClass("cs-excel-read-act-child")) {
                    var grpNameVal = $(this).data("eachActivityVO").excelReadActivityVo.readGroupText;
                    var grpOptionVal = "";
                    if(grpNameVal == "For Each Excel Row"){
                        grpOptionVal = `
                            <option value="select1">For Each Excel Row</option>
                            <option value="select2">Read Cell Formula/Table</option>
                            <option value="select3">Read Cell Value</option>
                            <option value="select4">Read Range</option>
                        `;
                        $(this).find(".cs-read-common").addClass("cs-hide");
                        $(this).find(".cs-read-forEacExcelRow-par").removeClass("cs-hide");
                    }
                    if(grpNameVal == "Read Cell Formula/Table"){
                        grpOptionVal = `
                            <option value="select2">Read Cell Formula/Table</option>
                            <option value="select1">For Each Excel Row</option>
                            <option value="select3">Read Cell Value</option>
                            <option value="select4">Read Range</option>
                        `;
                        $(this).find(".cs-read-common").addClass("cs-hide");
                        $(this).find(".cs-read-readCellFormula-par").removeClass("cs-hide");
                    }
                    if(grpNameVal == "Read Cell Value"){
                        grpOptionVal = `
                            <option value="select3">Read Cell Value</option>
                            <option value="select1">For Each Excel Row</option>
                            <option value="select2">Read Cell Formula/Table</option>
                            <option value="select4">Read Range</option>
                        `;
                        $(this).find(".cs-read-common").addClass("cs-hide");
                        $(this).find(".cs-read-readCellValue-par").removeClass("cs-hide");
                    }
                    if(grpNameVal == "Read Range"){
                        grpOptionVal = `
                            <option value="select4">Read Range</option>
                            <option value="select1">For Each Excel Row</option>
                            <option value="select2">Read Cell Formula/Table</option>
                            <option value="select3">Read Cell Value</option>
                        `;
                        $(this).find(".cs-read-common").addClass("cs-hide");
                        $(this).find(".cs-read-readRange-par").removeClass("cs-hide");
                    }
                    $(this).find(".readGroup").html("");
                    $(this).find(".readGroup").prepend(grpOptionVal);
                    $(this).find(".readGroup").find("option:selected").text(grpNameVal);

                    var csExcReadActFE = $(this).data("eachActivityVO").excelReadActivityVo.forEachExcelRow[0].forEach;
                    var csExcReadActIR = $(this).data("eachActivityVO").excelReadActivityVo.forEachExcelRow[0].inRange;
                    var csExcReadActERB = $(this).data("eachActivityVO").excelReadActivityVo.forEachExcelRow[0].emptyRowBehaviour;
                    var csExcReadActHH = $(this).data("eachActivityVO").excelReadActivityVo.forEachExcelRow[0].hasHeader;
                    var csExcReadActSAE = $(this).data("eachActivityVO").excelReadActivityVo.forEachExcelRow[0].saveAfterEachRow;
                    $(this).find(".cs-read-forEacExcelRow-par").find(".cs-read-forEacExcelRow-fe input").val(csExcReadActFE);
                    var csExcReadActINranVal = "";
                    if(csExcReadActIR == "table"){
                        csExcReadActINranVal = `
                        <option value="table">table</option>
                        <option value="sheet to use">sheet to use</option>
                        `;
                    }
                    else if(csExcReadActIR == "sheet to use"){
                        csExcReadActINranVal = `
                        <option value="sheet to use">sheet to use</option>
                        <option value="table">table</option>
                        `;
                    }
                    $(this).find(".cs-read-forEacExcelRow-Ir select").html("");
                    $(this).find(".cs-read-forEacExcelRow-Ir select").append(csExcReadActINranVal);
                    $(this).find(".cs-read-forEacExcelRow-par").find(".cs-read-forEacExcelRow-Ir option:selected").text(csExcReadActIR);
                    var csExcReadActERBVal = "";
                    if(csExcReadActERB == "StopAfterThreeConsecutiveEmptyRows"){
                        csExcReadActERBVal = `
                        <option value="StopAfterThreeConsecutiveEmptyRows">StopAfterThreeConsecutiveEmptyRows</option>
                        <option value="Stop">Stop</option>
                        <option value="Skip">Skip</option>
                        <option value="Process">Process</option>
                        `;
                    }
                    else if(csExcReadActERB == "Stop"){
                        csExcReadActERBVal = `
                        <option value="Stop">Stop</option>
                        <option value="StopAfterThreeConsecutiveEmptyRows">StopAfterThreeConsecutiveEmptyRows</option>
                        <option value="Skip">Skip</option>
                        <option value="Process">Process</option>
                        `;
                    }
                    else if(csExcReadActERB == "Skip"){
                        csExcReadActERBVal = `
                        <option value="Skip">Skip</option>
                        <option value="StopAfterThreeConsecutiveEmptyRows">StopAfterThreeConsecutiveEmptyRows</option>
                        <option value="Stop">Stop</option>
                        <option value="Process">Process</option>
                        `;
                    }
                    else if(csExcReadActERB == "Process"){
                        csExcReadActERBVal = `
                        <option value="Process">Process</option>
                        <option value="StopAfterThreeConsecutiveEmptyRows">StopAfterThreeConsecutiveEmptyRows</option>
                        <option value="Stop">Stop</option>
                        <option value="Skip">Skip</option>
                        `;
                    }
                    $(this).find(".cs-read-forEacExcelRow-erb select").html("");
                    $(this).find(".cs-read-forEacExcelRow-erb select").append(csExcReadActERBVal);
                    $(this).find(".cs-read-forEacExcelRow-par").find(".cs-read-forEacExcelRow-erb option:selected").text(csExcReadActERB);
                    if(csExcReadActHH == "Y") {
                        $(this).find(".cs-read-forEacExcelRow-par .cs-read-forEacExcelRow-hh").prop("checked","true");
                    }
                    if(csExcReadActSAE == "Y") {
                        $(this).find(".cs-read-forEacExcelRow-par .cs-read-forEacExcelRow-saer").prop("checked","true");
                    }

                    var csExcReadCellActCell = $(this).data("eachActivityVO").excelReadActivityVo.readCellFormula[0].cell;
                    var csExcReadCellActSaveto = $(this).data("eachActivityVO").excelReadActivityVo.readCellFormula[0].saveto;
                    $(this).find(".cs-read-readCellFormula-par").find(".cs-read-readCellFormula-cell input").val(csExcReadCellActCell);
                    $(this).find(".cs-read-readCellFormula-par").find(".cs-read-readCellFormula-saveto input").val(csExcReadCellActSaveto);
                    
                    var csExcReadCellValActCell = $(this).data("eachActivityVO").excelReadActivityVo.readCellValue[0].cell;
                    var csExcReadCellValActSaveto = $(this).data("eachActivityVO").excelReadActivityVo.readCellValue[0].saveto;
                    var csExcReadCellValActGFT = $(this).data("eachActivityVO").excelReadActivityVo.readCellValue[0].getFormattedText;
                    $(this).find(".cs-read-readCellValue-par").find(".cs-read-readCellValue-cell input").val(csExcReadCellValActCell);
                    $(this).find(".cs-read-readCellValue-par").find(".cs-read-readCellValue-saveto input").val(csExcReadCellValActSaveto);
                    $(this).find(".cs-read-readCellValue-par").find(".cs-read-readCellValue-getFtext input").val(csExcReadCellValActGFT);
                    
                    var csExcReadRangeActRan = $(this).data("eachActivityVO").excelReadActivityVo.readRange[0].range;
                    var csExcReadRangeActHH = $(this).data("eachActivityVO").excelReadActivityVo.readRange[0].hasHeaders;
                    var csExcReadRangeActVRO = $(this).data("eachActivityVO").excelReadActivityVo.readRange[0].visibleRowOnly;
                    var csExcReadRangeActST = $(this).data("eachActivityVO").excelReadActivityVo.readRange[0].saveTo;
                    $(this).find(".cs-read-readRange-par").find(".cs-read-readRange-range input").val(csExcReadRangeActRan);
                    if(csExcReadRangeActHH == "Y") {
                        $(this).find(".cs-read-readRange-par .cs-read-readRange-headers").prop("checked","true");
                    }
                    if(csExcReadRangeActVRO == "Y") {
                        $(this).find(".cs-read-readRange-par .cs-read-readRange-vro").prop("checked","true");
                    }
                    $(this).find(".cs-read-readRange-par").find(".cs-read-readRange-saveto input").val(csExcReadRangeActST);


                }
                else if ($(this).hasClass("cs-excel-chart-child")) {
                    var grpNameVal = $(this).data("eachActivityVO").excelChartActivityVo.chartText;
                    var grpOptionVal = "";
                    if(grpNameVal == "Get Excel Chart"){
                        grpOptionVal = `
                        <option value="select1">Get Excel Chart</option>
                        <option value="select2">Insert Chart</option>
                        `;
                        $(this).find(".cs-chart-common").addClass("cs-hide");
                        $(this).find(".cs-chart-getExcel-par").removeClass("cs-hide");
                    }
                    else if(grpNameVal == "Insert Chart"){
                        grpOptionVal = `
                        <option value="select2">Insert Chart</option>
                        <option value="select1">Get Excel Chart</option>
                        `;
                        $(this).find(".cs-chart-common").addClass("cs-hide");
                        $(this).find(".cs-chart-insert-par").removeClass("cs-hide");
                    }
                    $(this).find(".chartGroup").html("");
                    $(this).find(".chartGroup").prepend(grpOptionVal);
                    $(this).find(".chartGroup").find("option:selected").text(grpNameVal);

                    var csExcChartActChart = $(this).data("eachActivityVO").excelChartActivityVo.getExcelChart[0].chart;
                    var csExcChartActAction = $(this).data("eachActivityVO").excelChartActivityVo.getExcelChart[0].action;
                    var csExcChartActFileName = $(this).data("eachActivityVO").excelChartActivityVo.getExcelChart[0].fileName;
                    var csExcChartActREF = $(this).data("eachActivityVO").excelChartActivityVo.getExcelChart[0].replaceExistingFile;
                    var csExcChartActActionSelect = "" ;
                    if(csExcChartActAction == "Copy to clipboard"){
                        csExcChartActActionSelect = `
                        <option value="Copy to clipboard">Copy to clipboard</option>
                        <option value="Save as picture">Save as picture</option>
                        `;
                    }
                    else if(csExcChartActAction == "Save as picture"){
                        csExcChartActActionSelect = `
                        <option value="Save as picture">Save as picture</option>
                        <option value="Copy to clipboard">Copy to clipboard</option>
                        `;
                    }
                    $(this).find(".cs-chart-getExcel-par .cs-chart-action select").html("");
                    $(this).find(".cs-chart-getExcel-par .cs-chart-action select").prepend(csExcChartActActionSelect);
                    $(this).find(".cs-chart-getExcel-par .cs-chart-action").find("option:selected").text(csExcChartActAction);
                    $(this).find(".cs-chart-getExcel-par").find(".cs-chart-cval input").val(csExcChartActChart);
                    $(this).find(".cs-chart-getExcel-par").find(".cs-chart-filename input").val(csExcChartActFileName);
                    if(csExcChartActREF == "Y") {
                        $(this).find(".cs-chart-getExcel-par .cs-chart-replaceexistingfile").prop("checked","true");
                    }

                    var csExcInsertChartActCat = $(this).data("eachActivityVO").excelChartActivityVo.insertChart[0].chartCatagory;
                    var csExcInsertChartActCType = $(this).data("eachActivityVO").excelChartActivityVo.insertChart[0].chartType;
                    var csExcInsertChartActDrange = $(this).data("eachActivityVO").excelChartActivityVo.insertChart[0].dataRange;
                    var csExcInsertChartActIIS = $(this).data("eachActivityVO").excelChartActivityVo.insertChart[0].insertIntoSheet;
                    var csExcInsertChartActSCT = $(this).data("eachActivityVO").excelChartActivityVo.insertChart[0].saveChartTo;
                    var csExcInsertChartActCatSel = "";
                    var csExcInsertChartActCTypeSel = "";
                    if(csExcInsertChartActCat == "Area"){
                        csExcInsertChartActCatSel = `
                        <option value="Area">Area</option>
                        <option value="Bar">Bar</option>
                        <option value="Pie">Pie</option>
                        <option value="Scatter">Scatter</option>
                        `;
                    }
                    else if(csExcInsertChartActCat == "Bar"){
                        csExcInsertChartActCatSel = `
                        <option value="Bar">Bar</option>
                        <option value="Area">Area</option>
                        <option value="Pie">Pie</option>
                        <option value="Scatter">Scatter</option>
                        `;
                    }
                    else if(csExcInsertChartActCat == "Pie"){
                        csExcInsertChartActCatSel = `
                        <option value="Pie">Pie</option>
                        <option value="Area">Area</option>
                        <option value="Bar">Bar</option>
                        <option value="Scatter">Scatter</option>
                        `;
                    }
                    else if(csExcInsertChartActCat == "Scatter"){
                        csExcInsertChartActCatSel = `
                        <option value="Scatter">Scatter</option>
                        <option value="Area">Area</option>
                        <option value="Bar">Bar</option>
                        <option value="Pie">Pie</option>
                        `;
                    }
                    $(this).find(".cs-chart-insert-par .cs-chart-cCatagory select").html("");
                    $(this).find(".cs-chart-insert-par .cs-chart-cCatagory select").prepend(csExcInsertChartActCatSel);
                    $(this).find(".cs-chart-insert-par .cs-chart-cCatagory select").find("option:selected").text(csExcInsertChartActCat);
                    if(csExcInsertChartActCType == "Stacked Area"){
                        csExcInsertChartActCTypeSel = `
                        <option value="Stacked Area">Stacked Area</option>
                        <option value="Clustered Bar">Clustered Bar</option>
                        <option value="Pie Doughnut">Pie Doughnut</option>
                        <option value="Scatter with Straight Lines">Scatter with Straight Lines</option>
                        `;
                    }
                    else if(csExcInsertChartActCType == "Clustered Bar"){
                        csExcInsertChartActCTypeSel = `
                        <option value="Clustered Bar">Clustered Bar</option>
                        <option value="Stacked Area">Stacked Area</option>
                        <option value="Pie Doughnut">Pie Doughnut</option>
                        <option value="Scatter with Straight Lines">Scatter with Straight Lines</option>
                        `;
                    }
                    else if(csExcInsertChartActCType == "Pie Doughnut"){
                        csExcInsertChartActCTypeSel = `
                        <option value="Pie Doughnut">Pie Doughnut</option>
                        <option value="Stacked Area">Stacked Area</option>
                        <option value="Clustered Bar">Clustered Bar</option>
                        <option value="Scatter with Straight Lines">Scatter with Straight Lines</option>
                        `;
                    }
                    else if(csExcInsertChartActCType == "Scatter with Straight Lines"){
                        csExcInsertChartActCTypeSel = `
                        <option value="Scatter with Straight Lines">Scatter with Straight Lines</option>
                        <option value="Stacked Area">Stacked Area</option>
                        <option value="Clustered Bar">Clustered Bar</option>
                        <option value="Pie Doughnut">Pie Doughnut</option>
                        `;
                    }
                    $(this).find(".cs-chart-insert-par .cs-chart-cType select").html("");
                    $(this).find(".cs-chart-insert-par .cs-chart-cType select").prepend(csExcInsertChartActCTypeSel);
                    $(this).find(".cs-chart-insert-par .cs-chart-cType select").find("option:selected").text(csExcInsertChartActCType);
                    $(this).find(".cs-chart-insert-par").find(".cs-chart-dataRange input").val(csExcInsertChartActDrange);
                    $(this).find(".cs-chart-insert-par").find(".cs-chart-iisheet input").val(csExcInsertChartActIIS);
                    $(this).find(".cs-chart-insert-par").find(".cs-chart-scTo input").val(csExcInsertChartActSCT);
                }
                else if ($(this).hasClass("cs-excel-insert-child")) {
                    var grpNameVal = $(this).data("eachActivityVO").excelInsertActivityVo.insertText;
                    var grpOptionVal = "";
                    if(grpNameVal == "Insert Column"){
                        grpOptionVal = `
                        <option value="select1">Insert Column</option>
                        <option value="select2">Insert Rows</option>
                        <option value="select3">Insert Sheet</option>
                        `;
                        $(this).find(".cs-insert-common").addClass("cs-hide");
                        $(this).find(".cs-insert-Col-par").removeClass("cs-hide");
                    }
                    else if(grpNameVal == "Insert Rows"){
                        grpOptionVal =`
                        <option value="select2">Insert Rows</option>
                        <option value="select1">Insert Column</option>
                        <option value="select3">Insert Sheet</option>
                        `;
                        $(this).find(".cs-insert-common").addClass("cs-hide");
                        $(this).find(".cs-insert-Rows-par").removeClass("cs-hide");
                    }
                    else if(grpNameVal == "Insert Sheet"){
                        grpOptionVal =`
                        <option value="select3">Insert Sheet</option>
                        <option value="select1">Insert Column</option>
                        <option value="select2">Insert Rows</option>
                        `;
                        $(this).find(".cs-insert-common").addClass("cs-hide");
                        $(this).find(".cs-insert-Sheet-par").removeClass("cs-hide");
                    }
                    $(this).find(".insertGroup").html("");
                    $(this).find(".insertGroup").prepend(grpOptionVal);
                    $(this).find(".insertGroup").find("option:selected").text(grpNameVal);

                    
                    var excInsertColRan = $(this).data("eachActivityVO").excelInsertActivityVo.insertColumn[0].range;
                    var excInsertColrTc = $(this).data("eachActivityVO").excelInsertActivityVo.insertColumn[0].relativeToColumn;
                    var excInsertColWhere = $(this).data("eachActivityVO").excelInsertActivityVo.insertColumn[0].where;
                    var excInsertColaH = $(this).data("eachActivityVO").excelInsertActivityVo.insertColumn[0].addHeader;
                    var excInsertColfms = $(this).data("eachActivityVO").excelInsertActivityVo.insertColumn[0].formatDataAsType;
                    var excInsertColhH = $(this).data("eachActivityVO").excelInsertActivityVo.insertColumn[0].hasHeader;
                    $(this).find(".cs-insert-Col-par").find(".cs-insertCol-range input").val(excInsertColRan);
                    $(this).find(".cs-insert-Col-par").find(".cs-insertCol-rtCol input").val(excInsertColrTc);
                    var grpOptionInsertVal = "";
                    if(excInsertColWhere == "Before"){
                        grpOptionInsertVal = `
                        <option value="Before">Before</option>
                        <option value="After">After</option>
                        `;
                    }
                    else if(excInsertColWhere == "After"){
                        grpOptionInsertVal =`
                        <option value="After">After</option>
                        <option value="Before">Before</option>
                        `;
                    }
                    $(this).find(".cs-insert-Col-par .cs-insertCol-Where select").html("");
                    $(this).find(".cs-insert-Col-par .cs-insertCol-Where select").prepend(grpOptionInsertVal);
                    $(this).find(".cs-insert-Col-par .cs-insertCol-Where select").find("option:selected").text(excInsertColWhere);
                    $(this).find(".cs-insert-Col-par").find(".cs-insertCol-addHead input").val(excInsertColaH);
                    var grpOptionInsertFDATVal = "";
                    if(excInsertColfms == "General"){
                        grpOptionInsertFDATVal = `
                        <option value="General">General</option>
                        <option value="Number">Number</option>
                        <option value="Date">Date</option>
                        <option value="Time">Time</option>
                        <option value="Percentage">Percentage</option>
                        <option value="Currency">Currency</option>
                        <option value="Text">Text</option>
                        `;
                    }
                    else if(excInsertColfms == "Number"){
                        grpOptionInsertFDATVal =`
                        <option value="Number">Number</option>
                        <option value="General">General</option>
                        <option value="Date">Date</option>
                        <option value="Time">Time</option>
                        <option value="Percentage">Percentage</option>
                        <option value="Currency">Currency</option>
                        <option value="Text">Text</option>
                        `;
                    }
                    else if(excInsertColfms == "Date"){
                        grpOptionInsertFDATVal =`
                        <option value="Date">Date</option>
                        <option value="General">General</option>
                        <option value="Number">Number</option>
                        <option value="Time">Time</option>
                        <option value="Percentage">Percentage</option>
                        <option value="Currency">Currency</option>
                        <option value="Text">Text</option>
                        `;
                    }
                    else if(excInsertColfms == "Time"){
                        grpOptionInsertFDATVal =`
                        <option value="Time">Time</option>
                        <option value="General">General</option>
                        <option value="Number">Number</option>
                        <option value="Date">Date</option>
                        <option value="Percentage">Percentage</option>
                        <option value="Currency">Currency</option>
                        <option value="Text">Text</option>
                        `;
                    }
                    else if(excInsertColfms == "Percentage"){
                        grpOptionInsertFDATVal =`
                        <option value="Percentage">Percentage</option>
                        <option value="General">General</option>
                        <option value="Number">Number</option>
                        <option value="Date">Date</option>
                        <option value="Time">Time</option>
                        <option value="Currency">Currency</option>
                        <option value="Text">Text</option>
                        `;
                    }
                    else if(excInsertColfms == "Currency"){
                        grpOptionInsertFDATVal =`
                        <option value="Currency">Currency</option>
                        <option value="General">General</option>
                        <option value="Number">Number</option>
                        <option value="Date">Date</option>
                        <option value="Time">Time</option>
                        <option value="Percentage">Percentage</option>
                        <option value="Text">Text</option>
                        `;
                    }
                    else if(excInsertColfms == "Text"){
                        grpOptionInsertFDATVal =`
                        <option value="Text">Text</option>
                        <option value="General">General</option>
                        <option value="Number">Number</option>
                        <option value="Date">Date</option>
                        <option value="Time">Time</option>
                        <option value="Percentage">Percentage</option>
                        <option value="Currency">Currency</option>
                        `;
                    }
                    $(this).find(".cs-insert-Col-par .cs-insertCol-FDAT select").html("");
                    $(this).find(".cs-insert-Col-par .cs-insertCol-FDAT select").prepend(grpOptionInsertFDATVal);
                    $(this).find(".cs-insert-Col-par .cs-insertCol-FDAT select").find("option:selected").text(excInsertColfms);
                    if(excInsertColhH == "Y") {
                        $(this).find(".cs-insert-Col-par .cs-insertCol-hasHead").prop("checked","true");
                    }

                    var excInsertRowsIWTOR = $(this).data("eachActivityVO").excelInsertActivityVo.insertRows[0].inWhatTableOrRange;
                    var excInsertRowsNOR = $(this).data("eachActivityVO").excelInsertActivityVo.insertRows[0].numberOfRows;
                    var excInsertRowsWHERE = $(this).data("eachActivityVO").excelInsertActivityVo.insertRows[0].where;
                    var excInsertRowsHH = $(this).data("eachActivityVO").excelInsertActivityVo.insertRows[0].hasHeader;
                    $(this).find(".cs-insert-Rows-par").find(".cs-insertRows-iwtor input").val(excInsertRowsIWTOR);
                    $(this).find(".cs-insert-Rows-par").find(".cs-insertRows-nor input").val(excInsertRowsNOR);
                    var grpOptionInsertRowsWhereVal = "";
                    if(excInsertRowsWHERE == "End"){
                        grpOptionInsertRowsWhereVal = `
                        <option value="End">End</option>
                        <option value="Start">Start</option>
                        <option value="Specific index">Specific index</option>
                        `;
                    }
                    else if(excInsertRowsWHERE == "Start"){
                        grpOptionInsertRowsWhereVal =`
                        <option value="Start">Start</option>
                        <option value="End">End</option>
                        <option value="Specific index">Specific index</option>
                        `;
                    }
                    else if(excInsertRowsWHERE == "ASpecific indexfter"){
                        grpOptionInsertRowsWhereVal =`
                        <option value="Specific index">Specific index</option>
                        <option value="End">End</option>
                        <option value="Start">Start</option>
                        `;
                    }
                    $(this).find(".cs-insert-Rows-par .cs-insertRows-where select").html("");
                    $(this).find(".cs-insert-Rows-par .cs-insertRows-where select").prepend(grpOptionInsertRowsWhereVal);
                    $(this).find(".cs-insert-Rows-par .cs-insertRows-where select").find("option:selected").text(excInsertRowsWHERE);
                    if(excInsertRowsHH == "Y") {
                        $(this).find(".cs-insert-Rows-par .cs-insertRows-hasHead").prop("checked","true");
                    }
                 
                    var excInsertSheetCIW = $(this).data("eachActivityVO").excelInsertActivityVo.insertSheet[0].createInWorkbook;
                    var excInsertSheetsN = $(this).data("eachActivityVO").excelInsertActivityVo.insertSheet[0].sheetName;
                    var excInsertSheetrNSA = $(this).data("eachActivityVO").excelInsertActivityVo.insertSheet[0].referenceNewSheetAs;
                    $(this).find(".cs-insert-Sheet-par").find(".cs-insertSheet-ciw input").val(excInsertSheetCIW);
                    $(this).find(".cs-insert-Sheet-par").find(".cs-insertSheet-sName input").val(excInsertSheetsN);
                    $(this).find(".cs-insert-Sheet-par").find(".cs-insertSheet-rnsa input").val(excInsertSheetrNSA);
                    
                }
                else if ($(this).hasClass("cs-excel-save-child")) {
                    var grpNameVal = $(this).data("eachActivityVO").excelSaveActivityVo.saveText;
                    var grpOptionVal = "";
                    if(grpNameVal == "Save Excel File As"){
                        grpOptionVal = `
                        <option value="select1">Save Excel File As</option>
                        <option value="select2">Save Excel File</option>
                        <option value="select3">Save Excel File As PDF</option>
                        `;
                        $(this).find(".cs-Save-common").addClass("cs-hide");
                        $(this).find(".cs-SaveExcelFileAs-par").removeClass("cs-hide");
                    }
                    else if(grpNameVal == "Save Excel File"){
                        grpOptionVal =`
                        <option value="select2">Save Excel File</option>
                        <option value="select1">Save Excel File As</option>
                        <option value="select3">Save Excel File As PDF</option>
                        `;
                        $(this).find(".cs-Save-common").addClass("cs-hide");
                        $(this).find(".cs-SaveExcelFile-par").removeClass("cs-hide");
                    }
                    else if(grpNameVal == "Save Excel File As PDF"){
                        grpOptionVal =`
                        <option value="select3">Save Excel File As PDF</option>
                        <option value="select1">Save Excel File As</option>
                        <option value="select2">Save Excel File</option>
                        `;
                        $(this).find(".cs-Save-common").addClass("cs-hide");
                        $(this).find(".cs-SaveExcelFileAsPDF-par").removeClass("cs-hide");
                    }
                    $(this).find(".saveGroup").html("");
                    $(this).find(".saveGroup").append(grpOptionVal);
                    $(this).find(".saveGroup").find("option:selected").text(grpNameVal);

                    var excSaveFetSaceExcFileAsWB = $(this).data("eachActivityVO").excelSaveActivityVo.saveExcelFileAs[0].workBook;
                    var excSaveFetSaceExcFileAsSAT = $(this).data("eachActivityVO").excelSaveActivityVo.saveExcelFileAs[0].saveAsType;
                    var excSaveFetSaceExcFileAsSAF = $(this).data("eachActivityVO").excelSaveActivityVo.saveExcelFileAs[0].saveAsFile;
                    var excSaveFetSaceExcFileAsFN = $(this).data("eachActivityVO").excelSaveActivityVo.saveExcelFileAs[0].fileName;
                    var excSaveFetSaceExcFileAsRE = $(this).data("eachActivityVO").excelSaveActivityVo.saveExcelFileAs[0].replaceExisting;
                    $(this).find(".cs-SaveExcelFileAs-par .cs-SaveExcelFileAs-wBook input").val(excSaveFetSaceExcFileAsWB);
                    var excSaveFetSaceExcFileAsSATVal = "";
                    if(excSaveFetSaceExcFileAsSAT == "Excel Workbook (.xlsx)"){
                        excSaveFetSaceExcFileAsSATVal = `
                        <option value="Excel Workbook (.xlsx)">Excel Workbook (.xlsx)</option>
                        <option value="Excel Binary Workbook (.xlsb)">Excel Binary Workbook (.xlsb)</option>
                        <option value="Excel Macro Enabled Workbook (.xlsm)">Excel Macro Enabled Workbook (.xlsm)</option>
                        <option value="or Excel 97-2003 Workbook (.xls)">or Excel 97-2003 Workbook (.xls)</option>
                        `;
                    }
                    else if(excSaveFetSaceExcFileAsSAT == "Excel Binary Workbook (.xlsb)"){
                        excSaveFetSaceExcFileAsSATVal =`
                        <option value="Excel Binary Workbook (.xlsb)">Excel Binary Workbook (.xlsb)</option>
                        <option value="Excel Workbook (.xlsx)">Excel Workbook (.xlsx)</option>
                        <option value="Excel Macro Enabled Workbook (.xlsm)">Excel Macro Enabled Workbook (.xlsm)</option>
                        <option value="or Excel 97-2003 Workbook (.xls)">or Excel 97-2003 Workbook (.xls)</option>
                        `;
                    }
                    else if(excSaveFetSaceExcFileAsSAT == "Excel Macro Enabled Workbook (.xlsm)"){
                        excSaveFetSaceExcFileAsSATVal =`
                        <option value="Excel Macro Enabled Workbook (.xlsm)">Excel Macro Enabled Workbook (.xlsm)</option>
                        <option value="Excel Workbook (.xlsx)">Excel Workbook (.xlsx)</option>
                        <option value="Excel Binary Workbook (.xlsb)">Excel Binary Workbook (.xlsb)</option>
                        <option value="or Excel 97-2003 Workbook (.xls)">or Excel 97-2003 Workbook (.xls)</option>
                        `;
                    }
                    else if(excSaveFetSaceExcFileAsSAT == "or Excel 97-2003 Workbook (.xls)"){
                        excSaveFetSaceExcFileAsSATVal =`
                        <option value="or Excel 97-2003 Workbook (.xls)">or Excel 97-2003 Workbook (.xls)</option>
                        <option value="Excel Workbook (.xlsx)">Excel Workbook (.xlsx)</option>
                        <option value="Excel Binary Workbook (.xlsb)">Excel Binary Workbook (.xlsb)</option>
                        <option value="Excel Macro Enabled Workbook (.xlsm)">Excel Macro Enabled Workbook (.xlsm)</option>
                        `;
                    }
                    $(this).find(".cs-SaveExcelFileAs-SAT select").html("");
                    $(this).find(".cs-SaveExcelFileAs-SAT select").append(excSaveFetSaceExcFileAsSATVal);
                    $(this).find(".cs-SaveExcelFileAs-SAT select").find("option:selected").text(excSaveFetSaceExcFileAsSAT);
                    $(this).find(".cs-SaveExcelFileAs-par .cs-SaveExcelFileAs-SAF input").val(excSaveFetSaceExcFileAsSAF);
                    $(this).find(".cs-SaveExcelFileAs-par .cs-SaveExcelFileAs-fileName input").val(excSaveFetSaceExcFileAsFN);
                    if(excSaveFetSaceExcFileAsRE == "Y") {
                        $(this).find(".cs-SaveExcelFileAs-par .cs-SaveExcelFileAs-RE").prop("checked","true");
                    }   

                    var excSaveFetSaceExcFilefileInp = $(this).data("eachActivityVO").excelSaveActivityVo.saveExcelFile[0].file;
                    $(this).find(".cs-SaveExcelFile-par .cs-SaveExcelFile-File input").val(excSaveFetSaceExcFilefileInp);

                    var excSaveFetSaceExcFilePDFWBook = $(this).data("eachActivityVO").excelSaveActivityVo.saveExcelFileAsPDF[0].workBook;
                    var excSaveFetSaceExcFilePDFSName = $(this).data("eachActivityVO").excelSaveActivityVo.saveExcelFileAsPDF[0].sheetName;
                    var excSaveFetSaceExcFilePDFRExisting = $(this).data("eachActivityVO").excelSaveActivityVo.saveExcelFileAsPDF[0].replaceExisting;
                    $(this).find(".cs-SaveExcelFileAsPDF-par .cs-SaveExcelFileAsPDF-wBook input").val(excSaveFetSaceExcFilePDFWBook);
                    $(this).find(".cs-SaveExcelFileAsPDF-par .cs-SaveExcelFileAsPDF-SAF input").val(excSaveFetSaceExcFilePDFSName);
                    if(excSaveFetSaceExcFilePDFRExisting == "Y") {
                        $(this).find(".cs-SaveExcelFileAsPDF-par .cs-SaveExcelFileAsPDF-RE").prop("checked","true");
                    } 

                }
                else if ($(this).hasClass("cs-excel-write-child")) {
                    var grpNameVal = $(this).data("eachActivityVO").excelWriteActivityVo.writeText;
                    var grpOptionVal = "";
                    if(grpNameVal == "DataTable to Excel"){
                        grpOptionVal = `
                        <option value="select1">DataTable to Excel</option>
                        <option value="select2">Write Cell</option>
                        `;
                        $(this).find(".cs-write-common").addClass("cs-hide");
                        $(this).find(".cs-write-DataTabletoExcel-par").removeClass("cs-hide");
                    }
                    else if(grpNameVal == "Write Cell"){
                        grpOptionVal =`
                        <option value="select1">DataTable to Excel</option>
                        <option value="select2">Write Cell</option>
                        `;
                        $(this).find(".cs-write-common").addClass("cs-hide");
                        $(this).find(".cs-write-WriteCell-par").removeClass("cs-hide");
                    }
                    $(this).find(".writeGroup").html("");
                    $(this).find(".writeGroup").prepend(grpOptionVal);
                    $(this).find(".writeGroup").find("option:selected").text(grpNameVal);

                    var excWriteActWTR = $(this).data("eachActivityVO").excelWriteActivityVo.writeDataTable[0].whatToWrite;
                    var excWriteActDEST = $(this).data("eachActivityVO").excelWriteActivityVo.writeDataTable[0].destination;
                    var excWriteActAPPD = $(this).data("eachActivityVO").excelWriteActivityVo.writeDataTable[0].append;
                    var excWriteActEHEAD = $(this).data("eachActivityVO").excelWriteActivityVo.writeDataTable[0].excludeHeader;
                    $(this).find(".cs-write-DataTabletoExcel-par").find(".cs-WriteDataTab-wtw input").val(excWriteActWTR);
                    $(this).find(".cs-write-DataTabletoExcel-par").find(".cs-WriteDataTab-dest input").val(excWriteActDEST);
                    if(excWriteActAPPD == "Y") {
                        $(this).find(".cs-write-DataTabletoExcel-par .cs-WriteDataTab-append").prop("checked","true");
                    }
                    if(excWriteActEHEAD == "Y") {
                        $(this).find(".cs-write-DataTabletoExcel-par .cs-WriteDataTab-Eheader").prop("checked","true");
                    }

                    var excWriteActCellWTW = $(this).data("eachActivityVO").excelWriteActivityVo.writeCell[0].whatToWrite;
                    var excWriteActCellWreTW = $(this).data("eachActivityVO").excelWriteActivityVo.writeCell[0].whereToWrite;
                    var excWriteActCellAIR= $(this).data("eachActivityVO").excelWriteActivityVo.writeCell[0].autoIncrementRow;
                    $(this).find(".cs-write-WriteCell-par").find(".cs-writeWC-whattow input").val(excWriteActCellWTW);
                    $(this).find(".cs-write-WriteCell-par").find(".cs-writeWC-wheretow input").val(excWriteActCellWreTW);
                    if(excWriteActCellAIR == "Y") {
                        $(this).find(".cs-write-WriteCell-par .cs-writeWC-autoIncRow").prop("checked","true");
                    }
                }
                else if ($(this).hasClass("cs-at-con-if")) {
                    console.log($(this).data("eachActivityVO").conditionalActivityVO)
                    $(this).data("eachActivityVO").conditionalActivityVO.playbackActivityVOs = [];
                    var getExpressionType = $(this).data("eachActivityVO").conditionalActivityVO.expressionType;
                    var getCustomExpression = $(this).data("eachActivityVO").conditionalActivityVO.customExpression;
                    var getOperator = $(this).data("eachActivityVO").conditionalActivityVO.operator;
                    var getRightExprType = $(this).data("eachActivityVO").conditionalActivityVO.rightExpressionType.substring(0, 3);
                    var getLeftExprType = $(this).data("eachActivityVO").conditionalActivityVO.leftExpressionType.substring(0, 3);
                    var getRightExprValue = $(this).data("eachActivityVO").conditionalActivityVO.rightExpressionValue;
                    var getLeftExprValue = $(this).data("eachActivityVO").conditionalActivityVO.leftExpressionValue;
                    // var getTheAddIconValue = $(this).data("eachActivityVO").conditionalActivityVO.expressionAdd;
                    // var getTheDeleteIconValue =$(this).data("eachActivityVO").conditionalActivityVO.expressionDelete;
                    if (getExpressionType == "Standard") {
                        $(this).find(".cs-left-expr .cs-dd-exp-typ").text(getLeftExprType);
                        $(this).find(".cs-left-expr input").val(getLeftExprValue);
                        $(this).find(".cs-right-expr .cs-dd-exp-typ").text(getRightExprType);
                        $(this).find(".cs-right-expr input").val(getRightExprValue);
                        $(this).find(".cs-operator input").val(getOperator);
                        // $(this).find(".cs-con-exp-sav").trigger("click");
                    } else if (getExpressionType == "Custom") {
                        $(this).find(".cs-cus-exp-tog").trigger("click");
                        $(this).find(".cs-at-dd-expr-txtar textarea").val(getCustomExpression);
                        // $(this).find(".cs-con-exp-sav").trigger("click");
                    }



                    $(this).addClass("cond-append-act");
                    $(".cond-append-act").find("> .cs-add-exp-blk").find(".cs-at-dd-exprs").remove();
                    $.each($(this).data("eachActivityVO").conditionalActivityVO.condition, function(ind, val) {

                    
                        var condHtml = `<div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad cond-active">
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                                    <label>Left Expression</label>
                                                    <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                                    <input type="text" placeholder="Select Expression" value="${val.leftexp}" class="cs-ab-textinput"  />
                                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                                    <label>Operators</label>
                                                    <input type="text" placeholder="Select Operators" value="${val.operator}" class="cs-cond-opr" />
                                                </div>
                                            </div>
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                                    <label>Right Expression</label>
                                                    <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                                    <input type="text" placeholder="Select Expression" value="${val.rightexp}" class="cs-ab-textinput" />
                                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="cs-cell-3f">
                                            <span class="cs-remove-activity-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                                            <i class="icon-cs-delete"></i>
                                            </span>
                                            <span class="cs-remove-activity-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                            <i class="icon-cs-new"></i>
                                            </div>
                                        </div>`
                            $(".cond-append-act").find("> .cs-add-exp-blk").append(condHtml)
                           
                            if (val.getConditionalValue != ""){
                                var dropcondHtml = `
                                    <div class="cs-pb-condion-label cs-badge-info cs-inline " data-cs-dropdown="#cs-pb-condition">
                                                <span class="cs-whitec cs-pull-left">&&</span>
                                                <em class="cs-ts-21 cs-whitec icon-mat-arrow_drop_down"></em>
                                    </div>
                                            
                                    `
                                $(".cond-active").append(dropcondHtml);
                                }
                            

                            $(".cond-active").removeClass("cond-active")

                    });
                    $(".cond-append-act").removeClass("cond-append-act");

                } 
                else if ($(this).hasClass("cs-at-con-elseif")) {
                    $(this).data("eachActivityVO").conditionalActivityVO.playbackActivityVOs = [];
                    var getExpressionType = $(this).data("eachActivityVO").conditionalActivityVO.expressionType;
                    var getCustomExpression = $(this).data("eachActivityVO").conditionalActivityVO.customExpression;
                    var getOperator = $(this).data("eachActivityVO").conditionalActivityVO.operator;
                   
                    if (getExpressionType == "Standard") {
                         var getRightExprType = $(this).data("eachActivityVO").conditionalActivityVO.rightExpressionType.substring(0, 3);
                         var getLeftExprType = $(this).data("eachActivityVO").conditionalActivityVO.leftExpressionType.substring(0, 3);
                         var getRightExprValue = $(this).data("eachActivityVO").conditionalActivityVO.rightExpressionValue;
                         var getLeftExprValue = $(this).data("eachActivityVO").conditionalActivityVO.leftExpressionValue;
                        $(this).find(".cs-left-expr .cs-dd-exp-typ").text(getLeftExprType);
                        $(this).find(".cs-left-expr input").val(getLeftExprValue);
                        $(this).find(".cs-right-expr .cs-dd-exp-typ").text(getRightExprType);
                        $(this).find(".cs-right-expr input").val(getRightExprValue);
                        $(this).find(".cs-operator input").val(getOperator);
                        $(this).find(".cs-con-exp-sav").trigger("click");
                    } else if (getExpressionType == "Custom") {
                        $(this).find(".cs-cus-exp-tog").trigger("click");
                        $(this).find(".cs-at-dd-expr-txtar textarea").val(getCustomExpression);
                        $(this).find(".cs-con-exp-sav").trigger("click");
                    }
                } 
                else if ($(this).hasClass("cs-at-con-endif")) {
                    $(this).data("eachActivityVO").conditionalActivityVO.playbackActivityVOs = [];
                } 
                else if ($(this).hasClass("cs-conditionnActivity")) {
                    $(this).data("eachActivityVO").conditionalActivitySet = [];
                } 
                else if ($(this).hasClass("cs-verificationActivity")) {
                    var getMessage = $(this).data("eachActivityVO").verificationActivityVO.message;
                    var getExpressionType = $(this).data("eachActivityVO").verificationActivityVO.expressionType;
                    var getScreenShot = $(this).data("eachActivityVO").verificationActivityVO.isScreenshotRequired;
                    var getRightExprValue = $(this).data("eachActivityVO").verificationActivityVO.rightExpressionValue;
                    var getLeftExprValue = $(this).data("eachActivityVO").verificationActivityVO.leftExpressionValue;
                
                    
                    if (getScreenShot == "N") {
                        $(this).find(".cs-snapshot").trigger("click");
                    }
                    if (getExpressionType == "Standard") {
                        var getOperator = $(this).data("eachActivityVO").verificationActivityVO.operator;
                        if($(this).data("eachActivityVO").verificationActivityVO.rightExpressionType.substring(0, 3) == "Ima"){
                            var getRightExprType = "Img";
                            $(this).find('.cs-right-expr .cs-ab-textinput').hide();
                            $(this).find('.cs-right-expr .cs-ab-imageinput').show();
                            $(this).find('.cs-right-expr .cs-ab-imageinput img').attr('src' ,getRightExprValue )
                        }
                        else{
                            var getRightExprType = $(this).data("eachActivityVO").verificationActivityVO.rightExpressionType.substring(0, 3);
                            $(this).find(".cs-right-expr .cs-dd-exp-typ").text(getRightExprType);
                            $(this).find(".cs-right-expr input").val(getRightExprValue);
    
                        }
                        if($(this).data("eachActivityVO").verificationActivityVO.leftExpressionType.substring(0, 3) == "Ima"){
                            var getLeftExprType = "Img";
                            $(this).find('.cs-left-expr .cs-ab-textinput').hide();
                            $(this).find('.cs-left-expr .cs-ab-imageinput').show();
                            $(this).find('.cs-left-expr .cs-ab-imageinput img').attr('src' ,getLeftExprValue )
                        }
                        else{
                            var getLeftExprType = $(this).data("eachActivityVO").verificationActivityVO.leftExpressionType.substring(0, 3);
                            $(this).find(".cs-left-expr .cs-dd-exp-typ").text(getLeftExprType);
                            $(this).find(".cs-left-expr input").val(getLeftExprValue);
                        }

                        $(this).find(".cs-operator input").val(getOperator);
                        $(this).find(".cs-error-message textarea").val(getMessage);

                    } else if (getExpressionType == "Custom") {
                        var getCustomExpression = $(this).data("eachActivityVO").verificationActivityVO.customExpression;
                        $(this).find(".cs-cus-exp-tog").trigger("click");
                        $(this).find(".cs-at-dd-expr-txtar textarea").val(getCustomExpression);
                        $(this).find(".cs-error-message textarea").val(getMessage);
                    }
                } 
                else if ($(this).hasClass("cs-assertionActivity")) {
                    var getMessage = $(this).data("eachActivityVO").assertionActivityVO.message;
                    var getExpressionType = $(this).data("eachActivityVO").assertionActivityVO.expressionType;
                   
                    
                    if (getExpressionType == "Standard") {
                        var getOperator = $(this).data("eachActivityVO").assertionActivityVO.operator;
                        var getRightExprValue = $(this).data("eachActivityVO").assertionActivityVO.rightExpressionValue;
                        var getLeftExprValue = $(this).data("eachActivityVO").assertionActivityVO.leftExpressionValue;

                        if( $(this).data("eachActivityVO").assertionActivityVO.rightExpressionType.substring(0, 3) == "Ima"){
                            var getRightExprType = "Img";
                            $(this).find('.cs-right-expr .cs-ab-textinput').hide();
                            $(this).find('.cs-right-expr .cs-ab-imageinput').show();
                            $(this).find('.cs-right-expr .cs-ab-imageinput img').attr('src' ,getRightExprValue )
                        }
                        else{
                            var getRightExprType = $(this).data("eachActivityVO").assertionActivityVO.rightExpressionType.substring(0, 3);
                            $(this).find(".cs-right-expr .cs-dd-exp-typ").text(getRightExprType);
                            $(this).find(".cs-right-expr input").val(getRightExprValue);
                        }
                        if($(this).data("eachActivityVO").assertionActivityVO.leftExpressionType.substring(0, 3) == "Ima"){
                            var getLeftExprType = "Img";
                            $(this).find('.cs-left-expr .cs-ab-textinput').hide();
                            $(this).find('.cs-left-expr .cs-ab-imageinput').show();
                            $(this).find('.cs-left-expr .cs-ab-imageinput img').attr('src' ,getLeftExprValue )
                        }
                        else{
                            var getLeftExprType = $(this).data("eachActivityVO").assertionActivityVO.leftExpressionType.substring(0, 3);
                            $(this).find(".cs-left-expr .cs-dd-exp-typ").text(getLeftExprType);
                            $(this).find(".cs-left-expr input").val(getLeftExprValue);
                        }

                        $(this).find(".cs-operator input").val(getOperator);
                        $(this).find(".cs-error-message textarea").val(getMessage);

                    } else if (getExpressionType == "Custom") {
                         var getCustomExpression = $(this).data("eachActivityVO").assertionActivityVO.customExpression;
                        $(this).find(".cs-cus-exp-tog").trigger("click");
                        $(this).find(".cs-at-dd-expr-txtar textarea").val(getCustomExpression);
                        $(this).find(".cs-error-message textarea").val(getMessage);
                    }
                } 
                else if ($(this).hasClass("cs-each-element")) {
                    // var getActionType = $(this).data("eachActivityVO").elementActivityVO.elementAction;
                    // var getActionValueType = $(this).data("eachActivityVO").elementActivityVO.actionValueType;
                    // var getActionValue = $(this).data("eachActivityVO").elementActivityVO.actionValue;
                    // var getXposition = $(this).data("eachActivityVO").elementActivityVO.dropXOffset;
                    // var getYposition = $(this).data("eachActivityVO").elementActivityVO.dropYOffset;
                    // if(getActionType != "" && getActionType != undefined) {
                    //     $(this).find(".cs-at-eleacttyp-clk").trigger("click");
                    //     $("#cs-at-elementactiontype li").each(function() {
                    //         if ($(this).find("span").text().trim() == getActionType) {
                    //             $(this).trigger("click");
                    //         }
                    //     });
                    // }
                    // if(getActionType != "" && getActionType != undefined) {
                    //     $(this).find(".cs-at-ele-inp-typclk").trigger("click");
                    //     $("#cs-at-condexpresselectndroplist .cs-cndx-exp-list-each").each(function() {
                    //         if ($(this).find(".cs-cndx-exp-list-atr").next("span").text() == getActionValueType) {
                    //             $(this).trigger("click");
                    //         }
                    //     });
                    // }
                    
                    // if(getXposition == "" && getYposition == ""&&getActionValue == undefined && undefined==getActionType && getActionValueType=="Element") {
                    //     var inpexptext = $(this).attr("data-contentvalue");
                    //     if (inpexptext == undefined) {
                    //         $(this).find(".cs-reset-element").trigger("click");
                    //     }
                    // }
                    
                    // if(getXposition == "" && getYposition == "") {
                    //   if(getActionValue != "") {
                    //     $(this).find(".cs-at-ele-inp-typ .cs-at-contentEntryinput").each(function() {
                    //       if(!$(this).hasClass("cs-hide")) {
                    //         $(this).find("input").val(getActionValue);
                    //       }
                    //     });
                    //   }
                    // }
                    // else {
                    //   $(this).find(".cs-at-ele-inp-typ .cs-at-contentEntryinput").each(function() {
                    //     if(!$(this).hasClass("cs-hide")) {
                    //       $(this).find("input.cs-xposition").val(getXposition);
                    //       $(this).find("input.cs-yposition").val(getYposition);
                    //         }
                    //     });
                    // }
                } 
                else if ($(this).hasClass("cs-playback-drop")) {
                    $(this).addClass("plbk-fetch");
                    var mapdvar = $(this).data("eachActivityVO").entailPlaybackVO.entailPlaybackParamsVOs;
                    var playbackId = $(this).data("eachActivityVO").entailPlaybackVO.playbackId;
                    var playbackName = $(this).data("eachActivityVO").playbackName;
                    var varele = $(this).find(".cs-at-top-act-var-elem").find("a.active").text();
                    var getVarName = [];
                    $(mapdvar).each(function(index, val) {
                        var varnam = val.variableName;
                        var valuenam = val.value;
                        var dtType1 = "";
                        var dtType2 = "";
                        $(".cs-variable-list-block li").each(function() {
                            var livarnam = $(this).data("VariableEachData").variableName;
                            if(varnam == livarnam) {
                                dtType1 = $(this).data("VariableEachData").dataType;
                            }
                        });
                        $(".cs-at-rit-playback-list li").each(function() {
                            if($(this).data("playBackEachData").displayName == playbackName || $(this).data("playBackEachData").playbackId == playbackId) {
                                var getVar = $(this).data("playBackEachData").variableVOs;
                                $(getVar).each(function(objj, vall) {
                                    if(vall.variableName == valuenam) {
                                        dtType2 = vall.dataType;
                                    }
                                });
                            }
                        });
                        getVarName[index] = varnam;
                        var mapedli = '<li class="clearfix cs-tspad cs-bspad cs-cur cs-pr cs-at-mappedenable">' +
                            '<div class="cs-cell-11 cs-at-mappedpart cs-mapped-left" data-valtype="' + varele + '">' +
                            '<span class="clearfix cs-ts-14 cs-tw-600 cs-cell-22 cs-truncate cs-mapper-name">' + varnam + '</span>' +
                            '<span class="clearfix cs-ts-10 cs-cell-22 cs-truncate cs-mapper-type">'+ dtType1 +'</span>' +
                            '<div class="cs-at-mapped"></div>' +
                            '</div>' +
                            '<div class="cs-cell-11 cs-pull-right cs-at-mappedpart cs-mapped-right">' +
                            '<span class="clearfix cs-ts-14 cs-tw-600 cs-cell-22 cs-truncate cs-lpad cs-mapper-name">' + valuenam + '</span>' +
                            '<span class="clearfix cs-ts-10 cs-cell-22 cs-truncate cs-lpad cs-mapper-type">'+ dtType2 +'</span>' +
                            '</div>' +
                            '<a class="cs-cur cs-pa cs-pa-r cs-at-mappedeach-delete"><i class="icon-cs-delete cs-ts-12"></i></a>' +
                            '</li>';
                            mapedli = $(mapedli).data("mappedData",val);
                        $(".plbk-fetch").find(".cs-at-mappedpart").find("ul").append(mapedli);
                    });
					var plybknm = $(this).find(".cs-at-playbackDisplayName").text();
					var parplybknm = $(".cs-at-pb-rightpanel .cs-at-box-playbackhead .cs-at-box-head-field").text();
					if(plybknm == parplybknm){
						$(".cs-variable-list-block li").each(function() {
							var varData = $(this).data("VariableEachData");
							var varnam = $(this).data("VariableEachData").variableName;
							var datyp = $(this).data("VariableEachData").dataType;
							var parmtyp = $(this).data("VariableEachData").paramType;
							var leftlisteachhtml = '<li class="clearfix cs-tspad cs-bspad cs-cur cs-pr">' +
								'<span class="clearfix cs-ts-14 cs-tw-600 cs-cell-20 cs-truncate cs-mapper-name">' + varnam + '</span>' +
								'<span class="clearfix cs-ts-10 cs-cell-20 cs-truncate cs-mapper-type">' + datyp + '</span>' +
								'<span class="cs-pa cs-ts-11 cs-tw-600 cs-at-mappingeach">' +
								'<i class="icon-cs-succeed-o cs-greenc"></i>' +
								'</span>' +
								'</li>';
							leftlisteachhtml = $(leftlisteachhtml).data("VariableEachData",varData);
							if(parmtyp == "IN"){
								$(".plbk-fetch #var-in .cs-plbk-left-list").append(leftlisteachhtml);
							}else if(parmtyp == "OUT"){
								$(".plbk-fetch #var-out .cs-plbk-left-list").append(leftlisteachhtml);
							}else if(parmtyp == "INOUT"){
								$(".plbk-fetch #var-inout .cs-plbk-left-list").append(leftlisteachhtml);
							}
							$(".cs-scroll-2,.cs-scroll").perfectScrollbar();
						});
					}
                    
                    var rightvar = $(this).data("eachActivityVO").entailPlaybackVO.variablesVOs;
                    $(rightvar).each(function(objj, vall) {
                        var varnamm = vall.variableName;
                        var valuetypp = vall.dataType;
                        var rigtli = '<li class="clearfix cs-tspad cs-bspad cs-cur cs-pr">' +
                            '<span class="clearfix cs-ts-14 cs-tw-600 cs-cell-20 cs-truncate cs-mapper-name">' + varnamm + '</span>' +
                            '<span class="clearfix cs-ts-10 cs-cell-20 cs-truncate cs-mapper-type">' + valuetypp + '</span>' +
                            '<span class="cs-pa cs-ts-11 cs-tw-600 cs-at-mappingeach">' +
                            '<i class="icon-cs-succeed-o cs-greenc"></i>' +
                            '</span>' +
                            '</li>';
                        rigtli = $(rigtli).data("inparamVo",vall);
						var x = 0;
						$(".plbk-fetch").find(".cs-at-mappedpart ul li").each(function() {
							var mapname = $(this).find(".cs-mapped-right").find(".cs-mapper-name").text();
							if(varnamm == mapname){
								x = 1;
								return false;
							}
						});
						if(x == 0){
							 $(".plbk-fetch").find(".cs-mapping-list-right").find("ul").append(rigtli);
						}
                    });
                    $(this).closest(".cs-at-layouteachmain").find(".cs-each-element").each(function() {
                        var plfElementName = $(this).find(".cs-at-elementname").text();
                        var plfElementtyp = $(this).attr("data-eletype");
                        var elelisteachhtml = '<li class="clearfix cs-tspad cs-bspad cs-cur cs-pr">' +
                            '<span class="clearfix cs-ts-14 cs-tw-600 cs-cell-20 cs-truncate cs-mapper-name">' + plfElementName + '</span>' +
                            '<span class="clearfix cs-ts-10 cs-cell-20 cs-truncate cs-mapper-type">' + plfElementtyp + '</span>' +
                            '<span class="cs-pa cs-ts-11 cs-tw-600 cs-at-mappingeach">' +
                            '<i class="icon-cs-succeed-o cs-greenc"></i>' +
                            '</span>' +
                            '</li>';
                        $(".plbk-fetch .cs-plbk-ele-list").append(elelisteachhtml);
                    });
                    for(var i=0; i<getVarName.length; i++) {
                        $(this).find(".cs-plbk-left-list li").each(function() {
                            if($(this).find(".cs-mapper-name").text() == getVarName[i]) {
                                $(this).remove();
                            }
                        });
                    }
                    $(this).removeClass("plbk-fetch");
					playbknameappendinlist();
                } 
                else if ($(this).hasClass("cs-openurlActivity")) {
                    var getURLType = $(this).data("eachActivityVO").openURLActivityVO.urlType;
                    var getURL = $(this).data("eachActivityVO").openURLActivityVO.URL;
                    $(this).find(".cs-openurl-dd-clk").trigger("click");
                    console.log(getURLType);
                    
                    $("#cs-at-condexpresselectndroplist .cs-cndx-exp-list-each").each(function() {
                        if ($(this).find(".cs-cndx-exp-list-atr").next("span").text() == getURLType) {
                            $(this).trigger("click");                            
                        }
                    });
                    if ($(this).find(".cs-openurl-dd-clk >span.cs-label").text() == "Var") {
                        $(this).find(".cs-at-contentEntryinput").each(function() {
                            if($(this).attr("data-contentvalue")=="Var") {
                              $(this).find("input").val(getURL);
                            }
                        });
                    }
                    else if ($(this).find(".cs-openurl-dd-clk >span.cs-label").text() == "Con") {
                        $(this).find(".cs-at-contentEntryinput").each(function() {
                            if($(this).attr("data-contentvalue")=="Con") {
                              $(this).find("input").val(getURL);
                            }
                        });
                    }
                    else if (getURLType == "Image") {
                        // $(this).find("input").val(getURL);
                        // $(this).find('.cs-ab-imgclick-append').show();
                        // $(this).find('.cs-at-contentEntryinput').hide();
                        $(this).find('.cs-ab-imgappend-list img').attr('src' ,getURL )
                    }
                    
                    var funName = $(this).data("eachActivityVO").openURLActivityVO.functionName;
                    var resName = $(this).data("eachActivityVO").openURLActivityVO.responsibilityName;
                    var appName = $(this).data("eachActivityVO").openURLActivityVO.applicationName;
                    var sgName = $(this).data("eachActivityVO").openURLActivityVO.securityGroupName;
                    var langName = $(this).data("eachActivityVO").openURLActivityVO.languageShortName;
                    var paramName = $(this).data("eachActivityVO").openURLActivityVO.urlParamValue;
                    $(".cs-ou-fun-inp").val(funName);
                    $(".cs-ou-res-inp").val(resName);
                    $(".cs-ou-app-inp").val(appName);
                    $(".cs-ou-sg-inp").val(sgName);
                    $(".cs-ou-lang-inp").val(langName);
                    $(".cs-ou-param-inp").val(paramName);
                } 
                else if ($(this).hasClass("cs-assignmentActivity")) {
                    var getValueType = $(this).data("eachActivityVO").assignmentActivityVO.valueType;
                    var getVariableValue = $(this).data("eachActivityVO").assignmentActivityVO.variableValue;
                    var getVariableName = $(this).data("eachActivityVO").assignmentActivityVO.variableName;
                    $(this).find(".cs-cdx-exp-click").trigger("click");
                    $("#cs-at-condexpresselectndroplist .cs-cndx-exp-list-each").each(function() {
                        if ($(this).find(".cs-cndx-exp-list-atr").next("span").text() == getValueType) {
                            $(this).trigger("click");
                        }
                    });
                    if(getValueType == "Expression") {
                        $(this).find(".cs-asgnm-cus-exp input").val(getVariableValue);
                    }
                    else if (getValueType == "Element") {
                        $(this).find(".cs-asgn-elem input").val(getVariableValue);
                    }
                    else if (getValueType == "Variable") {
                        $(this).find(".cs-asgn-var input").val(getVariableValue);
                    }
                    else if (getValueType == "Image") {
                        console.log("hai");
                        
                        $(this).find(".cs-ab-imgappend-list img").attr('src' , getVariableValue)
                    }

                    $(this).find(".cs-pramtr-trg-blk-tog").prev("div").find("input").val(getVariableName);
                }  
                else if ($(this).hasClass("cs-loginActivity")) {
					var getUsername = $(this).data("eachActivityVO").loginActivityVo.userName;
                    var getPassword = $(this).data("eachActivityVO").loginActivityVo.password;
					$(this).find(".cs-login-username input").val(getUsername);
					$(this).find(".cs-login-password input").val(getPassword);
                } 
                else if ($(this).hasClass("cs-ShortcutActivity")) {
                    var getShortcutKey = $(this).data("eachActivityVO").hotkeyActivityVo.hotkeyValue;
                    $(this).find(".cs-shortcutkeyentry").val(getShortcutKey);
                }
                else if ($(this).hasClass("cs-fileActivity")) {
                    var excsouVal =  $(this).data("eachActivityVO").FileActivityVo.source;
                    var excfileType =  $(this).data("eachActivityVO").FileActivityVo.filetype;
                    var exctargetVal =  $(this).data("eachActivityVO").FileActivityVo.target;

                    $(this).find('.cs-fileactivity-inp.cs-fileactivity-source input').val(excsouVal);
                    $(this).find('.cs-fileactivity-inp select option:selected').text(excfileType);
                    $(this).find('.cs-fileactivity-inp.cs-fileactivity-target input').val(exctargetVal);
                    var val = excfileType;
                    if(val == "Write") {
                        $(this).find("select").html("");
                        $(this).find("select").append(`
                          <option value="Write">Write</option>
                          <option value="Read">Read</option>
                        `)
                    }
                    else {
                        $(this).find("select").html("");
                        $(this).find("select").append(`
                          <option value="Read">Read</option>
                          <option value="Write">Write</option>
                        `)
                    }

                } 
                else if ($(this).hasClass("cs-addRowSty")) {
                    var addTar =  $(this).data("eachActivityVO").AddRowActivityVo.target;
                    var addRowType =  $(this).data("eachActivityVO").AddRowActivityVo.rowtype;
                    var EnterExp =  $(this).data("eachActivityVO").AddRowActivityVo.addrowexpression;
                    var add =  $(this).data("eachActivityVO").AddRowActivityVo.addname;
                    var sName =  $(this).data("eachActivityVO").AddRowActivityVo.sprintname;
                    var cName =  $(this).data("eachActivityVO").AddRowActivityVo.conectionname;
                    var vName =  $(this).data("eachActivityVO").AddRowActivityVo.versionname;
                    
                    var addType =  $(this).data("eachActivityVO").AddRowActivityVo.addnameType;
                    var sNameType =  $(this).data("eachActivityVO").AddRowActivityVo.sprintnameType;
                    var cNameType =  $(this).data("eachActivityVO").AddRowActivityVo.conectionnameType;
                    var vNameType =  $(this).data("eachActivityVO").AddRowActivityVo.versionnameType;
                    
                    $(this).find('.cs-addrow-inp.cs-addrow-datatable input').val(addTar);
                    $(this).find(".cs-addrow-inp select option:selected").text(addRowType);
                    $(this).find('.cs-addrow-inp.cs-add-row-login-inp input').val(EnterExp);
                    $(this).find('.cs-addrow-inp.cs-addName input').val(add);
                    $(this).find('.cs-addrow-inp.cs-sprintName input').val(sName);
                    $(this).find('.cs-addrow-inp.cs-conectionName input').val(cName);
                    $(this).find('.cs-addrow-inp.cs-versionName input').val(vName);

                    $(this).find(".cs-addrow-addrlist-par .cs-addname .cs-label-warning").text(addType);
                    $(this).find(".cs-addrow-addrlist-par .cs-sprintname .cs-label-warning").text(sNameType);
                    $(this).find(".cs-addrow-addrlist-par .cs-conectionname .cs-label-warning").text(cNameType);
                    $(this).find(".cs-addrow-addrlist-par .cs-versionname .cs-label-warning").text(vNameType);

                    // $.each($(this).data("eachActivityVO").AddRowActivityVo, function(ind, val) {
                    //    $(val).addnameType = addType;
                    //    $(val).sprintnameType = sNameType;
                    //    $(val).conectionnameType = cNameType;
                    //    $(val).versionnameType = vNameType;
                    // })

                    var val = addRowType;
                    if(val == "Data Row") {
                        $(this).closest(".cs-activityBlock").find(".cs-addrow-addrlist-par").removeClass("cs-hide");
                        $(this).closest(".cs-activityBlock").find(".cs-add-row-login-inp").addClass("cs-hide");
                        $(this).find(".addRowSelOpt").html("");
                        $(this).find(".addRowSelOpt").append(`
                            <option value="select2">Data Row</option>
                            <option value="select1">Array Row</option>
                        `)
                    }
                    else {
                        $(this).closest(".cs-activityBlock").find(".cs-add-row-login-inp").removeClass("cs-hide");
                        $(this).closest(".cs-activityBlock").find(".cs-addrow-addrlist-par").addClass("cs-hide");
                         $(this).find(".addRowSelOpt").html("");
                         $(this).find(".addRowSelOpt").append(`
                            <option value="select1">Array Row</option>
                            <option value="select2">Data Row</option>
                        `)
                    }  

                }
                else if ($(this).hasClass("cs-remRowSty")) {
                    var remDataTable =  $(this).data("eachActivityVO").RemRowActivityVo.datatable;
                    var remRowtype =  $(this).data("eachActivityVO").RemRowActivityVo.rowtype;
                    var remRowVal =  $(this).data("eachActivityVO").RemRowActivityVo.rowindexval;

                    $(this).find('.cs-remrow-inp.cs-datatable input').val(remDataTable);
                    $(this).find('.cs-remrow-inp select option:selected').val(remRowtype);
                    $(this).find('.cs-remrow-inp.cs-rowindval input').val(remRowVal);

                    $(this).addClass("cond-append-act");
                    $(".cond-append-act").find(".cs-at-dd-exprs").remove();
                    var remThis = $(this);
                    $(remThis).find(".cs-remrow-addrlist-par").html("");
                    $.each($(this).data("eachActivityVO").RemRowActivityVo.condition, function(ind, val) {
                            var condHtml = `<div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad cond-active">
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-remrow-inp cs-left-expr cs-var-el-dd-click" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                                    <label>Attribute Name</label>
                                                    <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                                    <input type="text" placeholder="Select Expression" value="${val.attrName}" class="cs-ab-textinput"  />
                                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-remrow-inp cs-operator cs-var-el-dd-click cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                                    <label>Operators</label>
                                                    <input type="text" placeholder="Select Operators" value="${val.operator}" class="cs-cond-opr" />
                                                </div>
                                            </div>
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-remrow-inp cs-right-expr cs-var-el-dd-click" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                                    <label>Attribute Value</label>
                                                    <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                                    <input type="text" placeholder="Select Expression" value="${val.attVal}" class="cs-ab-textinput" />
                                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="cs-cell-3f">
                                            <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                                            <i class="icon-cs-delete"></i>
                                            </span>
                                            <span class="cs-remove-activity-datatable-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                            <i class="icon-cs-new"></i>
                                            </div>
                                        </div>`
                            $(remThis).find(".cs-remrow-addrlist-par").append(condHtml);
                            if (val.condVal != ""){
                                var dropcondHtml = `
                                    <div class="cs-pb-condion-label cs-badge-info cs-inline " data-cs-dropdown="#cs-pb-condition">
                                                <span class="cs-whitec cs-pull-left">${val.condVal}</span>
                                                <em class="cs-ts-21 cs-whitec icon-mat-arrow_drop_down"></em>
                                    </div>
                                           
                                    `
                                $(remThis).find(".cond-active").append(dropcondHtml);
                                }
                                $(remThis).find(".cond-active").removeClass("cond-active")

                    });
                    $(".cond-append-act").removeClass("cond-append-act")
                    
                    var val = remRowtype;
                    if(val == "Row") {
                        $(this).closest(".cs-activityBlock").find(".cs-remrow-addrlist-par").removeClass("cs-hide");
                        $(this).closest(".cs-activityBlock").find(".cs-rem-row-login-inp").addClass("cs-hide");
                         $(this).find("#remRowSelOpt").html("");
                         $(this).find("#remRowSelOpt").append(`
                            <option value="select2">Row</option>
                           <option value="select1">Row Index</option>
                        `)
                    }
                    else {
                        $(this).closest(".cs-activityBlock").find(".cs-rem-row-login-inp").removeClass("cs-hide");
                        $(this).closest(".cs-activityBlock").find(".cs-remrow-addrlist-par").addClass("cs-hide");
                         $(this).find("#remRowSelOpt").html("");
                         $(this).find("#remRowSelOpt").append(`
                            <option value="select1">Row Index</option>
                            <option value="select2">Row</option>
                        `)
                    }  

                } 
                else if ($(this).hasClass("cs-uptRowSty")) {
                    var uptDataTable =  $(this).data("eachActivityVO").UptRowActivityVo.dataTable;
                    var uptRowExp =  $(this).data("eachActivityVO").UptRowActivityVo.expression;
                    var uptRowType =  $(this).data("eachActivityVO").UptRowActivityVo.rowType;
                    var add =  $(this).data("eachActivityVO").UptRowActivityVo.addname;
                    var sName =  $(this).data("eachActivityVO").UptRowActivityVo.sprintname;
                    var cName =  $(this).data("eachActivityVO").UptRowActivityVo.conectionname;
                    var vName =  $(this).data("eachActivityVO").UptRowActivityVo.versionname;

                    var addType =  $(this).data("eachActivityVO").UptRowActivityVo.addnameType;
                    var sNameType =  $(this).data("eachActivityVO").UptRowActivityVo.sprintnameType;
                    var cNameType =  $(this).data("eachActivityVO").UptRowActivityVo.conectionnameType;
                    var vNameType =  $(this).data("eachActivityVO").UptRowActivityVo.versionnameType;

                    $(this).find('.cs-uptrow-inp.cs-datatable input').val(uptDataTable);
                    $(this).find('.cs-uptrow-inp select option:selected').val(uptRowType);
                    $(this).find('.cs-uptrow-inp.cs-expression input').val(uptRowExp);
                    $(this).find('.cs-uptrow-inp.cs-addName input').val(add);
                    $(this).find('.cs-uptrow-inp.cs-sprintName input').val(sName);
                    $(this).find('.cs-uptrow-inp.cs-conectionName input').val(cName);
                    $(this).find('.cs-uptrow-inp.cs-versionName input').val(vName);

                    $(this).find(".cs-upt-attr-par .cs-upt-addName .cs-label-warning").text(addType);
                    $(this).find(".cs-upt-attr-par .cs-upt-sprintName .cs-label-warning").text(sNameType);
                    $(this).find(".cs-upt-attr-par .cs-upt-connectionName .cs-label-warning").text(cNameType);
                    $(this).find(".cs-upt-attr-par .cs-upt-versionName .cs-label-warning").text(vNameType);

                    $(this).addClass("cond-append-act");
                    $(".cond-append-act").find(".cs-at-dd-exprs").remove();
                    var uptArrThis = $(this);
                    $(uptArrThis).find(".cs-row-con-par").html("");
                    $.each($(this).data("eachActivityVO").UptRowActivityVo.arrayRowCondition, function(ind, val) {
                        var condHtml = `<div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad cond-active">
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-uptrow-inp cs-left-expr cs-var-el-dd-click cs-var-el-dd-click" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                                    <label>Attribute Name</label>
                                                    <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                                    <input type="text" placeholder="Select Expression" value="${val.attrName}" class="cs-ab-textinput"  />
                                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-uptrow-inp cs-operator cs-var-el-dd-click cs-var-el-dd-click cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                                    <label>Operators</label>
                                                    <input type="text" placeholder="Select Operators" value="${val.operator}" class="cs-cond-opr" />
                                                </div>
                                            </div>
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-uptrow-inp cs-right-expr cs-var-el-dd-click cs-var-el-dd-click" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                                    <label>Attribute Value</label>
                                                    <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                                    <input type="text" placeholder="Select Expression" value="${val.attVal}" class="cs-ab-textinput" />
                                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="cs-cell-3f">
                                            <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                                            <i class="icon-cs-delete"></i>
                                            </span>
                                            <span class="cs-remove-activity-datatable-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                            <i class="icon-cs-new"></i>
                                            </div>
                                        </div>`
                            $(uptArrThis).find(".cs-row-con-par").append(condHtml)
                            if (val.condVal != ""){
                                var dropcondHtml = `
                                    <div class="cs-pb-condion-label cs-badge-info cs-inline " data-cs-dropdown="#cs-pb-condition">
                                                <span class="cs-whitec cs-pull-left">${val.condVal}</span>
                                                <em class="cs-ts-21 cs-whitec icon-mat-arrow_drop_down"></em>
                                    </div>
                                            
                                    `
                                    $(uptArrThis).find(".cond-active").append(dropcondHtml);
                                }
                            $(".cond-active").removeClass("cond-active")

                    });
                    $(uptArrThis).find(".cs-uptrow-addrlist-par .cs-uptrow-exprs").html("");
                    $.each($(this).data("eachActivityVO").UptRowActivityVo.dataRowCondition, function(ind, val) {
                        var condHtml = `<div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad cond-active">
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-uptrow-inp cs-left-expr cs-var-el-dd-click cs-var-el-dd-click" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                                    <label>Attribute Name</label>
                                                    <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                                    <input type="text" placeholder="Select Expression" value="${val.attrName}" class="cs-ab-textinput"  />
                                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-uptrow-inp cs-operator cs-var-el-dd-click cs-var-el-dd-click cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                                    <label>Operators</label>
                                                    <input type="text" placeholder="Select Operators" value="${val.operator}" class="cs-cond-opr" />
                                                </div>
                                            </div>
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-uptrow-inp cs-right-expr cs-var-el-dd-click cs-var-el-dd-click" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                                    <label>Attribute Value</label>
                                                    <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                                    <input type="text" placeholder="Select Expression" value="${val.attVal}" class="cs-ab-textinput" />
                                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="cs-cell-3f">
                                            <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                                            <i class="icon-cs-delete"></i>
                                            </span>
                                            <span class="cs-remove-activity-datatable-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                            <i class="icon-cs-new"></i>
                                            </div>
                                        </div>`
                            $(uptArrThis).find(".cs-uptrow-exprs").append(condHtml)
                            if (val.condVal != ""){
                                var dropcondHtml = `
                                    <div class="cs-pb-condion-label cs-badge-info cs-inline " data-cs-dropdown="#cs-pb-condition">
                                                <span class="cs-whitec cs-pull-left">${val.condVal}</span>
                                                <em class="cs-ts-21 cs-whitec icon-mat-arrow_drop_down"></em>
                                    </div>
                                            
                                    `
                                    $(uptArrThis).find(".cond-active").append(dropcondHtml);
                                }
                            $(".cond-active").removeClass("cond-active")

                    });
                    $(".cond-append-act").removeClass("cond-append-act")

                    var val = uptRowType;
                    if(val == "Data Row") {
                        $(this).closest(".cs-activityBlock").find(".cs-uptrow-addrlist-par").removeClass("cs-hide");
                        $(this).closest(".cs-activityBlock").find(".cs-upt-row-login-inp").addClass("cs-hide");
                        $(this).closest(".cs-activityBlock").find(".cs-row-con-par").addClass("cs-hide");
                        $(this).find("#uptRowSelOpt").html("");
                        $(this).find("#uptRowSelOpt").append(`
                            <option value="select2">Data Row</option>   
                            <option value="select1">Array Row</option>
                        `)
                    }
                    else {
                        $(this).closest(".cs-activityBlock").find(".cs-upt-row-login-inp").removeClass("cs-hide");
                        $(this).closest(".cs-activityBlock").find(".cs-uptrow-addrlist-par").addClass("cs-hide");
                        $(this).closest(".cs-activityBlock").find(".cs-row-con-par").removeClass("cs-hide");
                        $(this).find("#uptRowSelOpt").html("");
                        $(this).find("#uptRowSelOpt").append(`
                            <option value="select1">Array Row</option>
                            <option value="select2">Data Row</option>
                        `)
                    }  

                }
                else if ($(this).hasClass("cs-filRowSty")) {
                    var filDataTable =  $(this).data("eachActivityVO").FilRowActivityVo.dataTable;
                    var filRtype =  $(this).data("eachActivityVO").FilRowActivityVo.rowType;
                    var filrowIndexVal =  $(this).data("eachActivityVO").FilRowActivityVo.rowIndexVal;

                    $(this).find('.cs-filrow-inp.cs-datatable input').val(filDataTable);
                    $(this).find('.cs-filrow-inp select option:selected').val(filRtype);
                    $(this).find('.cs-filrow-inp.cs-rowindexval input').val(filrowIndexVal);

                    $(this).addClass("cond-append-act");
                    $(".cond-append-act").find(".cs-at-dd-exprs").remove();
                    var filArrThis = $(this);
                    $(filArrThis).find(".cs-fil-row-con").html("");
                    $.each($(this).data("eachActivityVO").FilRowActivityVo.byValcondition, function(ind, val) {
                        var condHtml = `<div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad cond-active">
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-uptrow-inp cs-left-expr cs-var-el-dd-click cs-var-el-dd-click" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                                    <label>Attribute Name</label>
                                                    <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                                    <input type="text" placeholder="Select Expression" value="${val.attrName}" class="cs-ab-textinput"  />
                                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-uptrow-inp cs-operator cs-var-el-dd-click cs-var-el-dd-click cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                                    <label>Operators</label>
                                                    <input type="text" placeholder="Select Operators" value="${val.operator}" class="cs-cond-opr" />
                                                </div>
                                            </div>
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-uptrow-inp cs-right-expr cs-var-el-dd-click cs-var-el-dd-click" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                                    <label>Attribute Value</label>
                                                    <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                                    <input type="text" placeholder="Select Expression" value="${val.attVal}" class="cs-ab-textinput" />
                                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="cs-cell-3f">
                                            <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                                            <i class="icon-cs-delete"></i>
                                            </span>
                                            <span class="cs-remove-activity-datatable-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                            <i class="icon-cs-new"></i>
                                            </div>
                                        </div>`
                                        $(filArrThis).find(".cs-fil-row-con").append(condHtml)
                            if (val.condVal != ""){
                                var dropcondHtml = `
                                    <div class="cs-pb-condion-label cs-badge-info cs-inline " data-cs-dropdown="#cs-pb-condition">
                                                <span class="cs-whitec cs-pull-left">${val.condVal}</span>
                                                <em class="cs-ts-21 cs-whitec icon-mat-arrow_drop_down"></em>
                                    </div>
                                            
                                    `
                                    $(filArrThis).find(".cond-active").append(dropcondHtml);
                                }
                            $(".cond-active").removeClass("cond-active")

                    });
                    $(filArrThis).find(".cs-filrow-addrlist-par").html("");
                    $.each($(this).data("eachActivityVO").FilRowActivityVo.byCondition, function(ind, val) {
                        var condHtml = `<div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad cond-active">
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-uptrow-inp cs-left-expr cs-var-el-dd-click cs-var-el-dd-click" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                                    <label>Attribute Name</label>
                                                    <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                                    <input type="text" placeholder="Select Expression" value="${val.attrName}" class="cs-ab-textinput"  />
                                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-uptrow-inp cs-operator cs-var-el-dd-click cs-var-el-dd-click cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                                    <label>Operators</label>
                                                    <input type="text" placeholder="Select Operators" value="${val.operator}" class="cs-cond-opr" />
                                                </div>
                                            </div>
                                            <div class="cs-cell-7">
                                                <div class="cs-input cs-uptrow-inp cs-right-expr cs-var-el-dd-click cs-var-el-dd-click" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                                    <label>Attribute Value</label>
                                                    <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                                    <input type="text" placeholder="Select Expression" value="${val.attVal}" class="cs-ab-textinput" />
                                                    <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                        <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="cs-cell-3f">
                                            <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                                            <i class="icon-cs-delete"></i>
                                            </span>
                                            <span class="cs-remove-activity-datatable-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                            <i class="icon-cs-new"></i>
                                            </div>
                                        </div>`
                                        $(filArrThis).find(".cs-filrow-addrlist-par").append(condHtml)
                            if (val.condVal != ""){
                                var dropcondHtml = `
                                    <div class="cs-pb-condion-label cs-badge-info cs-inline " data-cs-dropdown="#cs-pb-condition">
                                                <span class="cs-whitec cs-pull-left">${val.condVal}</span>
                                                <em class="cs-ts-21 cs-whitec icon-mat-arrow_drop_down"></em>
                                    </div>
                                            
                                    `
                                    $(filArrThis).find(".cond-active").append(dropcondHtml);
                                }
                            $(".cond-active").removeClass("cond-active")

                    });
                    $(".cond-append-act").removeClass("cond-append-act")

                    var val = filRtype;
                    if(val == "By Condition") {
                       $(this).closest(".cs-activityBlock").find(".cs-fil-row-con").addClass("cs-hide");
                       $(this).closest(".cs-activityBlock").find(".cs-filrow-addrlist-par").removeClass("cs-hide");
                       $(this).closest(".cs-activityBlock").find(".cs-fil-row-login-inp").addClass("cs-hide");
                       $(this).find("#filRowSelOpt").html("");
                       $(this).find("#filRowSelOpt").append(`
                            <option value="select2">By Condition</option>
                            <option value="select1">By Value</option>
                       `)
                    }
                    else {
                       $(this).closest(".cs-activityBlock").find(".cs-fil-row-con").removeClass("cs-hide");
                       $(this).closest(".cs-activityBlock").find(".cs-fil-row-login-inp").removeClass("cs-hide");
                       $(this).closest(".cs-activityBlock").find(".cs-filrow-addrlist-par").addClass("cs-hide");
                       $(this).find("#filRowSelOpt").html("");
                       $(this).find("#filRowSelOpt").append(`
                            <option value="select1">By Value</option>
                            <option value="select2">By Condition</option>
                       `)
                    }  

                }
                else if ($(this).hasClass("cs-mergeRowSty")) {
                    var merSource =  $(this).data("eachActivityVO").MergeRowActivityVo.Source;
                    var merDestination =  $(this).data("eachActivityVO").MergeRowActivityVo.Destination;
                    var allowDuplicateVal = $(this).data("eachActivityVO").MergeRowActivityVo.allowDuplicate;
                    var mergeThis = $(this);

                    $(this).find('.cs-mergerow-inp.cs-source input').val(merSource);
                    $(this).find('.cs-mergerow-inp.cs-destinaion input').val(merDestination);

                    $(mergeThis).find(".cs-dest-attr-par .cs-list").html("");
                    $.each($(this).data("eachActivityVO").MergeRowActivityVo.DestinationAttr, function(ind, val) {
                        if(val.destinationID != '' ) {
                        var destHtml = `
                                        <div class="cs-pad cs-list-row cs-cur cs-pr cs-flex cs-column-middle cs-row-between"><span class="cs-cell-23f cs-truncate">${val.destinationID}</span><span class="cs-tick"><em class="icon-cs-succeed-o"></em></span></div>
                                        `;
                        $(mergeThis).find(".cs-dest-attr-par .cs-list").append(destHtml);
                        $(mergeThis).find(".cs-mergerow-addrlist-par").removeClass("cs-hide");
                        }

                    });
                    $(mergeThis).find(".cs-sour-attr-par .cs-list").html("");
                    $.each($(this).data("eachActivityVO").MergeRowActivityVo.SourceAttr, function(ind, val) {
                        if(val.sourceID != '' ) {
                            var sourHtml = `
                                            <div class="cs-pad cs-list-row cs-cur cs-pr cs-flex cs-column-middle cs-row-between"><span class="cs-cell-23f cs-truncate">${val.sourceID}</span><span class="cs-tick"><em class="icon-cs-succeed-o"></em></span></div>
                                        `;
                        $(mergeThis).find(".cs-sour-attr-par .cs-list").append(sourHtml);
                        $(mergeThis).find(".cs-mergerow-addrlist-par").removeClass("cs-hide");
                        }
                    });
                    $(mergeThis).find(".cs-mapp-attr-par .cs-list").html("");
                    $.each($(this).data("eachActivityVO").MergeRowActivityVo.MappedAttr, function(ind, val) {
                        if(val.mappedSourceID != '' && val.mappedDestinationID != '') {
                            var sourHtml = `
                            <div class="cs-pad cs-com-mer-par cs-pb-sour-dest-par cs-pr cs-cell-24f">
                                <span class="cs-cell-9f cs-truncate cs-lmar cs-dest-txt">${val.mappedDestinationID}</span>
                                <span class="cs-hmar cs-cell-2f"><em class="icon-cs-mapping"></em></span>
                                <span class="cs-cell-9f cs-truncate cs-source-txt">${val.mappedSourceID}</span>
                                <span class="cs-pb-merge-del-clk cs-hide cs-cur cs-pa"><em class="icon-cs-delete"></em></span>
                            </div>
                            `;
                            $(mergeThis).find(".cs-mapp-attr-par .cs-list").append(sourHtml);
                        }
                        else if(val.mappedSourceID != '' ) {
                            var sourHtml = `
                                 <div class="cs-pad cs-com-mer-par cs-pb-sour-par cs-pr cs-cell-24f"><span class="cs-lmar cs-cell-22f cs-truncate cs-source-txt">${val.mappedSourceID}</span><span class="cs-hide cs-pb-merge-del-clk cs-cur cs-pa"><em class="icon-cs-delete"></em></span></div>
                            `;
                            $(mergeThis).find(".cs-mapp-attr-par .cs-list").append(sourHtml);
                            
                        }
                        else if(val.mappedDestinationID != '' ) {
                            var sourHtml = `
                                <div class="cs-pad cs-com-mer-par cs-pb-dest-par cs-pr cs-cell-24f"><span class="cs-lmar cs-cell-22f cs-truncate cs-dest-txt">${val.mappedDestinationID}</span><span class="cs-hide cs-pb-merge-del-clk cs-cur cs-pa"><em class="icon-cs-delete"></em></span></div>
                            `;
                            $(mergeThis).find(".cs-mapp-attr-par .cs-list").append(sourHtml);
                           
                        }
                       
                    });
                    
                    var val = allowDuplicateVal;
                    if(allowDuplicateVal == "Y") {
                        $(this).find(".cs-merge-inp").attr("checked","true");
                    }
                } 
                else if ($(this).hasClass("cs-eachRowSty")) {
                    // $(this).data("eachActivityVO").EachRowActivityVo.playbackActivityVOs = [];
                    var eachrowFor =  $(this).data("eachActivityVO").EachRowActivityVo.foreach;
                    var eachrowIn =  $(this).data("eachActivityVO").EachRowActivityVo.in;

                    $(this).find('.cs-eachrow-inp.cs-foreach input').val(eachrowFor);
                    $(this).find('.cs-eachrow-inp.cs-in input').val(eachrowIn);
                }
                else if ($(this).hasClass("cs-explicit-time_out")) {
                    
                    var getExpressionType = $(this).data("eachActivityVO").explicitActivityVO.expressionType;
                    var getOperator=  $(this).data("eachActivityVO").explicitActivityVO.operator
                    var getScreenShot = $(this).data("eachActivityVO").explicitActivityVO.isScreenshotRequired;
                    var getTym_value = $(this).data("eachActivityVO").explicitActivityVO.explct_wait_tymId;
                    var getLeftExprValue = $(this).data("eachActivityVO").explicitActivityVO.leftExpressionValue;
                // console.log(getTym_value)
                         $(this).find('.explct-wait-section input').val(getTym_value);
                         $(this).find('.cs-explct-opertr input').val(getOperator)
                       
                    
                //     if (getScreenShot == "N") {
                //         $(this).find(".cs-snapshot").trigger("click");
                //     }
                //     if (getExpressionType == "Standard") {
                //         var getOperator = $(this).data("eachActivityVO").explicitActivityVO.operator;
                //         if($(this).data("eachActivityVO").explicitActivityVO.rightExpressionType.substring(0, 3) == "Ima"){
                //             var getRightExprType = "Img";
                //             $(this).find('.cs-right-expr .cs-ab-textinput').hide();
                //             $(this).find('.cs-right-expr .cs-ab-imageinput').show();
                //             $(this).find('.cs-right-expr .cs-ab-imageinput img').attr('src' ,getRightExprValue )
                //         }
                //         else{
                //             var getRightExprType = $(this).data("eachActivityVO").explicitActivityVO.rightExpressionType.substring(0, 3);
                //             $(this).find(".cs-right-expr .cs-dd-exp-typ").text(getRightExprType);
                //             $(this).find(".cs-right-expr input").val(getRightExprValue);
    
                //         }
                //         if($(this).data("eachActivityVO").explicitActivityVO.leftExpressionType.substring(0, 3) == "Ima"){
                //             var getLeftExprType = "Img";
                //             $(this).find('.cs-left-expr .cs-ab-textinput').hide();
                //             $(this).find('.cs-left-expr .cs-ab-imageinput').show();
                //             $(this).find('.cs-left-expr .cs-ab-imageinput img').attr('src' ,getLeftExprValue )
                //         }
                //         else{
                //             var getLeftExprType = $(this).data("eachActivityVO").explicitActivityVO.leftExpressionType.substring(0, 3);
                //             $(this).find(".cs-left-expr .cs-dd-exp-typ").text(getLeftExprType);
                //             $(this).find(".cs-left-expr input").val(getLeftExprValue);
                //         }

                //         $(this).find(".cs-operator input").val(getOperator);
                //         $(this).find(".cs-error-message textarea").val(getMessage);

                //     } else if (getExpressionType == "Custom") {
                //         var getCustomExpression = $(this).data("eachActivityVO").explicitActivityVO.customExpression;
                //         $(this).find(".cs-cus-exp-tog").trigger("click");
                //         $(this).find(".cs-at-dd-expr-txtar textarea").val(getCustomExpression);
                //         $(this).find(".cs-error-message textarea").val(getMessage);
                //     }
                } 
            });
			$(".cs-playback-drop").each(function() {
				var thsleftname = $(this).find(".cs-at-playbackDisplayName").text();
				var parplybknm = $(".cs-at-pb-rightpanel .cs-at-box-playbackhead .cs-at-box-head-field").text();
				if(!(thsleftname == parplybknm)){
					$(this).addClass("cs-vardrop-active");
					$(".cs-playback-drop").each(function() {
						var allplname = $(this).find(".cs-at-droppedActivitiesName").text();
						
						if(thsleftname == allplname){
							var leftvar = $(this).data("eachActivityVO").entailPlaybackVO.variablesVOs;
							$(leftvar).each(function(objj, vall) {
								var varnamm = vall.variableName;
								var valuetypp = vall.dataType;
								var parmtyp = vall.paramType;
								var varData = leftvar[vall];
								var leftlisteachhtml = '<li class="clearfix cs-tspad cs-bspad cs-cur cs-pr">' +
									'<span class="clearfix cs-ts-14 cs-tw-600 cs-cell-20 cs-truncate cs-mapper-name">' + varnamm + '</span>' +
									'<span class="clearfix cs-ts-10 cs-cell-20 cs-truncate cs-mapper-type">' + valuetypp + '</span>' +
									'<span class="cs-pa cs-ts-11 cs-tw-600 cs-at-mappingeach">' +
									'<i class="icon-cs-succeed-o cs-greenc"></i>' +
									'</span>' +
									'</li>';
								leftlisteachhtml = $(leftlisteachhtml).data("VariableEachData",varData);
								var x = 0;
								$(".cs-vardrop-active .cs-at-mappedpart ul li").each(function() {
									var mapname = $(this).find(".cs-mapped-left").find(".cs-mapper-name").text();
									console.log(varnamm +"=="+ mapname);
									if(varnamm == mapname){
										x = 1;
										return false;
									}
								});
								if(x == 0){
									if(parmtyp == "IN"){
										$(".cs-vardrop-active").find("#var-in .cs-plbk-left-list").append(leftlisteachhtml);
									}else if(parmtyp == "OUT"){
										$(".cs-vardrop-active").find("#var-out .cs-plbk-left-list").append(leftlisteachhtml);
									}else if(parmtyp == "INOUT"){
										$(".cs-vardrop-active").find("#var-inout .cs-plbk-left-list").append(leftlisteachhtml);
									}
								}
								$(".cs-scroll-2,.cs-scroll").perfectScrollbar();
							});
							$(".cs-playback-drop").removeClass("cs-vardrop-active");
						}
					});
				}
			});
            $(".cs-header").trigger("click");
            dynaIdCheckBox()
            mainDroppable();
            acrivitiesDropable();
            iterationActivityDropable();
            conditnActivityDropable();
            setElementCount();
            contMainSortable();
            toggleDropArea();
            datatableDroppable();
            eachrowDroppable();
            excelAutomationDroppable();
            excelReadDroppable();
            $(".cs-scroll-2,.cs-scroll").perfectScrollbar();
        },100);
		$(".cs-at-cr-parent-copy").removeClass("cs-hide");
    });
}
// /* element action type popup list start*/
function eleactiontype(getThis) {
    var eletype = getThis.closest(".cs-each-element").attr("data-eletype");
    var eleimgtype = getThis.closest(".cs-image-element").attr("data-eletype");
    $(".cs-at-elemactntyp ul li").hide();
    $(".cs-at-elemactntyp ul li").each(function() {        
        var typ = $(this).attr("data-action");
        if (typ == eletype) {
            $(this).show();
        }
        if (typ == eleimgtype) {
            $(this).show();
        }
    });
}
function eleactiontypeclick(getThis) {
	$(".cs-dropdown-open").closest(".cs-each-element").find(".cs-elem-timeout").removeClass("cs-hide");
	$(".cs-dropdown-open").closest(".cs-image-element").find(".cs-elem-timeout").removeClass("cs-hide");
    if (!getThis.hasClass("cs-at-ele-no-val")) {
        $(".cs-dropdown-open").closest(".cs-each-element").find(".cs-at-ele-val-block").removeClass("cs-hide");
        $(".cs-dropdown-open").closest(".cs-image-element").find(".cs-at-ele-val-block").removeClass("cs-hide");
    } 
    else {
        $(".cs-dropdown-open").closest(".cs-each-element").find(".cs-at-ele-val-block").addClass("cs-hide");
        $(".cs-dropdown-open").closest(".cs-image-element").find(".cs-at-ele-val-block").addClass("cs-hide");
    }
}

/* element action type popup list end*/
/* non html attach toggle start*/
function nonhtmlattachtoggle() {
    if (($("#cs-at-non-html").prop("checked") == true)) {
        $(".cs-at-cr-fileupload").addClass("active");
    } else {
        $(".cs-at-cr-fileupload").removeClass("active");
    }
    $('.cs-at-cr-file-list').perfectScrollbar();
}
/* non html attach toggle end*/
/*playBacklist append in dd*/
	function playbknameappendinlist(){
		var plybklen = $(".cs-pb-ly-droparea .cs-playback-drop").length;
		if(plybklen > 1){
			$(".cs-pb-ly-droparea .cs-at-playbackDisplayName").removeClass("cs-disable");
		}
		$("#playbacklist-dd ul").html("");
		var plheadname = $(".cs-at-box-playbackhead .cs-at-box-head-field").text();
		var plhdhtml = '<li><a>'+plheadname+'</a></li>';
		$("#playbacklist-dd ul").append(plhdhtml);
		$(".cs-pb-ly-droparea .cs-playback-drop").each(function() {
			var plname = $(this).find(".cs-at-droppedActivitiesName").text();
			var pllisthtml = '<li><a>'+plname+'</a></li>';
			$("#playbacklist-dd ul").append(pllisthtml);
		});
		$(".cs-at-varmappinglistmain").tabs();
	}
/*playBacklist append in dd end*/



	// $(".cs-htmlcomponent-lists").height($(window).height() - 500 + "px");
    var arr = ["Ctrl","Alt","Shift","Esc","Tab","Enter","Delete","Spacebar","Backspace","Pageup","Pagedown","Home","End","Pause","Capslock","Printscreen","Windows","Next","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12",]

	$(document).on("keyup", ".cs-shortcutkeyentry", function(e) {
        var a, b, i, val = this.value;
        /*close any already open lists of autocompleted values*/
        console.log('val => ', val);
        if(val.includes("+")){
            val = val.split("+")[val.split("+").length-1]
        }
        closeAllLists();
        if (!val) { return false;}
        currentFocus = -1;
        a = document.createElement("DIV");
        a.setAttribute("id", this.id + "shortcut_key_list");
        a.setAttribute("class", "shortcut_key_items cs-scroll-2 cs-pr");

        this.parentNode.appendChild(a);
        for (i = 0; i < arr.length; i++) {
          if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
            b = document.createElement("DIV");
            b.classList.add('cs-key-list');
            b.innerHTML = "<span style='font-weight: 600;color: #000;'>" + arr[i].substr(0, val.length) + "</span>";
            b.innerHTML += arr[i].substr(val.length);
            b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";

            b.addEventListener("click", function(e) {
                var temp = '';

                if(this.parentElement.parentElement.getElementsByClassName('cs-shortcutkeyentry')[0].value.includes("+")){
                    // Split all
                    temp = this.parentElement.parentElement.getElementsByClassName('cs-shortcutkeyentry')[0].value.split('+');
                    // remove last value
                    temp.pop();
                    // concadinate all by keeping + after word
                    temp = temp.join('+')
                    // remove + from first Char
                }
                arr.value = this.getElementsByTagName("input")[0].value;
                var data = temp +'+'+ arr.value
                if( data.charAt( 0 ) === '+' ){
                    data = data.slice( 1 );
                }
                this.parentElement.parentElement.getElementsByClassName('cs-shortcutkeyentry')[0].value = data
                closeAllLists();
            });
            a.appendChild(b);
          }
        }
        $("#shortcut_key_list").perfectScrollbar();
    })

	$(document).on("keydown", ".cs-shortcutkeyentry", function(e) {
        var x = document.getElementById(this.id + "shortcut_key_list");
        if (x) x = x.getElementsByTagName("div");
        if (e.keyCode == 40) {
          /*If the arrow DOWN key is pressed,    
          increase the currentFocus variable:*/
          currentFocus++;
          /*and and make the current item more visible:*/
          addActive(x);
        } else if (e.keyCode == 38) { //up
          /*If the arrow UP key is pressed,
          decrease the currentFocus variable:*/
          currentFocus--;
          /*and and make the current item more visible:*/
          addActive(x);
        } else if (e.keyCode == 13) {
          /*If the ENTER key is pressed, prevent the form from being submitted,*/
          e.preventDefault();
          if (currentFocus > -1) {
            /*and simulate a click on the "active" item:*/
            if (x) x[currentFocus].click();
          }
        }
    })

    function addActive(x) {
        /*a function to classify an item as "active":*/
        if (!x) return false;
        /*start by removing the "active" class on all items:*/
        removeActive(x);
        if (currentFocus >= x.length) currentFocus = 0;
        if (currentFocus < 0) currentFocus = (x.length - 1);
        /*add class "autocomplete-active":*/
        x[currentFocus].classList.add("autocomplete-active");
    }
    function removeActive(x) {
        /*a function to remove the "active" class from all autocomplete items:*/
        for (var i = 0; i < x.length; i++) {
          x[i].classList.remove("autocomplete-active");
        }
    }
    function closeAllLists(elmnt) {
        /*close all autocomplete lists in the document,
        except the one passed as an argument:*/
        var x = document.getElementsByClassName("shortcut_key_items");
        for (var i = 0; i < x.length; i++) {
          if (elmnt != x[i] && elmnt != arr) {
            x[i].parentNode.removeChild(x[i]);
          }
        }
    }

    document.addEventListener("click", function (e) {
        closeAllLists(e.target);
    });

$(document).on('click','.cs-copy-elemtype', function(){
    var $temp = $("<input>");
    $("body").append($temp);
    let val = $(this).closest('.cs-at-layoutcontroweach').find('.cs-at-elementname').text().trim()
    $temp.val(val).select();
    document.execCommand("copy");
    $temp.remove();
})


$(document).on('click','.cs-remove-activity-add', function(){
    var conditionActivity = `
    <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">

                                        <div class="cs-pb-condion-label cs-badge-info" data-cs-dropdown="#cs-pb-condition">
                                        <span class="cs-whitec cs-pull-left">&&</span>
                                        <em class="cs-ts-21 cs-whitec icon-mat-arrow_drop_down"></em>
                                        </div>
                                        
                                        
                                        <div class="cs-cell-7">
                                            <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                                <label>Left Expression</label>
                                                <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                                <input type="text" placeholder="Select Expression" class="cs-ab-textinput" />
                                                <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                    <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="cs-cell-7">
                                            <div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                                <label>Operators</label>
                                                <input type="text" placeholder="Select Operators" class="cs-cond-opr" />
                                            </div>
                                        </div>
                                        <div class="cs-cell-7">
                                            <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                                <label>Right Expression</label>
                                                <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                                <input type="text" placeholder="Select Expression" class="cs-ab-textinput" />
                                                <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                    <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="cs-cell-3f">
                                        <span class="cs-remove-activity-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                                         <i class="icon-cs-delete"></i>
                                        </span>
                                        <span class="cs-remove-activity-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                        <i class="icon-cs-new"></i>
                                        </div>
                                    </div>
    `
    $(this).closest('.cs-at-dd-exprs').after(conditionActivity);

})

$(document).on('click','.cs-remove-activity-datatable-add', function(){
    var conditionActivity = `
    <div class="clearfix cs-at-dd-exprs cs-tmar cs-tpad">

                                        <div class="cs-pb-condion-label cs-badge-info" data-cs-dropdown="#cs-pb-condition">
                                        <span class="cs-whitec cs-pull-left">AND</span>
                                        <em class="cs-ts-21 cs-whitec icon-mat-arrow_drop_down"></em>
                                        </div>
                                        
                                        
                                        <div class="cs-cell-7">
                                            <div class="cs-input cs-var-el-dd-click cs-left-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele">
                                                <label>Attribute Name</label>
                                                <span class="cs-label cs-ts-10 cs-label-warning cs-lexp-typ cs-dd-exp-typ">Var</span>
                                                <input type="text" placeholder="Select Expression" class="cs-ab-textinput" />
                                                <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                    <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="cs-cell-7">
                                            <div class="cs-input cs-var-el-dd-click cs-operator cs-rad-none" data-cs-dropdown="#cs-at-leftexp" data-dd-type="opr">
                                                <label>Operators</label>
                                                <input type="text" placeholder="Select Operators" class="cs-cond-opr" />
                                            </div>
                                        </div>
                                        <div class="cs-cell-7">
                                            <div class="cs-input cs-var-el-dd-click cs-right-expr" data-cs-dropdown="#cs-at-leftexp" data-dd-type="var-ele-con">
                                                <label>Attribute Value</label>
                                                <span class="cs-label cs-ts-10 cs-label-warning cs-rexp-typ cs-dd-exp-typ">Var</span>
                                                <input type="text" placeholder="Select Expression" class="cs-ab-textinput" />
                                                <div class="cs-ab-insideimg cs-pad-sm cs-ab-imgappend-list cs-4x-radius cs-cur cs-ab-imageinput cs-hide">
                                                    <img src="" class="cs-lspad cs-rspad cs-ab-img-maxwidth" alt="">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="cs-cell-3f">
                                        <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                                         <i class="icon-cs-delete"></i>
                                        </span>
                                        <span class="cs-remove-activity-datatable-add cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur">
                                        <i class="icon-cs-new"></i>
                                        </div>
                                    </div>
    `
    $(this).closest('.cs-at-dd-exprs').after(conditionActivity);

})
$(document).on('click','#cs-pb-condition .cs-andor-operation', function(){
                var andOrOperation = $(this).text();
                $(this).addClass("cs-hide");
                $(".cs-pb-condion-label.cs-dropdown-open").find("span").text(andOrOperation);
                $(document).trigger("click");
})

$(document).on('click','.cs-pb-condion-label', function(){
    $("#cs-pb-condition").find('.cs-andor-operation').removeClass("cs-hide");
    var getTheAndOrOperationValue = $(this).find("span").text();
    var selectedOprText = "";
    if(getTheAndOrOperationValue == "&&"){
        selectedOprText = "and";
    }else if(getTheAndOrOperationValue == "||"){
        selectedOprText = "or";
    }
    $("#cs-pb-condition").find('.cs-'+selectedOprText.toLowerCase()+'-opration').addClass("cs-hide");
})

$(document).on('click','.cs-remove-activity-del', function(){
    if($(this).closest('.cs-add-exp-blk').find(".cs-at-dd-exprs").length == 1){
        $(this).closest('.cs-at-dd-exprs').find(".cs-ab-textinput").val("");
        $(this).closest('.cs-at-dd-exprs').find(".cs-cond-opr").val("");
       
    }
    // else if($(this).closest('.cs-add-exp-blk').find(".cs-at-dd-exprs")){
    //     $(this).closest('.cs-at-dd-exprs').remove(".cs-pb-condion-label");
    //     $(this).closest('.cs-at-dd-exprs').remove(".cs-dropdown");
    // }   
    else{
        if($(this).closest('.cs-at-dd-exprs').prev().hasClass("cs-at-dd-exprs")){
            console.log(10)
            $(this).closest('.cs-at-dd-exprs').remove();
        }else{
            console.log(11);
            $(this).closest('.cs-at-dd-exprs').next().find(".cs-pb-condion-label").remove();
            $(this).closest('.cs-at-dd-exprs').next().find(".cs-dropdown").remove()
            $(this).closest('.cs-at-dd-exprs').remove();
        }
        
    }    
});
$(document).on('click','.cs-remove-activity-datatable-del', function(){
    if($(this).closest(".cs-at-dd-exprs").siblings().length < 1){
        $(this).closest('.cs-at-dd-exprs').find(".cs-ab-textinput").val("");
        $(this).closest('.cs-at-dd-exprs').find(".cs-cond-opr").val("");
       
    }
    // else if($(this).closest('.cs-add-exp-blk').find(".cs-at-dd-exprs")){
    //     $(this).closest('.cs-at-dd-exprs').remove(".cs-pb-condion-label");
    //     $(this).closest('.cs-at-dd-exprs').remove(".cs-dropdown");
    // }   
    else{
        if($(this).closest('.cs-at-dd-exprs').prev().hasClass("cs-at-dd-exprs")){
            console.log(10)
            $(this).closest('.cs-at-dd-exprs').remove();
        }else{
            console.log(11);
            $(this).closest('.cs-at-dd-exprs').next().find(".cs-pb-condion-label").remove();
            $(this).closest('.cs-at-dd-exprs').next().find(".cs-dropdown").remove()
            $(this).closest('.cs-at-dd-exprs').remove();
        }
        
    }    
});
$(document).on('change', '.addRowSelOpt', function() {
    var val = $(this).find("option:selected").text();
    if(val == "Data Row") {
        $(this).closest(".cs-activityBlock").find(".cs-addrow-addrlist-par").removeClass("cs-hide");
        $(this).closest(".cs-activityBlock").find(".cs-add-row-login-inp").addClass("cs-hide");
    }
    else {
        $(this).closest(".cs-activityBlock").find(".cs-add-row-login-inp").removeClass("cs-hide");
        $(this).closest(".cs-activityBlock").find(".cs-addrow-addrlist-par").addClass("cs-hide");
    }  
});
$(document).on('change', '#remRowSelOpt', function() {
    var val = $(this).find("option:selected").text();
    if(val == "Row") {
        $(this).closest(".cs-activityBlock").find(".cs-remrow-addrlist-par").removeClass("cs-hide");
        $(this).closest(".cs-activityBlock").find(".cs-rem-row-login-inp").addClass("cs-hide");
    }
    else {
        $(this).closest(".cs-activityBlock").find(".cs-rem-row-login-inp").removeClass("cs-hide");
        $(this).closest(".cs-activityBlock").find(".cs-remrow-addrlist-par").addClass("cs-hide");
    }  
});
$(document).on('change', '#uptRowSelOpt', function() {
    var val = $(this).find("option:selected").text();
    if(val == "Data Row") {
        $(this).closest(".cs-activityBlock").find(".cs-uptrow-addrlist-par").removeClass("cs-hide");
        $(this).closest(".cs-activityBlock").find(".cs-upt-row-login-inp").addClass("cs-hide");
        $(this).closest(".cs-activityBlock").find(".cs-row-con-par").addClass("cs-hide");
    }
    else {
        $(this).closest(".cs-activityBlock").find(".cs-upt-row-login-inp").removeClass("cs-hide");
        $(this).closest(".cs-activityBlock").find(".cs-uptrow-addrlist-par").addClass("cs-hide");
        $(this).closest(".cs-activityBlock").find(".cs-row-con-par").removeClass("cs-hide");
    }  
});
$(document).on('change', '#filRowSelOpt', function() {
    var val = $(this).find("option:selected").text();
    if(val == "By Condition") {
       $(this).closest(".cs-activityBlock").find(".cs-fil-row-con").addClass("cs-hide");
       $(this).closest(".cs-activityBlock").find(".cs-filrow-addrlist-par").removeClass("cs-hide");
       $(this).closest(".cs-activityBlock").find(".cs-fil-row-login-inp").addClass("cs-hide");
    }
    else {
       $(this).closest(".cs-activityBlock").find(".cs-fil-row-con").removeClass("cs-hide");
       $(this).closest(".cs-activityBlock").find(".cs-fil-row-login-inp").removeClass("cs-hide");
       $(this).closest(".cs-activityBlock").find(".cs-filrow-addrlist-par").addClass("cs-hide");
    }  
});
$(document).on("change", ".cs-merge-inp", function(){
    if($(this).prop('checked')){
        $(this).closest(".cs-mergeRowSty").data("eachActivityVO").MergeRowActivityVo.allowDuplicate = "Y";
    }
    else {
        $(this).closest(".cs-mergeRowSty").data("eachActivityVO").MergeRowActivityVo.allowDuplicate = "N";
    }
});

$(document).on('click','.cs-mergerow-addrlist-par .cs-list-row', function(){
    $(this).parent().find(".cs-list-row").removeClass("active");
    $(this).toggleClass("active");
});
$(document).on('click','.cs-mergerow-addrlist-par .cs-list-row.active', function(){
        $(this).removeClass("active");
});
$(document).on('click','.cs-merge-mapper-ic-pos', function(){
    var destTxt = $(this).closest(".cs-mergerow-addrlist-par").find(".cs-dest-attr-par").find(".cs-list-row.active").text();
    var sourTxt = $(this).closest(".cs-mergerow-addrlist-par").find(".cs-sour-attr-par").find(".cs-list-row.active").text();
    if(sourTxt != "" && destTxt != ""){
        $(this).closest(".cs-mergerow-addrlist-par").find(".cs-mapp-attr-par .cs-list").append(
            `
            <div class="cs-pad cs-com-mer-par cs-pb-sour-dest-par cs-pr cs-cell-24f">
                <span class="cs-cell-9f cs-truncate cs-lmar cs-dest-txt">${destTxt}</span>
                <span class="cs-hmar cs-cell-2f"><em class="icon-cs-mapping"></em></span>
                <span class="cs-cell-9f cs-truncate cs-source-txt">${sourTxt}</span>
                <span class="cs-pb-merge-del-clk cs-hide cs-cur cs-pa"><em class="icon-cs-delete"></em></span>
            </div>
            `
        )
    }
    else if ($(this).closest(".cs-sour-attr-par").find(".cs-list-row.active").text() != ""){
        $(this).closest(".cs-sour-attr-par").parent().find(".cs-mapp-attr-par .cs-list").append(
            `
            <div class="cs-pad cs-com-mer-par cs-pb-sour-par cs-pr cs-cell-24f">
            <span class="cs-lmar cs-cell-22f cs-truncate cs-source-txt">${sourTxt}</span>
            <span class="cs-hide cs-pb-merge-del-clk cs-cur cs-pa"><em class="icon-cs-delete"></em></span>
            </div>
            `
        )
    }
    else if ($(this).closest(".cs-sour-attr-par").prev(".cs-dest-attr-par").find(".cs-list-row.active").text() != ""){
        $(this).closest(".cs-sour-attr-par").parent().find(".cs-mapp-attr-par .cs-list").append(
            `
            <div class="cs-pad cs-com-mer-par cs-pb-dest-par cs-pr cs-cell-24f"><span class="cs-lmar cs-cell-22f cs-truncate cs-dest-txt">${destTxt}</span><span class="cs-hide cs-pb-merge-del-clk cs-cur cs-pa"><em class="icon-cs-delete"></em></span></div>
            `
        )
    }
    $(this).closest(".cs-mergerow-addrlist-par").find(".cs-dest-attr-par").find(".cs-list-row.active").remove();
    $(this).closest(".cs-mergerow-addrlist-par").find(".cs-sour-attr-par").find(".cs-list-row.active").remove();
    $(".cs-list-row").removeClass("active");
});

$(document).on('click','.cs-pb-mapp-clk', function(){
    var dVal = $(this).closest(".cs-mergeRowSty").find(".cs-destinaion input").val();
    var sVal = $(this).closest(".cs-mergeRowSty").find(".cs-source input").val();
    if($(this).closest(".cs-mergeRowSty").find(".cs-destinaion input").val() != ""){
        $(this).closest(".cs-mergeRowSty").find(".cs-dest-attr-par .cs-list").append(`
            <div class="cs-pad cs-list-row cs-cur cs-pr cs-flex cs-column-middle cs-row-between"><span class="cs-cell-23f cs-truncate">${dVal}</span><span class="cs-tick"><em class="icon-cs-succeed-o"></em></span></div>
        `);
        $(this).closest(".cs-mergeRowSty").find(".cs-mergerow-addrlist-par").removeClass("cs-hide");
    }
    if($(this).closest(".cs-mergeRowSty").find(".cs-source input").val() != "") {
        $(this).closest(".cs-mergeRowSty").find(".cs-sour-attr-par .cs-list").append(`
            <div class="cs-pad cs-list-row cs-cur cs-pr cs-flex cs-column-middle cs-row-between"><span class="cs-cell-23f cs-truncate">${sVal}</span><span class="cs-tick"><em class="icon-cs-succeed-o"></em></span></div>
        `);
        $(this).closest(".cs-mergeRowSty").find(".cs-mergerow-addrlist-par").removeClass("cs-hide");
    }
    $(this).closest(".cs-mergeRowSty").find(".cs-destinaion input").val("");
    $(this).closest(".cs-mergeRowSty").find(".cs-source input").val("");
    $(".cs-list").perfectScrollbar();
});

$(document).on('click','.cs-pb-merge-del-clk', function(){
    var Dtxt = $(this).parent().find(".cs-dest-txt").text();
    var Stxt = $(this).parent().find(".cs-source-txt").text();
    if($(this).parent().find(".cs-dest-txt").text() != ""){
        $(this).closest(".cs-mergerow-addrlist-par").find(".cs-dest-attr-par .cs-list").append(`
        <div class="cs-pad cs-list-row cs-cur cs-pr cs-flex cs-column-middle cs-row-between"><span class="cs-cell-23f cs-truncate">${Dtxt}</span><span class="cs-tick"><em class="icon-cs-succeed-o"></em></span></div>
        `)
    }
    if($(this).parent().find(".cs-source-txt").text() != ""){
        $(this).closest(".cs-mergerow-addrlist-par").find(".cs-sour-attr-par .cs-list").append(`
        <div class="cs-pad cs-list-row cs-cur cs-pr cs-flex cs-column-middle cs-row-between"><span class="cs-cell-23f cs-truncate">${Stxt}</span><span class="cs-tick"><em class="icon-cs-succeed-o"></em></span></div>
        `)
    }
    $(this).parent().remove();
});
$(document).on('change','.cs-excel-file-inp', function(){
    var fVal = $(this).val();
    $(this).closest(".cs-excel-act-file-loc").find(".cs-exc-sel-file-loc-val").val(fVal);
});
$(document).on('click','.cs-advanced-pivotField-del-add-sty .cs-remove-activity-datatable-add', function(){
    var pvotList = `<div class="cs-advanced-pivotField-list cs-cell-24f">
    <div class="cs-cell-8">
        <div class="cs-input cs-advanced-Field">
        <label>Field</label><input type="text">
    </div>
    </div>
    <div class="cs-cell-8">
        <div class="cs-input cs-advanced-Isa">
        <label>Is a</label>
        <select>
            <option value="Row">Row</option>
            <option value="Column">Column</option>
            <option value="Value">Value</option>
            <option value="Filter">Filter</option>
        </select>
        </div>
    </div>
    <div class="cs-cell-3f cs-flex cs-advanced-pivotField-del-add-sty">
        <div class="cs-lmar">
            <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur"><i class="icon-cs-delete"></i></span>
            <span class="cs-cur cs-inline cs-remove-activity-datatable-add cs-rsmar cs-tsmar"><i class="icon-cs-new"></i></span>
        </div>                        
    </div>
<div>`
$(this).closest(".cs-advanced-pivotField-par").append(pvotList);
});
$(document).on('click','.cs-advanced-pivotField-del-add-sty .cs-remove-activity-datatable-del', function(){
    var len = $(this).closest(".cs-advanced-pivotField-par").find(".cs-advanced-pivotField-list").length
    if(len > 1) {
        $(this).closest(".cs-advanced-pivotField-list").remove();
    }
});
$(document).on('click','.cs-filter-BasicFilter-del-add-sty .cs-remove-activity-datatable-add', function(){
    var pvotList = `
    <div class="cs-filter-pivotField-list cs-cell-24f">
                            <div class="cs-cell-8">
                                <div class="cs-input cs-filter-isEqTo">
                                <label>Is Equal to</label><input type="text">
                            </div>
                            </div>
                            <div class="cs-cell-3f cs-flex cs-filter-BasicFilter-del-add-sty">
                                <div class="cs-lmar">
                                    <span class="cs-remove-activity-datatable-del cs-inline cs-lsmar cs-rsmar cs-tsmar cs-cur"><i class="icon-cs-delete"></i></span>
                                    <span class="cs-cur cs-inline cs-remove-activity-datatable-add cs-rsmar cs-tsmar"><i class="icon-cs-new"></i></span>
                                </div>                        
                            </div>
                        </div>
    `
$(this).closest(".cs-filter-BasicFilter-par").append(pvotList);
});
$(document).on('click','.cs-filter-BasicFilter-del-add-sty .cs-remove-activity-datatable-del', function(){
    var len = $(this).closest(".cs-filter-BasicFilter-par").find(".cs-filter-pivotField-list").length
    if(len > 1) {
        $(this).closest(".cs-filter-pivotField-list").remove();
    }
});
$(document).on('change', '.manupulationGroup', function() {
    var val = $(this).find("option:selected").text();
    if(val == "Append Range") {
        $(this).closest(".cs-excel-manipulation-child").find(".cs-manupulation-common").addClass("cs-hide");
        $(this).closest(".cs-excel-manipulation-child").find(".cs-man-append-range-par").removeClass("cs-hide");
    }
    else if(val == "Clear Sheet/Range/Table") {
        $(this).closest(".cs-excel-manipulation-child").find(".cs-manupulation-common").addClass("cs-hide");
        $(this).closest(".cs-excel-manipulation-child").find(".cs-man-clear-sheetrange-par").removeClass("cs-hide");
    }  
    else if(val == "Copy/Paste Range") {
        $(this).closest(".cs-excel-manipulation-child").find(".cs-manupulation-common").addClass("cs-hide");
        $(this).closest(".cs-excel-manipulation-child").find(".cs-man-copypaste-range-par").removeClass("cs-hide");
    }
    else if(val == "Fill Range") {
        $(this).closest(".cs-excel-manipulation-child").find(".cs-manupulation-common").addClass("cs-hide");
        $(this).closest(".cs-excel-manipulation-child").find(".cs-man-fillrange-par").removeClass("cs-hide");
    }
    else if(val == "Find/Replace Value") {
        $(this).closest(".cs-excel-manipulation-child").find(".cs-manupulation-common").addClass("cs-hide");
        $(this).closest(".cs-excel-manipulation-child").find(".cs-man-findreplace-par").removeClass("cs-hide");
    }
});
$(document).on('change', '.advancedGroup', function() {
    var val = $(this).find("option:selected").text();
    if(val == "Create Pivot Table") {
        $(this).closest(".cs-excel-advanced-act-child").find(".cs-Advanced-common").addClass("cs-hide");
        $(this).closest(".cs-excel-advanced-act-child").find(".cs-advanced-creatr-pivot-par").removeClass("cs-hide");
    }
    else if(val == "Lookup") {
        $(this).closest(".cs-excel-advanced-act-child").find(".cs-Advanced-common").addClass("cs-hide");
        $(this).closest(".cs-excel-advanced-act-child").find(".cs-advanced-Lookup-par").removeClass("cs-hide");
    }  
    else if(val == "Run Spreadsheet Macro") {
        $(this).closest(".cs-excel-advanced-act-child").find(".cs-Advanced-common").addClass("cs-hide");
        $(this).closest(".cs-excel-advanced-act-child").find(".cs-advanced-runspreadsheetmacro-par").removeClass("cs-hide");
    }
    else if(val == "Invoke VBA") {
        $(this).closest(".cs-excel-advanced-act-child").find(".cs-Advanced-common").addClass("cs-hide");
        $(this).closest(".cs-excel-advanced-act-child").find(".cs-advanced-InvokeVBA-par").removeClass("cs-hide");
    }
});
$(document).on('change', '.deleteGroup', function() {
    var val = $(this).find("option:selected").text();
    if(val == "Delete Column") {
        $(this).closest(".cs-excel-delete-child").find(".cs-delete-common").addClass("cs-hide");
        $(this).closest(".cs-excel-delete-child").find(".cs-delete-column-par").removeClass("cs-hide");
    }
    else if(val == "Delete Rows") {
        $(this).closest(".cs-excel-delete-child").find(".cs-delete-common").addClass("cs-hide");
        $(this).closest(".cs-excel-delete-child").find(".cs-delete-rows-par").removeClass("cs-hide");
    }  
    else if(val == "Delete Sheet") {
        $(this).closest(".cs-excel-delete-child").find(".cs-delete-common").addClass("cs-hide");
        $(this).closest(".cs-excel-delete-child").find(".cs-delete-sheet-par").removeClass("cs-hide");
    }
});
$(document).on('change', '.filterGroup', function() {
    var val = $(this).find("option:selected").text();
    if(val == "Filter") {
        $(this).closest(".cs-excel-filter-act-child").find(".cs-filter-common").addClass("cs-hide");
        $(this).closest(".cs-excel-filter-act-child").find(".cs-filter-par").removeClass("cs-hide");
    }
    else if(val == "Filter Pivot Table") {
        $(this).closest(".cs-excel-filter-act-child").find(".cs-filter-common").addClass("cs-hide");
        $(this).closest(".cs-excel-filter-act-child").find(".cs-filter-pivotTable-par").removeClass("cs-hide");
    }
});
$(document).on('change', '.readGroup', function() {
    var val = $(this).find("option:selected").text();
    if(val == "For Each Excel Row") {
        $(this).closest(".cs-excel-read-act-child").find(".cs-read-common").addClass("cs-hide");
        $(this).closest(".cs-excel-read-act-child").find(".cs-read-forEacExcelRow-par").removeClass("cs-hide");
    }
    else if(val == "Read Cell Formula/Table") {
        $(this).closest(".cs-excel-read-act-child").find(".cs-read-common").addClass("cs-hide");
        $(this).closest(".cs-excel-read-act-child").find(".cs-read-readCellFormula-par").removeClass("cs-hide");
    }
    else if(val == "Read Cell Value") {
        $(this).closest(".cs-excel-read-act-child").find(".cs-read-common").addClass("cs-hide");
        $(this).closest(".cs-excel-read-act-child").find(".cs-read-readCellValue-par").removeClass("cs-hide");
    }
    else if(val == "Read Range") {
        $(this).closest(".cs-excel-read-act-child").find(".cs-read-common").addClass("cs-hide");
        $(this).closest(".cs-excel-read-act-child").find(".cs-read-readRange-par").removeClass("cs-hide");
    }
});
$(document).on('change', '.chartGroup', function() {
    var val = $(this).find("option:selected").text();
    if(val == "Get Excel Chart") {
        $(this).closest(".cs-excel-chart-child").find(".cs-chart-common").addClass("cs-hide");
        $(this).closest(".cs-excel-chart-child").find(".cs-chart-getExcel-par").removeClass("cs-hide");
    }
    else if(val == "Insert Chart") {
        $(this).closest(".cs-excel-chart-child").find(".cs-chart-common").addClass("cs-hide");
        $(this).closest(".cs-excel-chart-child").find(".cs-chart-insert-par").removeClass("cs-hide");
    }
});
$(document).on('change', '.insertGroup', function() {
    var val = $(this).find("option:selected").text();
    if(val == "Insert Column") {
        $(this).closest(".cs-excel-insert-child").find(".cs-insert-common").addClass("cs-hide");
        $(this).closest(".cs-excel-insert-child").find(".cs-insert-Col-par").removeClass("cs-hide");
    }
    else if(val == "Insert Rows") {
        $(this).closest(".cs-excel-insert-child").find(".cs-insert-common").addClass("cs-hide");
        $(this).closest(".cs-excel-insert-child").find(".cs-insert-Rows-par").removeClass("cs-hide");
    }
    else if(val == "Insert Sheet") {
        $(this).closest(".cs-excel-insert-child").find(".cs-insert-common").addClass("cs-hide");
        $(this).closest(".cs-excel-insert-child").find(".cs-insert-Sheet-par").removeClass("cs-hide");
    }
});
$(document).on('change', '.saveGroup', function() {
    var val = $(this).find("option:selected").text();
    if(val == "Save Excel File As") {
        $(this).closest(".cs-excel-save-child").find(".cs-Save-common").addClass("cs-hide");
        $(this).closest(".cs-excel-save-child").find(".cs-SaveExcelFileAs-par").removeClass("cs-hide");
    }
    else if(val == "Save Excel File") {
        $(this).closest(".cs-excel-save-child").find(".cs-Save-common").addClass("cs-hide");
        $(this).closest(".cs-excel-save-child").find(".cs-SaveExcelFile-par").removeClass("cs-hide");
    }
    else if(val == "Save Excel File As PDF") {
        $(this).closest(".cs-excel-save-child").find(".cs-Save-common").addClass("cs-hide");
        $(this).closest(".cs-excel-save-child").find(".cs-SaveExcelFileAsPDF-par").removeClass("cs-hide");
    }
});
$(document).on('change', '.writeGroup', function() {
    var val = $(this).find("option:selected").text();
    if(val == "DataTable to Excel") {
        $(this).closest(".cs-excel-write-child").find(".cs-write-common").addClass("cs-hide");
        $(this).closest(".cs-excel-write-child").find(".cs-write-DataTabletoExcel-par").removeClass("cs-hide");
    }
    else if(val == "Write Cell") {
        $(this).closest(".cs-excel-write-child").find(".cs-write-common").addClass("cs-hide");
        $(this).closest(".cs-excel-write-child").find(".cs-write-WriteCell-par").removeClass("cs-hide");
    }
});